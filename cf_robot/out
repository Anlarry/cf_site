{'pro_id': '1257G', 'name': 'Divisor Set', 'tags': ['divide and conquer', 'fft', 'greedy', 'math', 'number theory'], 'dif': '2700'}
{'pro_id': '1257F', 'name': 'Make Them Similar', 'tags': ['bitmasks', 'brute force', 'hashing', 'meet-in-the-middle'], 'dif': '2400'}
{'pro_id': '1257E', 'name': 'The Contest', 'tags': ['data structures', 'dp', 'greedy'], 'dif': '2000'}
{'pro_id': '1257D', 'name': 'Yet Another Monster Killing Problem', 'tags': ['binary search', 'data structures', 'dp', 'greedy', 'sortings', 'two pointers'], 'dif': '1700'}
{'pro_id': '1257C', 'name': 'Dominated Subarray', 'tags': ['greedy', 'implementation', 'sortings', 'strings', 'two pointers'], 'dif': '1200'}
{'pro_id': '1257B', 'name': 'Magic Stick', 'tags': ['math'], 'dif': '1000'}
{'pro_id': '1257A', 'name': 'Two Rival Students', 'tags': ['greedy', 'math'], 'dif': '700'}
{'pro_id': '1256F', 'name': 'Equalizing Two Strings', 'tags': ['constructive algorithms', 'sortings', 'strings'], 'dif': '2200'}
{'pro_id': '1256E', 'name': 'Yet Another Division Into Teams', 'tags': ['dp', 'greedy', 'sortings'], 'dif': '2200'}
{'pro_id': '1256D', 'name': 'Binary String Minimizing', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '1256C', 'name': 'Platforms Jumping', 'tags': ['greedy'], 'dif': '1700'}
{'pro_id': '1256B', 'name': 'Minimize the Permutation', 'tags': ['greedy'], 'dif': '1400'}
{'pro_id': '1256A', 'name': 'Payment Without Change', 'tags': ['math'], 'dif': '1000'}
{'pro_id': '1255C', 'name': 'League of Leesins', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1600'}
{'pro_id': '1255B', 'name': 'Fridge Lockers', 'tags': ['graphs', 'implementation'], 'dif': '1200'}
{'pro_id': '1255A', 'name': 'Changing Volume', 'tags': ['math'], 'dif': '800'}
{'pro_id': '1254E', 'name': 'Send Tree to Charlie', 'tags': ['combinatorics', 'dfs and similar', 'dsu', 'trees'], 'dif': '3200'}
{'pro_id': '1254D', 'name': 'Tree Queries', 'tags': ['data structures', 'probabilities', 'trees'], 'dif': '2600'}
{'pro_id': '1254C', 'name': 'Point Ordering', 'tags': ['constructive algorithms', 'geometry', 'interactive', 'math'], 'dif': '2300'}
{'pro_id': '1254B2', 'name': 'Send Boxes to Alice (Hard Version)', 'tags': ['constructive algorithms', 'greedy', 'math', 'number theory', 'ternary search', 'two pointers'], 'dif': '2100'}
{'pro_id': '1254B1', 'name': 'Send Boxes to Alice (Easy Version)', 'tags': ['constructive algorithms', 'greedy', 'math', 'number theory', 'ternary search', 'two pointers'], 'dif': '2000'}
{'pro_id': '1254A', 'name': 'Feeding Chicken', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1900'}
{'pro_id': '1253F', 'name': 'Cheap Robot', 'tags': ['binary search', 'dsu', 'graphs', 'shortest paths', 'trees'], 'dif': '2600'}
{'pro_id': '1253E', 'name': 'Antenna Coverage', 'tags': ['data structures', 'dp', 'greedy', 'sortings'], 'dif': '2200'}
{'pro_id': '1253D', 'name': 'Harmonious Graph', 'tags': ['constructive algorithms', 'dfs and similar', 'dsu', 'graphs', 'greedy', 'sortings'], 'dif': '1700'}
{'pro_id': '1253C', 'name': 'Sweets Eating', 'tags': ['dp', 'greedy', 'math', 'sortings'], 'dif': '1500'}
{'pro_id': '1253B', 'name': 'Silly Mistake', 'tags': ['greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '1253A', 'name': 'Single Push', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '1252L', 'name': 'Road Construction', 'tags': ['flows', 'graphs'], 'dif': '2600'}
{'pro_id': '1252K', 'name': 'Addition Robot', 'tags': ['data structures', 'math', 'matrices'], 'dif': '2200'}
{'pro_id': '1252J', 'name': 'Tiling Terrace', 'tags': ['brute force', 'dp'], 'dif': '2600'}
{'pro_id': '1252I', 'name': 'Mission Possible', 'tags': [], 'dif': '3200'}
{'pro_id': '1252H', 'name': 'Twin Buildings', 'tags': ['greedy', 'implementation'], 'dif': '1900'}
{'pro_id': '1252G', 'name': 'Performance Review', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '1252F', 'name': 'Regular Forestation', 'tags': ['hashing', 'trees'], 'dif': '2500'}
{'pro_id': '1252E', 'name': 'Songwriter', 'tags': ['greedy', 'two pointers'], 'dif': '2300'}
{'pro_id': '1252D', 'name': 'Find String in a Grid', 'tags': ['data structures', 'dp', 'strings', 'trees'], 'dif': '2900'}
{'pro_id': '1252C', 'name': 'Even Path', 'tags': ['data structures', 'implementation'], 'dif': '1600'}
{'pro_id': '1252B', 'name': 'Cleaning Robots', 'tags': ['dp', 'trees'], 'dif': '2600'}
{'pro_id': '1252A', 'name': 'Copying Homework', 'tags': [], 'dif': '1000'}
{'pro_id': '1251F', 'name': 'Red-White Fence', 'tags': ['combinatorics', 'fft'], 'dif': '2600'}
{'pro_id': '1251E2', 'name': 'Voting (Hard Version)', 'tags': ['binary search', 'data structures', 'greedy'], 'dif': '2300'}
{'pro_id': '1251E1', 'name': 'Voting (Easy Version)', 'tags': ['data structures', 'dp', 'greedy'], 'dif': '2200'}
{'pro_id': '1251D', 'name': 'Salary Changing', 'tags': ['binary search', 'greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '1251C', 'name': 'Minimize The Integer', 'tags': ['greedy', 'two pointers'], 'dif': '1500'}
{'pro_id': '1251B', 'name': 'Binary Palindromes', 'tags': ['greedy', 'strings'], 'dif': '1400'}
{'pro_id': '1251A', 'name': 'Broken Keyboard', 'tags': ['brute force', 'strings', 'two pointers'], 'dif': '1000'}
{'pro_id': '1250N', 'name': 'Wires', 'tags': ['dfs and similar', 'graphs', 'greedy'], 'dif': '2200'}
{'pro_id': '1250M', 'name': 'SmartGarden', 'tags': ['constructive algorithms', 'divide and conquer'], 'dif': '2700'}
{'pro_id': '1250L', 'name': 'Divide The Students', 'tags': ['binary search', 'greedy', 'math'], 'dif': '1700'}
{'pro_id': '1250K', 'name': 'Projectors', 'tags': ['flows', 'graphs'], 'dif': '3200'}
{'pro_id': '1250J', 'name': 'The Parade', 'tags': ['binary search', 'greedy'], 'dif': '1900'}
{'pro_id': '1250I', 'name': 'Show Must Go On', 'tags': ['binary search', 'brute force', 'greedy', 'shortest paths'], 'dif': '3100'}
{'pro_id': '1250H', 'name': 'Happy Birthday', 'tags': ['math'], 'dif': '1500'}
{'pro_id': '1250G', 'name': 'Discarding Game', 'tags': ['dp', 'greedy', 'two pointers'], 'dif': '2400'}
{'pro_id': '1250F', 'name': 'Data Center', 'tags': ['brute force', 'implementation'], 'dif': '1000'}
{'pro_id': '1250E', 'name': 'The Coronation', 'tags': ['graphs', 'implementation'], 'dif': '2500'}
{'pro_id': '1250D', 'name': 'Conference Problem', 'tags': ['dp'], 'dif': '3100'}
{'pro_id': '1250C', 'name': 'Trip to Saint Petersburg', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '1250B', 'name': 'The Feast and the Bus', 'tags': ['brute force', 'constructive algorithms', 'greedy', 'math'], 'dif': '1900'}
{'pro_id': '1250A', 'name': 'Berstagram', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '1249F', 'name': 'Maximum Weight Subset', 'tags': ['dp', 'trees'], 'dif': '2500'}
{'pro_id': '1249E', 'name': 'By Elevator or Stairs?', 'tags': ['dp', 'shortest paths'], 'dif': '1700'}
{'pro_id': '1249D2', 'name': 'Too Many Segments (hard version)', 'tags': ['data structures', 'greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '1249D1', 'name': 'Too Many Segments (easy version)', 'tags': ['greedy'], 'dif': '1900'}
{'pro_id': '1249C2', 'name': 'Good Numbers (hard version)', 'tags': ['binary search', 'greedy', 'math', 'meet-in-the-middle'], 'dif': '1500'}
{'pro_id': '1249C1', 'name': 'Good Numbers (easy version)', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '1249B2', 'name': 'Books Exchange (hard version)', 'tags': ['dfs and similar', 'dsu', 'math'], 'dif': '1300'}
{'pro_id': '1249B1', 'name': 'Books Exchange (easy version)', 'tags': ['dsu', 'math'], 'dif': '1000'}
{'pro_id': '1249A', 'name': 'Yet Another Dividing into Teams', 'tags': ['math'], 'dif': '900'}
{'pro_id': '1248D1', 'name': 'The World Is Just a Programming Task (Easy Version)', 'tags': ['brute force', 'dp', 'greedy', 'implementation'], 'dif': '1900'}
{'pro_id': '1248B', 'name': 'Grow The Tree', 'tags': ['greedy', 'math', 'sortings'], 'dif': '900'}
{'pro_id': '1248A', 'name': 'Integer Points', 'tags': ['geometry', 'math'], 'dif': '900'}
{'pro_id': '1246F', 'name': 'Cursor Distance', 'tags': [], 'dif': '3400'}
{'pro_id': '1245F', 'name': 'Daniel and Spring Cleaning', 'tags': ['bitmasks', 'brute force', 'combinatorics', 'dp'], 'dif': '2300'}
{'pro_id': '1245E', 'name': 'Hyakugoku and Ladders', 'tags': ['dp', 'probabilities', 'shortest paths'], 'dif': '2300'}
{'pro_id': '1245D', 'name': 'Shichikuji and Power Grid', 'tags': ['dsu', 'graphs', 'greedy', 'shortest paths', 'trees'], 'dif': '1900'}
{'pro_id': '1245C', 'name': "Constanze's Machine", 'tags': ['dp'], 'dif': '1400'}
{'pro_id': '1245B', 'name': 'Restricted RPS', 'tags': ['constructive algorithms', 'dp', 'greedy'], 'dif': '1200'}
{'pro_id': '1245A', 'name': "Good ol' Numbers Coloring", 'tags': ['math', 'number theory'], 'dif': '1000'}
{'pro_id': '1244G', 'name': 'Running in Pairs', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '2500'}
{'pro_id': '1244F', 'name': 'Chips', 'tags': ['constructive algorithms', 'implementation'], 'dif': '2300'}
{'pro_id': '1244E', 'name': 'Minimizing Difference', 'tags': ['binary search', 'constructive algorithms', 'greedy', 'sortings', 'ternary search', 'two pointers'], 'dif': '2000'}
{'pro_id': '1244D', 'name': 'Paint the Tree', 'tags': ['brute force', 'constructive algorithms', 'dp', 'graphs', 'implementation', 'trees'], 'dif': '1700'}
{'pro_id': '1244C', 'name': 'The Football Season', 'tags': ['brute force', 'math', 'number theory'], 'dif': '1900'}
{'pro_id': '1244B', 'name': 'Rooms and Staircases', 'tags': ['brute force', 'implementation'], 'dif': '1000'}
{'pro_id': '1244A', 'name': 'Pens and Pencils', 'tags': ['math'], 'dif': '700'}
{'pro_id': '1243B2', 'name': 'Character Swap (Hard Version)', 'tags': ['strings'], 'dif': '1600'}
{'pro_id': '1243B1', 'name': 'Character Swap (Easy Version)', 'tags': ['strings'], 'dif': '1100'}
{'pro_id': '1243A', 'name': 'Maximum Square', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '1242E', 'name': 'Planar Perimeter', 'tags': ['constructive algorithms', 'graphs'], 'dif': '3200'}
{'pro_id': '1242D', 'name': 'Number Discovery', 'tags': ['math'], 'dif': '3400'}
{'pro_id': '1242C', 'name': 'Sum Balance', 'tags': ['bitmasks', 'dfs and similar', 'dp', 'graphs'], 'dif': '2400'}
{'pro_id': '1242B', 'name': '0-1 MST', 'tags': ['dfs and similar', 'dsu', 'graphs', 'sortings'], 'dif': '1900'}
{'pro_id': '1242A', 'name': 'Tile Painting', 'tags': ['constructive algorithms', 'math', 'number theory'], 'dif': '1500'}
{'pro_id': '1240F', 'name': 'Football', 'tags': ['graphs'], 'dif': '3100'}
{'pro_id': '1239F', 'name': 'Swiper, no swiping!', 'tags': ['graphs', 'implementation'], 'dif': '3400'}
{'pro_id': '1239E', 'name': 'Turtle', 'tags': ['dp', 'implementation'], 'dif': '3100'}
{'pro_id': '1239D', 'name': 'Catowice City', 'tags': ['2-sat', 'dfs and similar', 'graph matchings', 'graphs'], 'dif': '2400'}
{'pro_id': '1239C', 'name': 'Queue in the Train', 'tags': ['data structures', 'greedy', 'implementation'], 'dif': '2300'}
{'pro_id': '1239B', 'name': 'The World Is Just a Programming Task (Hard Version)', 'tags': ['implementation'], 'dif': '2500'}
{'pro_id': '1239A', 'name': 'Ivan the Fool and the Probability Theory', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '1700'}
{'pro_id': '1238G', 'name': 'Adilbek and the Watering System', 'tags': ['data structures', 'greedy', 'sortings'], 'dif': '2700'}
{'pro_id': '1238F', 'name': 'The Maximum Subtree', 'tags': ['dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '2300'}
{'pro_id': '1238E', 'name': 'Keyboard Purchase', 'tags': ['bitmasks', 'dp'], 'dif': '2200'}
{'pro_id': '1238D', 'name': 'AB-string', 'tags': ['binary search', 'combinatorics', 'dp', 'strings'], 'dif': '1800'}
{'pro_id': '1238C', 'name': 'Standard Free2play', 'tags': ['dp', 'greedy', 'math'], 'dif': '1600'}
{'pro_id': '1238B', 'name': 'Kill `Em All', 'tags': ['greedy', 'sortings'], 'dif': '1300'}
{'pro_id': '1238A', 'name': 'Prime Subtraction', 'tags': ['math', 'number theory'], 'dif': '900'}
{'pro_id': '1237H', 'name': 'Balanced Reversals', 'tags': ['constructive algorithms'], 'dif': '3200'}
{'pro_id': '1237G', 'name': 'Balanced Distribution', 'tags': ['data structures', 'dp', 'greedy'], 'dif': '3600'}
{'pro_id': '1237F', 'name': 'Balanced Domino Placements', 'tags': ['combinatorics', 'dp'], 'dif': '2600'}
{'pro_id': '1237E', 'name': 'Balanced Binary Search Trees', 'tags': ['dp', 'math'], 'dif': '2400'}
{'pro_id': '1237D', 'name': 'Balanced Playlist', 'tags': ['binary search', 'data structures', 'implementation'], 'dif': '1900'}
{'pro_id': '1237C2', 'name': 'Balanced Removals (Harder)', 'tags': ['binary search', 'constructive algorithms', 'divide and conquer', 'greedy', 'implementation', 'sortings'], 'dif': '1900'}
{'pro_id': '1237C1', 'name': 'Balanced Removals (Easier)', 'tags': ['constructive algorithms', 'geometry', 'greedy'], 'dif': '1600'}
{'pro_id': '1237B', 'name': 'Balanced Tunnel', 'tags': ['data structures', 'sortings', 'two pointers'], 'dif': '1300'}
{'pro_id': '1237A', 'name': 'Balanced Rating Changes', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '1236F', 'name': 'Alice and the Cactus', 'tags': ['dfs and similar', 'graphs', 'math', 'probabilities'], 'dif': '2900'}
{'pro_id': '1236E', 'name': 'Alice and the Unfair Game', 'tags': ['binary search', 'data structures', 'dp', 'dsu'], 'dif': '2600'}
{'pro_id': '1236D', 'name': 'Alice and the Doll', 'tags': ['brute force', 'data structures', 'greedy', 'implementation'], 'dif': '2100'}
{'pro_id': '1236C', 'name': 'Labs', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '1236B', 'name': 'Alice and the List of Presents', 'tags': ['combinatorics', 'math'], 'dif': '1400'}
{'pro_id': '1236A', 'name': 'Stones', 'tags': ['brute force', 'greedy', 'math'], 'dif': '800'}
{'pro_id': '1234F', 'name': 'Yet Another Substring Reverse', 'tags': ['bitmasks', 'dp'], 'dif': '2400'}
{'pro_id': '1234E', 'name': 'Special Permutations', 'tags': ['math'], 'dif': '2000'}
{'pro_id': '1234D', 'name': 'Distinct Characters Queries', 'tags': ['data structures'], 'dif': '1600'}
{'pro_id': '1234C', 'name': 'Pipes', 'tags': ['dp', 'implementation'], 'dif': '1400'}
{'pro_id': '1234B2', 'name': 'Social Network (hard version)', 'tags': ['data structures', 'implementation'], 'dif': '1200'}
{'pro_id': '1234B1', 'name': 'Social Network (easy version)', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '1234A', 'name': 'Equalize Prices Again', 'tags': ['math'], 'dif': '900'}
{'pro_id': '1231E', 'name': 'Middle-Out', 'tags': ['constructive algorithms', 'greedy', 'strings'], 'dif': '2000'}
{'pro_id': '1231C', 'name': 'Increasing Matrix', 'tags': ['greedy'], 'dif': '1100'}
{'pro_id': '1230B', 'name': 'Ania and Minimizing', 'tags': ['greedy', 'implementation'], 'dif': '1000'}
{'pro_id': '1230A', 'name': 'Dawid and Bags of Candies', 'tags': ['brute force', 'implementation'], 'dif': '800'}
{'pro_id': '1228F', 'name': 'One Node is Gone', 'tags': ['constructive algorithms', 'implementation', 'trees'], 'dif': '2700'}
{'pro_id': '1228E', 'name': 'Another Filling the Grid', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2300'}
{'pro_id': '1228D', 'name': 'Complete Tripartite', 'tags': ['brute force', 'constructive algorithms', 'graphs', 'hashing', 'implementation'], 'dif': '1800'}
{'pro_id': '1228C', 'name': 'Primes and Multiplication', 'tags': ['math', 'number theory'], 'dif': '1600'}
{'pro_id': '1228B', 'name': 'Filling the Grid', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '1228A', 'name': 'Distinct Digits', 'tags': ['brute force', 'implementation'], 'dif': '800'}
{'pro_id': '1225G', 'name': 'To Make 1', 'tags': ['bitmasks', 'constructive algorithms', 'dp', 'greedy', 'number theory'], 'dif': '3000'}
{'pro_id': '1225F', 'name': 'Tree Factory', 'tags': ['constructive algorithms', 'greedy', 'trees'], 'dif': '2500'}
{'pro_id': '1225E', 'name': 'Rock Is Push', 'tags': ['binary search', 'dp'], 'dif': '2200'}
{'pro_id': '1225D', 'name': 'Power Products', 'tags': ['hashing', 'math', 'number theory'], 'dif': '1900'}
{'pro_id': '1225C', 'name': 'p-binary', 'tags': ['bitmasks', 'brute force', 'math'], 'dif': '1600'}
{'pro_id': '1225B2', 'name': 'TV Subscriptions (Hard Version)', 'tags': ['implementation', 'two pointers'], 'dif': '1300'}
{'pro_id': '1225B1', 'name': 'TV Subscriptions (Easy Version)', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '1225A', 'name': 'Forgetting Things', 'tags': ['math'], 'dif': '900'}
{'pro_id': '1223G', 'name': 'Wooden Raft', 'tags': ['binary search', 'math', 'number theory'], 'dif': '3100'}
{'pro_id': '1223F', 'name': 'Stack Exterminable Arrays', 'tags': ['data structures', 'divide and conquer', 'dp', 'hashing'], 'dif': '2600'}
{'pro_id': '1223E', 'name': 'Paint the Tree', 'tags': ['dp', 'sortings', 'trees'], 'dif': '2200'}
{'pro_id': '1223D', 'name': 'Sequence Sorting', 'tags': ['dp', 'greedy', 'two pointers'], 'dif': '2000'}
{'pro_id': '1223C', 'name': 'Save the Nature', 'tags': ['binary search', 'greedy'], 'dif': '1600'}
{'pro_id': '1223B', 'name': 'Strings Equalization', 'tags': ['strings'], 'dif': '1000'}
{'pro_id': '1223A', 'name': 'CME', 'tags': ['math'], 'dif': '600'}
{'pro_id': '1221G', 'name': 'Graph And Numbers', 'tags': ['bitmasks', 'brute force', 'combinatorics', 'dp', 'meet-in-the-middle'], 'dif': '2900'}
{'pro_id': '1221F', 'name': 'Choose a Square', 'tags': ['binary search', 'data structures', 'sortings'], 'dif': '2500'}
{'pro_id': '1221E', 'name': 'Game With String', 'tags': ['games'], 'dif': '2400'}
{'pro_id': '1221D', 'name': 'Make The Fence Great Again', 'tags': ['dp'], 'dif': '1700'}
{'pro_id': '1221C', 'name': 'Perfect Team', 'tags': ['binary search', 'math'], 'dif': '1200'}
{'pro_id': '1221B', 'name': 'Knights', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1100'}
{'pro_id': '1221A', 'name': '2048 Game', 'tags': ['brute force', 'greedy', 'math'], 'dif': '1000'}
{'pro_id': '1220G', 'name': 'Geolocation', 'tags': ['geometry'], 'dif': '3200'}
{'pro_id': '1220F', 'name': 'Gardener Alex', 'tags': ['binary search', 'data structures'], 'dif': '2600'}
{'pro_id': '1220E', 'name': 'Tourism', 'tags': ['dfs and similar', 'dp', 'dsu', 'graphs', 'greedy', 'trees'], 'dif': '2200'}
{'pro_id': '1220D', 'name': 'Alex and Julian', 'tags': ['bitmasks', 'math', 'number theory'], 'dif': '1900'}
{'pro_id': '1220C', 'name': 'Substring Game in the Lesson', 'tags': ['games', 'greedy', 'strings'], 'dif': '1300'}
{'pro_id': '1220B', 'name': 'Multiplication Table', 'tags': ['math', 'number theory'], 'dif': '1300'}
{'pro_id': '1220A', 'name': 'Cards', 'tags': ['implementation', 'sortings', 'strings'], 'dif': '600'}
{'pro_id': '1219G', 'name': 'Harvester', 'tags': ['implementation'], 'dif': '2000'}
{'pro_id': '1219C', 'name': 'Periodic integer number', 'tags': ['implementation', 'strings'], 'dif': '1700'}
{'pro_id': '1218I', 'name': 'The Light Square', 'tags': ['2-sat', 'dfs and similar', 'greedy'], 'dif': '2200'}
{'pro_id': '1218H', 'name': 'Function Composition', 'tags': ['dfs and similar'], 'dif': '2700'}
{'pro_id': '1218G', 'name': 'Alpha planetary system', 'tags': ['constructive algorithms', 'graphs', 'shortest paths'], 'dif': '3300'}
{'pro_id': '1218F', 'name': 'Workout plan', 'tags': ['data structures', 'greedy'], 'dif': '1500'}
{'pro_id': '1218E', 'name': 'Product Tuples', 'tags': ['divide and conquer', 'fft'], 'dif': '2500'}
{'pro_id': '1218D', 'name': 'Xor Spanning Tree', 'tags': ['divide and conquer', 'fft', 'graphs'], 'dif': '2600'}
{'pro_id': '1218C', 'name': 'Jumping Transformers', 'tags': ['dp'], 'dif': '2800'}
{'pro_id': '1218B', 'name': 'Guarding warehouses', 'tags': ['data structures', 'geometry'], 'dif': '2700'}
{'pro_id': '1218A', 'name': 'BubbleReactor', 'tags': ['dp', 'graphs'], 'dif': '2800'}
{'pro_id': '1217F', 'name': 'Forced Online Queries Problem', 'tags': ['data structures', 'divide and conquer', 'dsu', 'graphs', 'trees'], 'dif': '2800'}
{'pro_id': '1217E', 'name': 'Sum Queries?', 'tags': ['data structures', 'greedy', 'implementation', 'math'], 'dif': '2300'}
{'pro_id': '1217D', 'name': 'Coloring Edges', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs'], 'dif': '2000'}
{'pro_id': '1217C', 'name': 'The Number Of Good Substrings', 'tags': ['binary search', 'bitmasks', 'brute force'], 'dif': '1600'}
{'pro_id': '1217B', 'name': 'Zmei Gorynich', 'tags': ['greedy', 'math'], 'dif': '1600'}
{'pro_id': '1217A', 'name': 'Creating a Character', 'tags': ['binary search', 'math'], 'dif': '1300'}
{'pro_id': '1216F', 'name': 'Wi-Fi', 'tags': ['data structures', 'dp', 'greedy'], 'dif': '2300'}
{'pro_id': '1216E2', 'name': 'Numerical Sequence (hard version)', 'tags': ['binary search', 'math'], 'dif': '2300'}
{'pro_id': '1216E1', 'name': 'Numerical Sequence (easy version)', 'tags': ['binary search', 'brute force', 'math'], 'dif': '1900'}
{'pro_id': '1216D', 'name': 'Swords', 'tags': ['math'], 'dif': '1300'}
{'pro_id': '1216C', 'name': 'White Sheet', 'tags': ['geometry', 'math'], 'dif': '1500'}
{'pro_id': '1216B', 'name': 'Shooting', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1000'}
{'pro_id': '1216A', 'name': 'Prefixes', 'tags': ['strings'], 'dif': '900'}
{'pro_id': '1215F', 'name': 'Radio Stations', 'tags': ['2-sat'], 'dif': '2800'}
{'pro_id': '1215E', 'name': 'Marbles', 'tags': ['bitmasks', 'dp'], 'dif': '2200'}
{'pro_id': '1215D', 'name': 'Ticket Game', 'tags': ['games', 'greedy', 'math'], 'dif': '1700'}
{'pro_id': '1215C', 'name': 'Swap Letters', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1500'}
{'pro_id': '1215B', 'name': 'The Number of Products', 'tags': ['combinatorics', 'dp', 'implementation'], 'dif': '1500'}
{'pro_id': '1215A', 'name': 'Yellow Cards', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1000'}
{'pro_id': '1214H', 'name': 'Tiles Placement', 'tags': ['constructive algorithms', 'dfs and similar', 'trees'], 'dif': '2700'}
{'pro_id': '1214G', 'name': 'Feeling Good', 'tags': ['bitmasks', 'data structures'], 'dif': '3100'}
{'pro_id': '1214F', 'name': 'Employment', 'tags': ['greedy', 'sortings'], 'dif': '2700'}
{'pro_id': '1214E', 'name': 'Petya and Construction Set', 'tags': ['constructive algorithms', 'graphs', 'math', 'sortings', 'trees'], 'dif': '2000'}
{'pro_id': '1214D', 'name': 'Treasure Island', 'tags': ['dfs and similar', 'dp', 'flows', 'hashing'], 'dif': '1800'}
{'pro_id': '1214C', 'name': 'Bad Sequence', 'tags': ['data structures', 'greedy'], 'dif': '1200'}
{'pro_id': '1214B', 'name': 'Badges', 'tags': ['brute force', 'math'], 'dif': '1100'}
{'pro_id': '1214A', 'name': 'Optimal Currency Exchange', 'tags': ['brute force', 'math'], 'dif': '1300'}
{'pro_id': '1213G', 'name': 'Path Queries', 'tags': ['divide and conquer', 'dsu', 'graphs', 'sortings', 'trees'], 'dif': '2000'}
{'pro_id': '1213F', 'name': 'Unstable String Sort', 'tags': ['data structures', 'dfs and similar', 'dsu', 'graphs', 'greedy', 'implementation', 'strings'], 'dif': '2400'}
{'pro_id': '1213E', 'name': 'Two Small Strings', 'tags': ['brute force', 'constructive algorithms'], 'dif': '2000'}
{'pro_id': '1213D2', 'name': 'Equalizing by Division (hard version)', 'tags': ['brute force', 'math', 'sortings'], 'dif': '1600'}
{'pro_id': '1213D1', 'name': 'Equalizing by Division (easy version)', 'tags': ['brute force', 'implementation'], 'dif': '1500'}
{'pro_id': '1213C', 'name': 'Book Reading', 'tags': ['math'], 'dif': '1200'}
{'pro_id': '1213B', 'name': 'Bad Prices', 'tags': ['data structures', 'implementation'], 'dif': '1100'}
{'pro_id': '1213A', 'name': 'Chips Moving', 'tags': ['math'], 'dif': '900'}
{'pro_id': '1211I', 'name': 'Unusual Graph', 'tags': ['*special problem', 'graphs'], 'dif': '3000'}
{'pro_id': '1211H', 'name': 'Road Repair in Treeland', 'tags': ['*special problem', 'binary search', 'dp', 'trees'], 'dif': '3000'}
{'pro_id': '1211G', 'name': "King's Path", 'tags': ['*special problem', 'math', 'trees'], 'dif': '2500'}
{'pro_id': '1211F', 'name': 'kotlinkotlinkotlinkotlin...', 'tags': ['*special problem', 'graphs', 'implementation', 'strings'], 'dif': '2400'}
{'pro_id': '1211E', 'name': 'Double Permutation Inc.', 'tags': ['*special problem', 'binary search', 'greedy'], 'dif': '2200'}
{'pro_id': '1211D', 'name': 'Teams', 'tags': ['*special problem', 'binary search', 'greedy', 'math'], 'dif': '2200'}
{'pro_id': '1211C', 'name': 'Ice Cream', 'tags': ['*special problem', 'greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '1211B', 'name': 'Traveling Around the Golden Ring of Berland', 'tags': ['*special problem', 'implementation'], 'dif': '1500'}
{'pro_id': '1211A', 'name': 'Three Problems', 'tags': ['*special problem', 'implementation'], 'dif': '1300'}
{'pro_id': '1210G', 'name': 'Mateusz and Escape Room', 'tags': ['dp'], 'dif': '3400'}
{'pro_id': '1210F2', 'name': 'Marek and Matching (hard version)', 'tags': ['brute force', 'probabilities'], 'dif': '3100'}
{'pro_id': '1210F1', 'name': 'Marek and Matching (easy version)', 'tags': ['brute force', 'probabilities'], 'dif': '2900'}
{'pro_id': '1210E', 'name': 'Wojtek and Card Tricks', 'tags': ['math'], 'dif': '2700'}
{'pro_id': '1210D', 'name': 'Konrad and Company Evaluation', 'tags': ['graphs'], 'dif': '2300'}
{'pro_id': '1210C', 'name': 'Kamil and Making a Stream', 'tags': ['math', 'number theory', 'trees'], 'dif': '2100'}
{'pro_id': '1210B', 'name': 'Marcin and Training Camp', 'tags': ['brute force', 'greedy'], 'dif': '1800'}
{'pro_id': '1210A', 'name': 'Anadi and Domino', 'tags': ['brute force', 'graphs'], 'dif': '1600'}
{'pro_id': '1209H', 'name': 'Moving Walkways', 'tags': ['data structures', 'greedy', 'math'], 'dif': '3300'}
{'pro_id': '1209G2', 'name': 'Into Blocks (hard version)', 'tags': ['data structures'], 'dif': '3200'}
{'pro_id': '1209G1', 'name': 'Into Blocks (easy version)', 'tags': ['data structures', 'dsu', 'greedy', 'implementation', 'two pointers'], 'dif': '2000'}
{'pro_id': '1209F', 'name': 'Koala and Notebook', 'tags': ['data structures', 'dfs and similar', 'graphs', 'shortest paths', 'strings', 'trees'], 'dif': '2600'}
{'pro_id': '1209E2', 'name': 'Rotate Columns (hard version)', 'tags': ['bitmasks', 'dp', 'greedy', 'sortings'], 'dif': '2400'}
{'pro_id': '1209E1', 'name': 'Rotate Columns (easy version)', 'tags': ['bitmasks', 'brute force', 'dp', 'greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '1209D', 'name': 'Cow and Snacks', 'tags': ['dfs and similar', 'dsu', 'graphs'], 'dif': '1700'}
{'pro_id': '1209C', 'name': 'Paint the Digits', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1600'}
{'pro_id': '1209B', 'name': 'Koala and Lights', 'tags': ['implementation', 'math', 'number theory'], 'dif': '1300'}
{'pro_id': '1209A', 'name': 'Paint the Numbers', 'tags': ['greedy', 'implementation', 'math'], 'dif': '900'}
{'pro_id': '1208H', 'name': 'Red Blue Tree', 'tags': ['data structures', 'implementation', 'trees'], 'dif': '3500'}
{'pro_id': '1208G', 'name': 'Polygons', 'tags': ['greedy', 'math', 'number theory'], 'dif': '2700'}
{'pro_id': '1208F', 'name': 'Bits And Pieces', 'tags': ['bitmasks', 'dfs and similar', 'dp', 'greedy'], 'dif': '2600'}
{'pro_id': '1208E', 'name': 'Let Them Slide', 'tags': ['data structures', 'implementation'], 'dif': '2200'}
{'pro_id': '1208D', 'name': 'Restore Permutation', 'tags': ['binary search', 'data structures', 'greedy', 'implementation'], 'dif': '1900'}
{'pro_id': '1208C', 'name': 'Magic Grid', 'tags': ['constructive algorithms'], 'dif': '1800'}
{'pro_id': '1208B', 'name': 'Uniqueness', 'tags': ['binary search', 'brute force', 'implementation', 'two pointers'], 'dif': '1500'}
{'pro_id': '1208A', 'name': 'XORinacci', 'tags': ['math'], 'dif': '900'}
{'pro_id': '1207G', 'name': 'Indie Album', 'tags': ['data structures', 'dfs and similar', 'hashing', 'string suffix structures', 'strings', 'trees'], 'dif': '2600'}
{'pro_id': '1207F', 'name': 'Remainder Problem', 'tags': ['brute force', 'data structures', 'implementation'], 'dif': '2100'}
{'pro_id': '1207E', 'name': 'XOR Guessing', 'tags': ['bitmasks', 'interactive', 'math'], 'dif': '1800'}
{'pro_id': '1207D', 'name': 'Number Of Permutations', 'tags': ['combinatorics'], 'dif': '1800'}
{'pro_id': '1207C', 'name': 'Gas Pipeline', 'tags': ['dp', 'greedy'], 'dif': '1500'}
{'pro_id': '1207B', 'name': 'Square Filling', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '1207A', 'name': 'There Are Two Types Of Burgers', 'tags': ['brute force', 'greedy', 'implementation', 'math'], 'dif': '700'}
{'pro_id': '1206B', 'name': 'Make Product Equal One', 'tags': ['dp', 'implementation'], 'dif': '900'}
{'pro_id': '1206A', 'name': 'Choose Two Numbers', 'tags': ['math', 'sortings'], 'dif': '800'}
{'pro_id': '1205F', 'name': 'Beauty of a Permutation', 'tags': ['constructive algorithms', 'math'], 'dif': '3400'}
{'pro_id': '1205E', 'name': 'Expected Value Again', 'tags': ['combinatorics', 'strings'], 'dif': '3100'}
{'pro_id': '1205D', 'name': 'Almost All', 'tags': ['constructive algorithms', 'trees'], 'dif': '2800'}
{'pro_id': '1205C', 'name': 'Palindromic Paths', 'tags': ['implementation', 'interactive'], 'dif': '2500'}
{'pro_id': '1205B', 'name': 'Shortest Cycle', 'tags': ['bitmasks', 'brute force', 'graphs', 'shortest paths'], 'dif': '1900'}
{'pro_id': '1205A', 'name': 'Almost Equal', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '1300'}
{'pro_id': '1204E', 'name': 'Natasha, Sasha and the Prefix Sums', 'tags': ['combinatorics', 'dp', 'math', 'number theory'], 'dif': '2400'}
{'pro_id': '1204D2', 'name': 'Kirk and a Binary String (hard version)', 'tags': ['data structures', 'greedy', 'math', 'strings'], 'dif': '2100'}
{'pro_id': '1204D1', 'name': 'Kirk and a Binary String (easy version)', 'tags': ['brute force', 'greedy', 'strings'], 'dif': '2000'}
{'pro_id': '1204C', 'name': 'Anna, Svyatoslav and Maps', 'tags': ['dp', 'graphs', 'greedy', 'shortest paths'], 'dif': '1700'}
{'pro_id': '1204B', 'name': 'Mislove Has Lost an Array', 'tags': ['greedy', 'math'], 'dif': '1000'}
{'pro_id': '1204A', 'name': 'BowWow and the Timetable', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '1203F2', 'name': 'Complete the Projects (hard version)', 'tags': ['dp', 'greedy'], 'dif': '2400'}
{'pro_id': '1203F1', 'name': 'Complete the Projects (easy version)', 'tags': ['greedy'], 'dif': '2100'}
{'pro_id': '1203E', 'name': 'Boxers', 'tags': ['greedy', 'sortings'], 'dif': '1500'}
{'pro_id': '1203D2', 'name': 'Remove the Substring (hard version)', 'tags': ['binary search', 'greedy', 'implementation', 'two pointers'], 'dif': '1800'}
{'pro_id': '1203D1', 'name': 'Remove the Substring (easy version)', 'tags': ['greedy', 'implementation'], 'dif': '1600'}
{'pro_id': '1203C', 'name': 'Common Divisors', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '1203B', 'name': 'Equal Rectangles', 'tags': ['greedy', 'math'], 'dif': '1200'}
{'pro_id': '1203A', 'name': 'Circle of Students', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '1202F', 'name': 'You Are Given Some Letters...', 'tags': ['binary search', 'implementation', 'math'], 'dif': '2800'}
{'pro_id': '1202E', 'name': 'You Are Given Some Strings...', 'tags': ['brute force', 'string suffix structures', 'strings'], 'dif': '2500'}
{'pro_id': '1202D', 'name': 'Print a 1337-string...', 'tags': ['combinatorics', 'constructive algorithms', 'math', 'strings'], 'dif': '1900'}
{'pro_id': '1202C', 'name': 'You Are Given a WASD-string...', 'tags': ['brute force', 'data structures', 'dp', 'greedy', 'implementation', 'math', 'strings'], 'dif': '2100'}
{'pro_id': '1202B', 'name': 'You Are Given a Decimal String...', 'tags': ['brute force', 'dp', 'shortest paths'], 'dif': '1700'}
{'pro_id': '1202A', 'name': 'You Are Given Two Binary Strings...', 'tags': ['bitmasks', 'greedy'], 'dif': '1100'}
{'pro_id': '1201E2', 'name': 'Knightmare (hard)', 'tags': ['graphs', 'interactive', 'shortest paths'], 'dif': '3000'}
{'pro_id': '1201E1', 'name': 'Knightmare (easy)', 'tags': ['graphs', 'interactive', 'shortest paths'], 'dif': '2900'}
{'pro_id': '1201D', 'name': 'Treasure Hunting', 'tags': ['binary search', 'dp', 'greedy', 'implementation'], 'dif': '2000'}
{'pro_id': '1201C', 'name': 'Maximum Median', 'tags': ['binary search', 'greedy', 'math', 'sortings'], 'dif': '1400'}
{'pro_id': '1201B', 'name': 'Zero Array', 'tags': ['greedy', 'math'], 'dif': '1500'}
{'pro_id': '1201A', 'name': 'Important Exam', 'tags': ['implementation', 'strings'], 'dif': '900'}
{'pro_id': '1200F', 'name': 'Graph Traveler', 'tags': ['brute force', 'data structures', 'dfs and similar', 'dp', 'graphs', 'implementation', 'math', 'number theory'], 'dif': '2500'}
{'pro_id': '1200E', 'name': 'Compress Words', 'tags': ['brute force', 'hashing', 'implementation', 'string suffix structures', 'strings'], 'dif': '2000'}
{'pro_id': '1200D', 'name': 'White Lines', 'tags': ['brute force', 'data structures', 'dp', 'implementation', 'two pointers'], 'dif': '1900'}
{'pro_id': '1200C', 'name': 'Round Corridor', 'tags': ['math', 'number theory'], 'dif': '1500'}
{'pro_id': '1200B', 'name': 'Block Adventure', 'tags': ['dp', 'greedy'], 'dif': '1300'}
{'pro_id': '1200A', 'name': 'Hotelier', 'tags': ['brute force', 'data structures', 'implementation'], 'dif': '1000'}
{'pro_id': '1199B', 'name': 'Water Lily', 'tags': ['geometry', 'math'], 'dif': '1000'}
{'pro_id': '1199A', 'name': 'City Day', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '1198F', 'name': 'GCD Groups 2', 'tags': ['greedy', 'number theory', 'probabilities'], 'dif': '2900'}
{'pro_id': '1198E', 'name': 'Rectangle Painting 2', 'tags': ['flows', 'graph matchings', 'graphs'], 'dif': '2500'}
{'pro_id': '1198D', 'name': 'Rectangle Painting 1', 'tags': ['dp'], 'dif': '2400'}
{'pro_id': '1198C', 'name': 'Matching vs  Independent Set', 'tags': ['constructive algorithms', 'graphs', 'greedy', 'sortings'], 'dif': '2200'}
{'pro_id': '1198B', 'name': 'Welfare State', 'tags': ['binary search', 'brute force', 'data structures', 'sortings'], 'dif': '1600'}
{'pro_id': '1198A', 'name': 'MP3', 'tags': ['sortings', 'two pointers'], 'dif': '1700'}
{'pro_id': '1197F', 'name': 'Coloring Game', 'tags': ['dp', 'games', 'matrices'], 'dif': '2500'}
{'pro_id': '1197E', 'name': 'Culture Code', 'tags': ['binary search', 'combinatorics', 'data structures', 'dp', 'shortest paths', 'sortings'], 'dif': '2300'}
{'pro_id': '1197D', 'name': 'Yet Another Subarray Problem', 'tags': ['dp', 'greedy', 'math'], 'dif': '1900'}
{'pro_id': '1197C', 'name': 'Array Splitting', 'tags': ['greedy', 'sortings'], 'dif': '1400'}
{'pro_id': '1197B', 'name': 'Pillars', 'tags': ['greedy', 'implementation'], 'dif': '1000'}
{'pro_id': '1197A', 'name': 'DIY Wooden Ladder', 'tags': ['greedy', 'math', 'sortings'], 'dif': '1000'}
{'pro_id': '1196F', 'name': 'K-th Path', 'tags': ['brute force', 'constructive algorithms', 'shortest paths', 'sortings'], 'dif': '2500'}
{'pro_id': '1196E', 'name': 'Connected Component on a Chessboard', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1900'}
{'pro_id': '1196D2', 'name': 'RGB Substring (hard version)', 'tags': ['data structures', 'dp', 'implementation', 'two pointers'], 'dif': '1600'}
{'pro_id': '1196D1', 'name': 'RGB Substring (easy version)', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '1196C', 'name': 'Robot Breakout', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '1196B', 'name': 'Odd Sum Segments', 'tags': ['constructive algorithms', 'math'], 'dif': '1200'}
{'pro_id': '1196A', 'name': 'Three Piles of Candies', 'tags': ['brute force', 'constructive algorithms', 'math'], 'dif': '700'}
{'pro_id': '1195F', 'name': 'Geometers Anonymous Club', 'tags': ['data structures', 'geometry', 'math', 'sortings'], 'dif': '2700'}
{'pro_id': '1195E', 'name': 'OpenStreetMap', 'tags': ['data structures', 'two pointers'], 'dif': '2100'}
{'pro_id': '1195D2', 'name': 'Submarine in the Rybinsk Sea (hard edition)', 'tags': ['combinatorics', 'math', 'number theory'], 'dif': '1700'}
{'pro_id': '1195D1', 'name': 'Submarine in the Rybinsk Sea (easy edition)', 'tags': ['combinatorics', 'math', 'number theory'], 'dif': '1500'}
{'pro_id': '1195C', 'name': 'Basketball Exercise', 'tags': ['dp'], 'dif': '1400'}
{'pro_id': '1195B', 'name': 'Sport Mafia', 'tags': ['binary search', 'brute force', 'math'], 'dif': '1100'}
{'pro_id': '1195A', 'name': 'Drinks Choosing', 'tags': ['greedy', 'math'], 'dif': '1100'}
{'pro_id': '1194G', 'name': 'Another Meme Problem', 'tags': ['dp'], 'dif': '3000'}
{'pro_id': '1194F', 'name': 'Crossword Expert', 'tags': ['combinatorics', 'dp', 'number theory', 'probabilities', 'two pointers'], 'dif': '2500'}
{'pro_id': '1194E', 'name': 'Count The Rectangles', 'tags': ['bitmasks', 'brute force', 'data structures', 'geometry', 'sortings'], 'dif': '2200'}
{'pro_id': '1194D', 'name': '1-2-K Game', 'tags': ['games', 'math'], 'dif': '1700'}
{'pro_id': '1194C', 'name': 'From S To T', 'tags': ['implementation', 'strings'], 'dif': '1300'}
{'pro_id': '1194B', 'name': 'Yet Another Crosses Problem', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '1194A', 'name': 'Remove a Progression', 'tags': ['math'], 'dif': '800'}
{'pro_id': '1193C', 'name': 'Scissors and Tape', 'tags': ['*special problem', 'constructive algorithms', 'geometry'], 'dif': ''}
{'pro_id': '1193B', 'name': 'Magic Tree', 'tags': ['*special problem', 'data structures', 'dp', 'trees'], 'dif': ''}
{'pro_id': '1193A', 'name': 'Amusement Park', 'tags': ['*special problem', 'dp', 'math'], 'dif': ''}
{'pro_id': '1192C', 'name': 'Cubeword', 'tags': ['*special problem', 'brute force', 'dp', 'meet-in-the-middle'], 'dif': ''}
{'pro_id': '1192B', 'name': 'Dynamic Diameter', 'tags': ['*special problem', 'data structures', 'dfs and similar', 'divide and conquer', 'trees'], 'dif': ''}
{'pro_id': '1192A', 'name': 'Building Skyscrapers', 'tags': ['*special problem'], 'dif': ''}
{'pro_id': '1191B', 'name': 'Tokitsukaze and Mahjong', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '1191A', 'name': 'Tokitsukaze and Enhancement', 'tags': ['brute force'], 'dif': '700'}
{'pro_id': '1190F', 'name': 'Tokitsukaze and Powers', 'tags': ['number theory', 'probabilities'], 'dif': '3300'}
{'pro_id': '1190E', 'name': 'Tokitsukaze and Explosion', 'tags': ['binary search', 'greedy'], 'dif': '3100'}
{'pro_id': '1190D', 'name': 'Tokitsukaze and Strange Rectangle', 'tags': ['data structures', 'divide and conquer', 'sortings', 'two pointers'], 'dif': '2200'}
{'pro_id': '1190C', 'name': 'Tokitsukaze and Duel', 'tags': ['brute force', 'games', 'greedy'], 'dif': '2400'}
{'pro_id': '1190B', 'name': 'Tokitsukaze, CSL and Stone Game', 'tags': ['games'], 'dif': '1800'}
{'pro_id': '1190A', 'name': 'Tokitsukaze and Discard Items', 'tags': ['implementation', 'two pointers'], 'dif': '1500'}
{'pro_id': '1189C', 'name': 'Candies!', 'tags': ['data structures', 'dp', 'implementation', 'math'], 'dif': '1400'}
{'pro_id': '1189B', 'name': 'Number Circle', 'tags': ['greedy', 'math', 'sortings'], 'dif': '1100'}
{'pro_id': '1189A', 'name': 'Keanu Reeves', 'tags': ['strings'], 'dif': '800'}
{'pro_id': '1188E', 'name': 'Problem from Red Panda', 'tags': ['combinatorics'], 'dif': '3200'}
{'pro_id': '1188D', 'name': 'Make Equal', 'tags': ['dp'], 'dif': '3000'}
{'pro_id': '1188C', 'name': 'Array Beauty', 'tags': ['dp'], 'dif': '2700'}
{'pro_id': '1188B', 'name': 'Count Pairs', 'tags': ['math', 'matrices', 'number theory', 'two pointers'], 'dif': '2200'}
{'pro_id': '1188A2', 'name': 'Add on a Tree: Revolution', 'tags': ['constructive algorithms', 'dfs and similar', 'implementation', 'trees'], 'dif': '2500'}
{'pro_id': '1188A1', 'name': 'Add on a Tree', 'tags': ['trees'], 'dif': '1600'}
{'pro_id': '1187G', 'name': 'Gang Up', 'tags': ['flows', 'graphs'], 'dif': '2600'}
{'pro_id': '1187F', 'name': 'Expected Square Beauty', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2600'}
{'pro_id': '1187E', 'name': 'Tree Painting', 'tags': ['dfs and similar', 'dp', 'trees'], 'dif': '2000'}
{'pro_id': '1187D', 'name': 'Subarray Sorting', 'tags': ['data structures', 'sortings'], 'dif': '2200'}
{'pro_id': '1187C', 'name': 'Vasya And Array', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '1187B', 'name': 'Letters Shop', 'tags': ['binary search', 'implementation', 'strings'], 'dif': '1300'}
{'pro_id': '1187A', 'name': 'Stickers and Toys', 'tags': ['math'], 'dif': '900'}
{'pro_id': '1186F', 'name': 'Vus the Cossack and a Graph', 'tags': ['dfs and similar', 'graphs', 'greedy', 'implementation'], 'dif': '2300'}
{'pro_id': '1186E', 'name': 'Vus the Cossack and a Field', 'tags': ['divide and conquer', 'implementation', 'math'], 'dif': '2500'}
{'pro_id': '1186D', 'name': 'Vus the Cossack and Numbers', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '1600'}
{'pro_id': '1186C', 'name': 'Vus the Cossack and Strings', 'tags': ['implementation', 'math'], 'dif': '1800'}
{'pro_id': '1186A', 'name': 'Vus the Cossack and a Contest', 'tags': ['implementation'], 'dif': '600'}
{'pro_id': '1185G2', 'name': 'Playlist for Polycarp (hard version)', 'tags': ['combinatorics', 'dp'], 'dif': '2800'}
{'pro_id': '1185G1', 'name': 'Playlist for Polycarp (easy version)', 'tags': ['bitmasks', 'combinatorics', 'dp'], 'dif': '2100'}
{'pro_id': '1185F', 'name': 'Two Pizzas', 'tags': ['bitmasks', 'brute force'], 'dif': '2200'}
{'pro_id': '1185E', 'name': 'Polycarp and Snakes', 'tags': ['brute force', 'implementation'], 'dif': '2000'}
{'pro_id': '1185D', 'name': 'Extra Element', 'tags': ['implementation', 'math'], 'dif': '1700'}
{'pro_id': '1185C2', 'name': 'Exam in BerSU (hard version)', 'tags': ['brute force', 'data structures', 'greedy', 'math'], 'dif': '1700'}
{'pro_id': '1185C1', 'name': 'Exam in BerSU (easy version)', 'tags': ['greedy', 'sortings'], 'dif': '1200'}
{'pro_id': '1185B', 'name': 'Email from Polycarp', 'tags': ['implementation', 'strings'], 'dif': '1200'}
{'pro_id': '1185A', 'name': 'Ropewalkers', 'tags': ['math'], 'dif': '900'}
{'pro_id': '1184E3', 'name': "Daleks' Invasion (hard)", 'tags': ['data structures', 'dsu', 'graphs', 'trees'], 'dif': '2500'}
{'pro_id': '1184E2', 'name': "Daleks' Invasion (medium)", 'tags': ['dfs and similar', 'graphs', 'shortest paths', 'trees'], 'dif': '2200'}
{'pro_id': '1184E1', 'name': "Daleks' Invasion (easy)", 'tags': ['graphs', 'trees'], 'dif': '2000'}
{'pro_id': '1184D2', 'name': 'Parallel Universes (Hard)', 'tags': ['math', 'matrices'], 'dif': '3300'}
{'pro_id': '1184D1', 'name': 'Parallel Universes (Easy)', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '1184C3', 'name': 'Heidi and the Turing Test (Hard)', 'tags': [], 'dif': '3200'}
{'pro_id': '1184C2', 'name': 'Heidi and the Turing Test (Medium)', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '1184C1', 'name': 'Heidi and the Turing Test (Easy)', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '1184B3', 'name': 'The Doctor Meets Vader (Hard)', 'tags': ['flows', 'shortest paths'], 'dif': '2700'}
{'pro_id': '1184B2', 'name': 'The Doctor Meets Vader (Medium)', 'tags': ['flows', 'graph matchings', 'graphs', 'shortest paths', 'sortings'], 'dif': '2300'}
{'pro_id': '1184B1', 'name': 'The Doctor Meets Vader (Easy)', 'tags': ['binary search', 'sortings'], 'dif': '1400'}
{'pro_id': '1184A3', 'name': 'Heidi Learns Hashing (Hard)', 'tags': ['fft', 'math', 'number theory'], 'dif': '3100'}
{'pro_id': '1184A2', 'name': 'Heidi Learns Hashing (Medium)', 'tags': ['brute force', 'number theory'], 'dif': '2100'}
{'pro_id': '1184A1', 'name': 'Heidi Learns Hashing (Easy)', 'tags': ['brute force', 'math', 'number theory'], 'dif': '1200'}
{'pro_id': '1183H', 'name': 'Subsequences (hard version)', 'tags': ['dp', 'strings'], 'dif': '2200'}
{'pro_id': '1183G', 'name': 'Candy Box (hard version)', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '2100'}
{'pro_id': '1183F', 'name': 'Topforces Strikes Back', 'tags': ['brute force', 'math', 'sortings'], 'dif': '2400'}
{'pro_id': '1183E', 'name': 'Subsequences (easy version)', 'tags': ['dp', 'graphs', 'implementation', 'shortest paths'], 'dif': '2000'}
{'pro_id': '1183D', 'name': 'Candy Box (easy version)', 'tags': ['greedy', 'sortings'], 'dif': '1400'}
{'pro_id': '1183C', 'name': 'Computer Game', 'tags': ['binary search', 'math'], 'dif': '1400'}
{'pro_id': '1183B', 'name': 'Equalize Prices', 'tags': ['math'], 'dif': '1000'}
{'pro_id': '1183A', 'name': 'Nearest Interesting Number', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '1182F', 'name': 'Maximum Sine', 'tags': ['binary search', 'data structures', 'number theory'], 'dif': '2900'}
{'pro_id': '1182E', 'name': 'Product Oriented Recurrence', 'tags': ['dp', 'math', 'matrices', 'number theory'], 'dif': '2200'}
{'pro_id': '1182D', 'name': 'Complete Mirror', 'tags': ['constructive algorithms', 'dfs and similar', 'dp', 'hashing', 'implementation', 'trees'], 'dif': '2500'}
{'pro_id': '1182C', 'name': 'Beautiful Lyrics', 'tags': ['data structures', 'greedy', 'strings'], 'dif': '1700'}
{'pro_id': '1182B', 'name': 'Plus from Picture', 'tags': ['dfs and similar', 'implementation', 'strings'], 'dif': '1300'}
{'pro_id': '1182A', 'name': 'Filling Shapes', 'tags': ['dp', 'math'], 'dif': '1000'}
{'pro_id': '1181E2', 'name': 'A Story of One Country (Hard)', 'tags': ['brute force', 'greedy', 'sortings'], 'dif': '3000'}
{'pro_id': '1181E1', 'name': 'A Story of One Country (Easy)', 'tags': ['brute force', 'divide and conquer', 'sortings'], 'dif': '2600'}
{'pro_id': '1181D', 'name': 'Irrigation', 'tags': ['binary search', 'data structures', 'implementation', 'sortings', 'trees', 'two pointers'], 'dif': '2100'}
{'pro_id': '1181C', 'name': 'Flag', 'tags': ['brute force', 'combinatorics', 'dp', 'implementation'], 'dif': '1900'}
{'pro_id': '1181B', 'name': 'Split a Number', 'tags': ['greedy', 'implementation', 'strings'], 'dif': '1500'}
{'pro_id': '1181A', 'name': 'Chunga-Changa', 'tags': ['greedy', 'math'], 'dif': '1000'}
{'pro_id': '1180B', 'name': 'Nick and Array', 'tags': ['greedy', 'implementation'], 'dif': '1500'}
{'pro_id': '1180A', 'name': 'Alex and a Rhombus', 'tags': ['dp', 'implementation', 'math'], 'dif': '800'}
{'pro_id': '1179E', 'name': 'Alesya and Discrete Math', 'tags': ['divide and conquer', 'interactive'], 'dif': '3200'}
{'pro_id': '1179D', 'name': 'Fedor Runs for President', 'tags': ['data structures', 'dp', 'trees'], 'dif': '2600'}
{'pro_id': '1179C', 'name': 'Serge and Dining Room', 'tags': ['binary search', 'data structures', 'graph matchings', 'greedy', 'implementation', 'math', 'trees'], 'dif': '2400'}
{'pro_id': '1179B', 'name': 'Tolik and His Uncle', 'tags': ['constructive algorithms'], 'dif': '1800'}
{'pro_id': '1179A', 'name': 'Valeriy and Deque', 'tags': ['data structures', 'implementation'], 'dif': '1500'}
{'pro_id': '1178H', 'name': 'Stock Exchange', 'tags': ['binary search', 'flows', 'graphs'], 'dif': '3500'}
{'pro_id': '1178G', 'name': 'The Awesomest Vertex', 'tags': ['data structures', 'dfs and similar'], 'dif': '2900'}
{'pro_id': '1178F2', 'name': 'Long Colorful Strip', 'tags': ['dp'], 'dif': '2600'}
{'pro_id': '1178F1', 'name': 'Short Colorful Strip', 'tags': ['combinatorics', 'dfs and similar', 'dp'], 'dif': '2200'}
{'pro_id': '1178E', 'name': 'Archaeology', 'tags': ['brute force', 'constructive algorithms', 'greedy', 'strings'], 'dif': '1900'}
{'pro_id': '1178D', 'name': 'Prime Graph', 'tags': ['constructive algorithms', 'greedy', 'math', 'number theory'], 'dif': '1600'}
{'pro_id': '1178C', 'name': 'Tiles', 'tags': ['combinatorics', 'greedy', 'math'], 'dif': '1300'}
{'pro_id': '1178B', 'name': 'WOW Factor', 'tags': ['dp', 'strings'], 'dif': '1300'}
{'pro_id': '1178A', 'name': 'Prime Minister', 'tags': ['greedy'], 'dif': '1100'}
{'pro_id': '1177B', 'name': 'Digits Sequence (Hard Edition)', 'tags': ['binary search', 'divide and conquer', 'implementation'], 'dif': '1800'}
{'pro_id': '1177A', 'name': 'Digits Sequence (Easy Edition)', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '1176F', 'name': 'Destroy it!', 'tags': ['dp', 'implementation', 'sortings'], 'dif': '2500'}
{'pro_id': '1176E', 'name': 'Cover it!', 'tags': ['dfs and similar', 'dsu', 'graphs', 'shortest paths', 'trees'], 'dif': '1700'}
{'pro_id': '1176D', 'name': 'Recover it!', 'tags': ['dfs and similar', 'graphs', 'greedy', 'number theory', 'sortings'], 'dif': '1900'}
{'pro_id': '1176C', 'name': 'Lose it!', 'tags': ['dp', 'greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '1176B', 'name': 'Merge it!', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '1176A', 'name': 'Divide it!', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '800'}
{'pro_id': '1175G', 'name': 'Yet Another Partiton Problem', 'tags': ['data structures', 'divide and conquer', 'dp', 'geometry', 'two pointers'], 'dif': '2700'}
{'pro_id': '1175F', 'name': 'The Number of Subpermutations', 'tags': ['brute force', 'data structures', 'divide and conquer', 'hashing', 'math'], 'dif': '2600'}
{'pro_id': '1175E', 'name': 'Minimal Segment Cover', 'tags': ['data structures', 'dfs and similar', 'divide and conquer', 'dp', 'greedy', 'implementation', 'trees'], 'dif': '2200'}
{'pro_id': '1175D', 'name': 'Array Splitting', 'tags': ['greedy', 'sortings'], 'dif': '1900'}
{'pro_id': '1175C', 'name': 'Electrification', 'tags': ['binary search', 'brute force', 'greedy'], 'dif': '1600'}
{'pro_id': '1175B', 'name': 'Catch Overflow!', 'tags': ['data structures', 'expression parsing', 'implementation'], 'dif': '1600'}
{'pro_id': '1175A', 'name': 'From Hero to Zero', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '1174F', 'name': 'Ehab and the Big Finale', 'tags': ['constructive algorithms', 'divide and conquer', 'graphs', 'implementation', 'interactive', 'trees'], 'dif': '2300'}
{'pro_id': '1174E', 'name': 'Ehab and the Expected GCD Problem', 'tags': ['combinatorics', 'dp', 'math', 'number theory'], 'dif': '2500'}
{'pro_id': '1174D', 'name': 'Ehab and the Expected XOR Problem', 'tags': ['bitmasks', 'constructive algorithms'], 'dif': '1900'}
{'pro_id': '1174C', 'name': 'Ehab and a Special Coloring Problem', 'tags': ['constructive algorithms', 'number theory'], 'dif': '1300'}
{'pro_id': '1174B', 'name': 'Ehab Is an Odd Person', 'tags': ['sortings'], 'dif': '1200'}
{'pro_id': '1174A', 'name': 'Ehab Fails to Be Thanos', 'tags': ['constructive algorithms', 'greedy', 'sortings'], 'dif': '1000'}
{'pro_id': '1173B', 'name': 'Nauuo and Chess', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1100'}
{'pro_id': '1173A', 'name': 'Nauuo and Votes', 'tags': ['greedy'], 'dif': '700'}
{'pro_id': '1172F', 'name': 'Nauuo and Bug', 'tags': ['data structures'], 'dif': '3300'}
{'pro_id': '1172E', 'name': 'Nauuo and ODT', 'tags': ['data structures'], 'dif': '3300'}
{'pro_id': '1172D', 'name': 'Nauuo and Portals', 'tags': ['constructive algorithms'], 'dif': '2800'}
{'pro_id': '1172C2', 'name': 'Nauuo and Pictures (hard version)', 'tags': ['dp', 'probabilities'], 'dif': '2700'}
{'pro_id': '1172C1', 'name': 'Nauuo and Pictures (easy version)', 'tags': ['dp', 'probabilities'], 'dif': '2500'}
{'pro_id': '1172B', 'name': 'Nauuo and Circle', 'tags': ['combinatorics', 'dfs and similar', 'dp', 'trees'], 'dif': '2000'}
{'pro_id': '1172A', 'name': 'Nauuo and Cards', 'tags': ['greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '1170I', 'name': 'Good Subsets', 'tags': ['*special problem', 'dp'], 'dif': ''}
{'pro_id': '1170H', 'name': 'Longest Saw', 'tags': ['*special problem', 'constructive algorithms'], 'dif': ''}
{'pro_id': '1170G', 'name': 'Graph Decomposition', 'tags': ['*special problem', 'graphs'], 'dif': ''}
{'pro_id': '1170F', 'name': 'Wheels', 'tags': ['*special problem', 'binary search', 'greedy'], 'dif': ''}
{'pro_id': '1170E', 'name': 'Sliding Doors', 'tags': ['*special problem', 'binary search'], 'dif': ''}
{'pro_id': '1170D', 'name': 'Decoding of Integer Sequences', 'tags': ['*special problem', 'data structures', 'implementation'], 'dif': ''}
{'pro_id': '1170C', 'name': 'Minus and Minus Give Plus', 'tags': ['*special problem', 'implementation', 'strings'], 'dif': ''}
{'pro_id': '1170B', 'name': 'Bad Days', 'tags': ['*special problem', 'implementation'], 'dif': ''}
{'pro_id': '1170A', 'name': 'Three Integers Again', 'tags': ['*special problem', 'math'], 'dif': ''}
{'pro_id': '1169B', 'name': 'Pairs', 'tags': ['graphs', 'implementation'], 'dif': '1500'}
{'pro_id': '1169A', 'name': 'Circle Metro', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '1168E', 'name': 'Xor Permutations', 'tags': ['constructive algorithms', 'math'], 'dif': '3100'}
{'pro_id': '1168D', 'name': 'Anagram Paths', 'tags': ['dp', 'implementation', 'trees'], 'dif': '2900'}
{'pro_id': '1168C', 'name': 'And Reachability', 'tags': ['bitmasks', 'dp'], 'dif': '2400'}
{'pro_id': '1168B', 'name': 'Good Triple', 'tags': ['brute force', 'two pointers'], 'dif': '2000'}
{'pro_id': '1168A', 'name': 'Increasing by Modulo', 'tags': ['binary search', 'greedy'], 'dif': '1800'}
{'pro_id': '1167G', 'name': 'Low Budget Inception', 'tags': ['brute force', 'geometry'], 'dif': '3000'}
{'pro_id': '1167F', 'name': 'Scalar Queries', 'tags': ['combinatorics', 'data structures', 'math', 'sortings'], 'dif': '2300'}
{'pro_id': '1167E', 'name': 'Range Deleting', 'tags': ['binary search', 'combinatorics', 'data structures', 'two pointers'], 'dif': '2100'}
{'pro_id': '1167D', 'name': 'Bicolored RBS', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1500'}
{'pro_id': '1167C', 'name': 'News Distribution', 'tags': ['dfs and similar', 'dsu', 'graphs'], 'dif': '1400'}
{'pro_id': '1167B', 'name': 'Lost Numbers', 'tags': ['brute force', 'divide and conquer', 'interactive', 'math'], 'dif': '1400'}
{'pro_id': '1167A', 'name': 'Telephone Number', 'tags': ['brute force', 'greedy', 'strings'], 'dif': '700'}
{'pro_id': '1166F', 'name': "Vicky's Delivery Service", 'tags': ['data structures', 'dsu', 'graphs', 'hashing'], 'dif': '2800'}
{'pro_id': '1166E', 'name': 'The LCMs Must be Large', 'tags': ['bitmasks', 'brute force', 'constructive algorithms', 'math', 'number theory'], 'dif': '2000'}
{'pro_id': '1166D', 'name': 'Cute Sequences', 'tags': ['binary search', 'brute force', 'greedy', 'math'], 'dif': '2100'}
{'pro_id': '1166C', 'name': 'A Tale of Two Lands', 'tags': ['binary search', 'sortings', 'two pointers'], 'dif': '1600'}
{'pro_id': '1166B', 'name': 'All the Vowels Please', 'tags': ['constructive algorithms', 'math', 'number theory'], 'dif': '1100'}
{'pro_id': '1166A', 'name': 'Silent Classroom', 'tags': ['combinatorics', 'greedy'], 'dif': '900'}
{'pro_id': '1165F2', 'name': 'Microtransactions (hard version)', 'tags': ['binary search', 'greedy', 'implementation'], 'dif': '2400'}
{'pro_id': '1165F1', 'name': 'Microtransactions (easy version)', 'tags': ['binary search', 'greedy'], 'dif': '2400'}
{'pro_id': '1165E', 'name': 'Two Arrays and Sum of Functions', 'tags': ['greedy', 'math', 'sortings'], 'dif': '1800'}
{'pro_id': '1165D', 'name': 'Almost All Divisors', 'tags': ['math', 'number theory'], 'dif': '1600'}
{'pro_id': '1165C', 'name': 'Good String', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '1165B', 'name': 'Polycarp Training', 'tags': ['data structures', 'greedy', 'sortings'], 'dif': '1000'}
{'pro_id': '1165A', 'name': 'Remainder', 'tags': ['implementation', 'math'], 'dif': '1200'}
{'pro_id': '1163F', 'name': 'Indecisive Taxi Fee', 'tags': ['data structures', 'graphs', 'shortest paths'], 'dif': '2900'}
{'pro_id': '1163E', 'name': 'Magical Permutation', 'tags': ['bitmasks', 'brute force', 'constructive algorithms', 'data structures', 'graphs', 'math'], 'dif': '2800'}
{'pro_id': '1163D', 'name': 'Mysterious Code', 'tags': ['dp', 'strings'], 'dif': '2200'}
{'pro_id': '1163C2', 'name': 'Power Transmission (Hard Edition)', 'tags': ['data structures', 'geometry', 'implementation', 'math'], 'dif': '2000'}
{'pro_id': '1163C1', 'name': 'Power Transmission (Easy Edition)', 'tags': ['brute force', 'geometry'], 'dif': '1900'}
{'pro_id': '1163B2', 'name': 'Cat Party (Hard Edition)', 'tags': ['data structures', 'implementation'], 'dif': '1700'}
{'pro_id': '1163B1', 'name': 'Cat Party (Easy Edition)', 'tags': ['data structures', 'implementation'], 'dif': '1500'}
{'pro_id': '1163A', 'name': 'Eating Soup', 'tags': ['greedy', 'math'], 'dif': '1000'}
{'pro_id': '1162B', 'name': 'Double Matrix', 'tags': ['brute force', 'greedy'], 'dif': '1400'}
{'pro_id': '1162A', 'name': 'Zoning Restrictions Again', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '1160A2', 'name': 'Collaboration', 'tags': ['*special problem'], 'dif': ''}
{'pro_id': '1159B', 'name': 'Expansion coefficient of the array', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '1159A', 'name': 'A pile of stones', 'tags': ['implementation', 'math'], 'dif': '800'}
{'pro_id': '1158F', 'name': 'Density of subarrays', 'tags': ['dp', 'math'], 'dif': '3400'}
{'pro_id': '1158E', 'name': 'Strange device', 'tags': ['binary search', 'interactive', 'math', 'trees'], 'dif': '3300'}
{'pro_id': '1158D', 'name': 'Winding polygonal line', 'tags': ['constructive algorithms', 'geometry', 'greedy', 'math'], 'dif': '2800'}
{'pro_id': '1158C', 'name': 'Permutation recovery', 'tags': ['constructive algorithms', 'data structures', 'dfs and similar', 'graphs', 'greedy', 'math', 'sortings'], 'dif': '2300'}
{'pro_id': '1158B', 'name': 'The minimal unique substring', 'tags': ['constructive algorithms', 'math', 'strings'], 'dif': '2200'}
{'pro_id': '1158A', 'name': 'The Party and Sweets', 'tags': ['binary search', 'constructive algorithms', 'greedy', 'implementation', 'math', 'sortings', 'two pointers'], 'dif': '1500'}
{'pro_id': '1157G', 'name': 'Inverse of Rows and Columns', 'tags': ['brute force', 'constructive algorithms'], 'dif': '2800'}
{'pro_id': '1157F', 'name': 'Maximum Balanced Circle', 'tags': ['constructive algorithms', 'dp', 'greedy', 'two pointers'], 'dif': '2300'}
{'pro_id': '1157E', 'name': 'Minimum Array', 'tags': ['binary search', 'data structures', 'greedy'], 'dif': '1700'}
{'pro_id': '1157D', 'name': 'N Problems During K Days', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '2100'}
{'pro_id': '1157C2', 'name': 'Increasing Subsequence (hard version)', 'tags': ['greedy'], 'dif': '1700'}
{'pro_id': '1157C1', 'name': 'Increasing Subsequence (easy version)', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '1157B', 'name': 'Long Number', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '1157A', 'name': 'Reachable Numbers', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '1156G', 'name': 'Optimizer', 'tags': ['graphs', 'greedy', 'hashing', 'implementation'], 'dif': '3100'}
{'pro_id': '1156F', 'name': 'Card Bag', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2500'}
{'pro_id': '1156E', 'name': 'Special Segments of Permutation', 'tags': ['data structures', 'divide and conquer', 'dsu', 'two pointers'], 'dif': '2400'}
{'pro_id': '1156D', 'name': '0-1-Tree', 'tags': ['dfs and similar', 'divide and conquer', 'dp', 'dsu', 'trees'], 'dif': '2300'}
{'pro_id': '1156C', 'name': 'Match Points', 'tags': ['binary search', 'greedy', 'sortings', 'ternary search', 'two pointers'], 'dif': '2000'}
{'pro_id': '1156B', 'name': 'Ugly Pairs', 'tags': ['dfs and similar', 'greedy', 'implementation', 'sortings', 'strings'], 'dif': '1800'}
{'pro_id': '1156A', 'name': 'Inscribed Figures', 'tags': ['geometry'], 'dif': '1400'}
{'pro_id': '1155F', 'name': 'Delivery Oligopoly', 'tags': ['brute force', 'dp', 'graphs'], 'dif': '2700'}
{'pro_id': '1155E', 'name': 'Guess the Root', 'tags': ['brute force', 'interactive', 'math'], 'dif': '2200'}
{'pro_id': '1155D', 'name': 'Beautiful Array', 'tags': ['brute force', 'data structures', 'divide and conquer', 'dp', 'greedy'], 'dif': '1900'}
{'pro_id': '1155C', 'name': 'Alarm Clocks Everywhere', 'tags': ['math', 'number theory'], 'dif': '1300'}
{'pro_id': '1155B', 'name': 'Game with Telephone Numbers', 'tags': ['games', 'greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '1155A', 'name': 'Reverse a Substring', 'tags': ['implementation', 'sortings', 'strings'], 'dif': '1000'}
{'pro_id': '1154G', 'name': 'Minimum Possible LCM', 'tags': ['brute force', 'greedy', 'math', 'number theory'], 'dif': '2400'}
{'pro_id': '1154F', 'name': 'Shovels Shop', 'tags': ['dp', 'greedy', 'sortings'], 'dif': '2300'}
{'pro_id': '1154E', 'name': 'Two Teams', 'tags': ['data structures', 'implementation', 'sortings'], 'dif': '1800'}
{'pro_id': '1154D', 'name': 'Walking Robot', 'tags': ['greedy'], 'dif': '1400'}
{'pro_id': '1154C', 'name': 'Gourmet Cat', 'tags': ['implementation', 'math'], 'dif': '1400'}
{'pro_id': '1154B', 'name': 'Make Them Equal', 'tags': ['math'], 'dif': '1200'}
{'pro_id': '1154A', 'name': 'Restoring Three Numbers', 'tags': ['math'], 'dif': '600'}
{'pro_id': '1153F', 'name': 'Serval and Bonus Problem', 'tags': ['combinatorics', 'dp', 'math', 'probabilities'], 'dif': '2800'}
{'pro_id': '1153E', 'name': 'Serval and Snake', 'tags': ['binary search', 'brute force', 'interactive'], 'dif': '2100'}
{'pro_id': '1153D', 'name': 'Serval and Rooted Tree', 'tags': ['binary search', 'dfs and similar', 'dp', 'greedy', 'trees'], 'dif': '1800'}
{'pro_id': '1153C', 'name': 'Serval and Parenthesis Sequence', 'tags': ['greedy', 'strings'], 'dif': '1600'}
{'pro_id': '1153B', 'name': 'Serval and Toy Bricks', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1200'}
{'pro_id': '1153A', 'name': 'Serval and Bus', 'tags': ['brute force', 'math'], 'dif': '1100'}
{'pro_id': '1152F2', 'name': 'Neko Rules the Catniverse (Large Version)', 'tags': ['bitmasks', 'dp', 'matrices'], 'dif': '2900'}
{'pro_id': '1152F1', 'name': 'Neko Rules the Catniverse (Small Version)', 'tags': ['bitmasks', 'dp', 'matrices'], 'dif': '2900'}
{'pro_id': '1152E', 'name': 'Neko and Flashback', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs'], 'dif': '2500'}
{'pro_id': '1152D', 'name': "Neko and Aki's Prank", 'tags': ['dp', 'greedy', 'trees'], 'dif': '2000'}
{'pro_id': '1152C', 'name': 'Neko does Maths', 'tags': ['brute force', 'math', 'number theory'], 'dif': '1800'}
{'pro_id': '1152B', 'name': 'Neko Performs Cat Furrier Transform', 'tags': ['bitmasks', 'constructive algorithms', 'dfs and similar', 'math'], 'dif': '1300'}
{'pro_id': '1152A', 'name': 'Neko Finds Grapes', 'tags': ['greedy', 'implementation', 'math'], 'dif': '800'}
{'pro_id': '1151F', 'name': 'Sonya and Informatics', 'tags': ['combinatorics', 'dp', 'matrices', 'probabilities'], 'dif': '2500'}
{'pro_id': '1151E', 'name': 'Number of Components', 'tags': ['combinatorics', 'data structures', 'dp', 'math'], 'dif': '2100'}
{'pro_id': '1151D', 'name': 'Stas and the Queue at the Buffet', 'tags': ['greedy', 'math', 'sortings'], 'dif': '1500'}
{'pro_id': '1151C', 'name': 'Problem for Nazar', 'tags': ['constructive algorithms', 'math'], 'dif': '1700'}
{'pro_id': '1151B', 'name': 'Dima and a Bad XOR', 'tags': ['bitmasks', 'brute force', 'constructive algorithms', 'dp'], 'dif': '1600'}
{'pro_id': '1151A', 'name': 'Maxim and Biology', 'tags': ['brute force', 'strings'], 'dif': '1000'}
{'pro_id': '1150B', 'name': 'Tiling Challenge', 'tags': ['greedy', 'implementation'], 'dif': '1100'}
{'pro_id': '1150A', 'name': 'Stock Arbitraging', 'tags': ['greedy', 'implementation'], 'dif': '900'}
{'pro_id': '1149E', 'name': 'Election Promises', 'tags': ['games', 'graphs'], 'dif': '3100'}
{'pro_id': '1149D', 'name': 'Abandoning Roads', 'tags': ['brute force', 'dp', 'graphs', 'greedy'], 'dif': '2900'}
{'pro_id': '1149C', 'name': 'Tree Generator™', 'tags': ['data structures', 'implementation', 'trees'], 'dif': '2900'}
{'pro_id': '1149B', 'name': 'Three Religions', 'tags': ['dp', 'implementation', 'strings'], 'dif': '2200'}
{'pro_id': '1149A', 'name': 'Prefix Sum Primes', 'tags': ['constructive algorithms', 'greedy', 'math', 'number theory'], 'dif': '1300'}
{'pro_id': '1148H', 'name': 'Holy Diver', 'tags': ['data structures'], 'dif': '3600'}
{'pro_id': '1148G', 'name': 'Gold Experience', 'tags': ['constructive algorithms', 'graphs', 'math', 'number theory', 'probabilities'], 'dif': '3100'}
{'pro_id': '1148F', 'name': 'Foo Fighters', 'tags': ['bitmasks', 'constructive algorithms'], 'dif': '2500'}
{'pro_id': '1148E', 'name': 'Earth Wind and Fire', 'tags': ['constructive algorithms', 'greedy', 'math', 'sortings', 'two pointers'], 'dif': '2300'}
{'pro_id': '1148D', 'name': 'Dirty Deeds Done Dirt Cheap', 'tags': ['greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '1148C', 'name': 'Crazy Diamond', 'tags': ['constructive algorithms', 'sortings'], 'dif': '1700'}
{'pro_id': '1148B', 'name': 'Born This Way', 'tags': ['binary search', 'brute force', 'two pointers'], 'dif': '1700'}
{'pro_id': '1148A', 'name': 'Another One Bites The Dust', 'tags': ['greedy'], 'dif': '700'}
{'pro_id': '1147F', 'name': 'Zigzag Game', 'tags': ['games', 'interactive'], 'dif': '3400'}
{'pro_id': '1147E', 'name': 'Rainbow Coins', 'tags': ['interactive'], 'dif': '2900'}
{'pro_id': '1147D', 'name': 'Palindrome XOR', 'tags': ['dfs and similar', 'graphs'], 'dif': '2600'}
{'pro_id': '1147C', 'name': 'Thanos Nim', 'tags': ['games'], 'dif': '2100'}
{'pro_id': '1147B', 'name': 'Chladni Figure', 'tags': ['brute force', 'strings'], 'dif': '1900'}
{'pro_id': '1147A', 'name': 'Hide and Seek', 'tags': ['graphs'], 'dif': '1500'}
{'pro_id': '1146H', 'name': 'Satanic Panic', 'tags': ['dp', 'geometry'], 'dif': '2800'}
{'pro_id': '1146G', 'name': 'Zoning Restrictions', 'tags': ['dp', 'flows', 'graphs'], 'dif': '2600'}
{'pro_id': '1146F', 'name': 'Leaf Partition', 'tags': ['dp', 'trees'], 'dif': '2400'}
{'pro_id': '1146E', 'name': 'Hot is Cold', 'tags': ['bitmasks', 'data structures', 'divide and conquer', 'implementation'], 'dif': '2400'}
{'pro_id': '1146D', 'name': 'Frog Jumping', 'tags': ['dfs and similar', 'math', 'number theory'], 'dif': '2100'}
{'pro_id': '1146C', 'name': 'Tree Diameter', 'tags': ['bitmasks', 'graphs', 'interactive'], 'dif': '1700'}
{'pro_id': '1146B', 'name': 'Hate "A"', 'tags': ['implementation', 'strings'], 'dif': '1100'}
{'pro_id': '1146A', 'name': 'Love "A"', 'tags': ['implementation', 'strings'], 'dif': '600'}
{'pro_id': '1145G', 'name': 'AI Takeover', 'tags': [], 'dif': ''}
{'pro_id': '1145F', 'name': 'Neat Words', 'tags': [], 'dif': ''}
{'pro_id': '1145E', 'name': 'Fourier Doodles', 'tags': [], 'dif': ''}
{'pro_id': '1145D', 'name': "Pigeon d'Or", 'tags': ['implementation'], 'dif': ''}
{'pro_id': '1145C', 'name': 'Mystery Circuit', 'tags': ['bitmasks', 'brute force'], 'dif': ''}
{'pro_id': '1145B', 'name': 'Kanban Numbers', 'tags': ['brute force'], 'dif': ''}
{'pro_id': '1145A', 'name': 'Thanos Sort', 'tags': ['implementation'], 'dif': ''}
{'pro_id': '1144G', 'name': 'Two Merged Sequences', 'tags': ['dp', 'greedy'], 'dif': '2600'}
{'pro_id': '1144F', 'name': 'Graph Without Long Directed Paths', 'tags': ['dfs and similar', 'graphs'], 'dif': '1700'}
{'pro_id': '1144E', 'name': 'Median String', 'tags': ['bitmasks', 'math', 'number theory', 'strings'], 'dif': '1900'}
{'pro_id': '1144D', 'name': 'Equalize Them All', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1400'}
{'pro_id': '1144C', 'name': 'Two Shuffled Sequences', 'tags': ['constructive algorithms', 'sortings'], 'dif': '1100'}
{'pro_id': '1144B', 'name': 'Parity Alternated Deletions', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1000'}
{'pro_id': '1144A', 'name': 'Diverse Strings', 'tags': ['implementation', 'strings'], 'dif': '900'}
{'pro_id': '1143C', 'name': 'Queen', 'tags': ['dfs and similar', 'trees'], 'dif': '1400'}
{'pro_id': '1143B', 'name': 'Nirvana', 'tags': ['brute force', 'math', 'number theory'], 'dif': '1300'}
{'pro_id': '1143A', 'name': 'The Doors', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '1142E', 'name': 'Pink Floyd', 'tags': ['graphs', 'interactive'], 'dif': '3100'}
{'pro_id': '1142D', 'name': 'Foreigner', 'tags': ['dp'], 'dif': '2700'}
{'pro_id': '1142C', 'name': 'U2', 'tags': ['geometry'], 'dif': '2800'}
{'pro_id': '1142B', 'name': 'Lynyrd Skynyrd', 'tags': ['data structures', 'dfs and similar', 'dp', 'math', 'trees'], 'dif': '2300'}
{'pro_id': '1142A', 'name': 'The Beatles', 'tags': ['brute force', 'math'], 'dif': '1800'}
{'pro_id': '1141G', 'name': 'Privatization of Roads in Treeland', 'tags': ['binary search', 'constructive algorithms', 'dfs and similar', 'graphs', 'greedy', 'trees'], 'dif': '2500'}
{'pro_id': '1141F2', 'name': 'Same Sum Blocks (Hard)', 'tags': ['data structures', 'greedy'], 'dif': '2200'}
{'pro_id': '1141F1', 'name': 'Same Sum Blocks (Easy)', 'tags': ['greedy'], 'dif': '2000'}
{'pro_id': '1141E', 'name': 'Superhero Battle', 'tags': ['math'], 'dif': '1700'}
{'pro_id': '1141D', 'name': 'Colored Boots', 'tags': ['greedy', 'implementation'], 'dif': '1500'}
{'pro_id': '1141C', 'name': 'Polycarp Restores Permutation', 'tags': ['math'], 'dif': '1400'}
{'pro_id': '1141B', 'name': 'Maximal Continuous Rest', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '1141A', 'name': 'Game 23', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '1140G', 'name': 'Double Tree', 'tags': ['data structures', 'divide and conquer', 'shortest paths', 'trees'], 'dif': '2900'}
{'pro_id': '1140F', 'name': 'Extending Set of Points', 'tags': ['data structures', 'divide and conquer', 'dsu'], 'dif': '2700'}
{'pro_id': '1140E', 'name': 'Palindrome-less Arrays', 'tags': ['combinatorics', 'divide and conquer', 'dp'], 'dif': '2200'}
{'pro_id': '1140D', 'name': 'Minimum Triangulation', 'tags': ['dp', 'greedy', 'math'], 'dif': '1200'}
{'pro_id': '1140C', 'name': 'Playlist', 'tags': ['brute force', 'data structures', 'sortings'], 'dif': '1600'}
{'pro_id': '1140B', 'name': 'Good String', 'tags': ['implementation', 'strings'], 'dif': '1200'}
{'pro_id': '1140A', 'name': 'Detective Book', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '1139F', 'name': 'Dish Shopping', 'tags': ['data structures', 'divide and conquer'], 'dif': '2800'}
{'pro_id': '1139E', 'name': 'Maximize Mex', 'tags': ['flows', 'graph matchings', 'graphs'], 'dif': '2400'}
{'pro_id': '1139D', 'name': 'Steps to One', 'tags': ['dp', 'math', 'number theory', 'probabilities'], 'dif': '2300'}
{'pro_id': '1139C', 'name': 'Edgy Trees', 'tags': ['dfs and similar', 'dsu', 'graphs', 'math', 'trees'], 'dif': '1500'}
{'pro_id': '1139B', 'name': 'Chocolates', 'tags': ['greedy', 'implementation'], 'dif': '1100'}
{'pro_id': '1139A', 'name': 'Even Substrings', 'tags': ['implementation', 'strings'], 'dif': '700'}
{'pro_id': '1138B', 'name': 'Circus', 'tags': ['brute force', 'greedy', 'math', 'strings'], 'dif': '1700'}
{'pro_id': '1138A', 'name': 'Sushi for Two', 'tags': ['binary search', 'greedy', 'implementation'], 'dif': '900'}
{'pro_id': '1137F', 'name': "Matches Are Not a Child's Play", 'tags': ['data structures', 'trees'], 'dif': '3300'}
{'pro_id': '1137E', 'name': 'Train Car Selection', 'tags': ['data structures', 'greedy'], 'dif': '2800'}
{'pro_id': '1137D', 'name': 'Cooperative Game', 'tags': ['constructive algorithms', 'interactive', 'number theory'], 'dif': '2500'}
{'pro_id': '1137C', 'name': 'Museums Tour', 'tags': ['dp', 'graphs', 'implementation'], 'dif': '2800'}
{'pro_id': '1137B', 'name': 'Camp Schedule', 'tags': ['greedy', 'hashing', 'strings'], 'dif': '1700'}
{'pro_id': '1137A', 'name': 'Skyscrapers', 'tags': ['implementation', 'sortings'], 'dif': '1600'}
{'pro_id': '1136E', 'name': "Nastya Hasn't Written a Legend", 'tags': ['binary search', 'data structures'], 'dif': '2500'}
{'pro_id': '1136D', 'name': 'Nastya Is Buying Lunch', 'tags': ['greedy'], 'dif': '1800'}
{'pro_id': '1136C', 'name': 'Nastya Is Transposing Matrices', 'tags': ['constructive algorithms', 'sortings'], 'dif': '1500'}
{'pro_id': '1136B', 'name': 'Nastya Is Playing Computer Games', 'tags': ['constructive algorithms', 'math'], 'dif': '1000'}
{'pro_id': '1136A', 'name': 'Nastya Is Reading a Book', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '1133F2', 'name': 'Spanning Tree with One Fixed Degree', 'tags': ['constructive algorithms', 'dfs and similar', 'dsu', 'graphs', 'greedy'], 'dif': '2200'}
{'pro_id': '1133F1', 'name': 'Spanning Tree with Maximum Degree', 'tags': ['graphs'], 'dif': '1600'}
{'pro_id': '1133E', 'name': 'K Balanced Teams', 'tags': ['dp', 'sortings', 'two pointers'], 'dif': '2000'}
{'pro_id': '1133D', 'name': 'Zero Quantity Maximization', 'tags': ['hashing', 'math', 'number theory'], 'dif': '1500'}
{'pro_id': '1133C', 'name': 'Balanced Team', 'tags': ['sortings', 'two pointers'], 'dif': '1300'}
{'pro_id': '1133B', 'name': "Preparation for International Women's Day", 'tags': ['math', 'number theory'], 'dif': '1300'}
{'pro_id': '1133A', 'name': 'Middle of the Contest', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '1132G', 'name': 'Greedy Subsequences', 'tags': ['data structures', 'dp', 'trees'], 'dif': '2600'}
{'pro_id': '1132F', 'name': 'Clear the String', 'tags': ['dp'], 'dif': '2000'}
{'pro_id': '1132E', 'name': 'Knapsack', 'tags': ['dfs and similar', 'dp', 'greedy'], 'dif': '2400'}
{'pro_id': '1132D', 'name': 'Stressful Training', 'tags': ['binary search', 'greedy'], 'dif': '2300'}
{'pro_id': '1132C', 'name': 'Painting the Fence', 'tags': ['brute force'], 'dif': '1700'}
{'pro_id': '1132B', 'name': 'Discounts', 'tags': ['greedy', 'sortings'], 'dif': '900'}
{'pro_id': '1132A', 'name': 'Regular Bracket Sequence', 'tags': ['greedy', 'implementation'], 'dif': '1100'}
{'pro_id': '1131G', 'name': 'Most Dangerous Shark', 'tags': ['data structures', 'dp', 'two pointers'], 'dif': '2900'}
{'pro_id': '1131F', 'name': 'Asya And Kittens', 'tags': ['constructive algorithms', 'dsu'], 'dif': '1700'}
{'pro_id': '1131E', 'name': 'String Multiplication', 'tags': ['dp', 'greedy', 'strings'], 'dif': '2200'}
{'pro_id': '1131D', 'name': 'Gourmet choice', 'tags': ['dfs and similar', 'dp', 'dsu', 'graphs', 'greedy'], 'dif': '2000'}
{'pro_id': '1131C', 'name': 'Birthday', 'tags': ['binary search', 'greedy', 'sortings'], 'dif': '1200'}
{'pro_id': '1131B', 'name': 'Draw!', 'tags': ['greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '1131A', 'name': 'Sea Battle', 'tags': ['math'], 'dif': '800'}
{'pro_id': '1130C', 'name': 'Connect', 'tags': ['brute force', 'dfs and similar', 'dsu'], 'dif': '1400'}
{'pro_id': '1130B', 'name': 'Two Cakes', 'tags': ['greedy'], 'dif': '1200'}
{'pro_id': '1130A', 'name': 'Be Positive', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '1129E', 'name': 'Legendary Tree', 'tags': ['binary search', 'interactive', 'trees'], 'dif': '3000'}
{'pro_id': '1129D', 'name': 'Isolation', 'tags': ['data structures', 'dp'], 'dif': '2800'}
{'pro_id': '1129C', 'name': 'Morse Code', 'tags': ['binary search', 'data structures', 'dp', 'hashing', 'sortings', 'string suffix structures', 'strings'], 'dif': '2300'}
{'pro_id': '1129B', 'name': 'Wrong Answer', 'tags': ['constructive algorithms'], 'dif': '2200'}
{'pro_id': '1129A2', 'name': 'Toy Train', 'tags': ['brute force', 'greedy'], 'dif': '1800'}
{'pro_id': '1129A1', 'name': 'Toy Train (Simplified)', 'tags': ['brute force', 'greedy'], 'dif': '1700'}
{'pro_id': '1121C', 'name': 'System Testing', 'tags': ['implementation'], 'dif': '1900'}
{'pro_id': '1121B', 'name': 'Mike and Children', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '1121A', 'name': 'Technogoblet of Fire', 'tags': ['implementation', 'sortings'], 'dif': '1100'}
{'pro_id': '1120F', 'name': 'Secret Letters', 'tags': ['data structures', 'dp', 'greedy'], 'dif': '2900'}
{'pro_id': '1120E', 'name': 'The very same Munchhausen', 'tags': ['brute force'], 'dif': '3000'}
{'pro_id': '1120D', 'name': 'Power Tree', 'tags': ['dfs and similar', 'dp', 'dsu', 'graphs', 'greedy', 'trees'], 'dif': '2400'}
{'pro_id': '1120C', 'name': 'Compress String', 'tags': ['dp', 'strings'], 'dif': '2200'}
{'pro_id': '1120B', 'name': 'Once in a casino', 'tags': ['constructive algorithms', 'greedy', 'implementation', 'math'], 'dif': '2700'}
{'pro_id': '1120A', 'name': 'Diana and Liana', 'tags': ['greedy', 'implementation', 'two pointers'], 'dif': '2200'}
{'pro_id': '1119H', 'name': 'Triple', 'tags': ['fft', 'math'], 'dif': '3100'}
{'pro_id': '1119G', 'name': 'Get Ready for the Battle', 'tags': ['constructive algorithms', 'implementation'], 'dif': '3000'}
{'pro_id': '1119F', 'name': 'Niyaz and Small Degrees', 'tags': ['data structures', 'dp', 'trees'], 'dif': '2900'}
{'pro_id': '1119E', 'name': 'Pavel and Triangles', 'tags': ['brute force', 'dp', 'fft', 'greedy', 'ternary search'], 'dif': '1900'}
{'pro_id': '1119D', 'name': 'Frets On Fire', 'tags': ['binary search', 'sortings'], 'dif': '1700'}
{'pro_id': '1119C', 'name': 'Ramesses and Corner Inversion', 'tags': ['constructive algorithms', 'greedy', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '1119B', 'name': 'Alyona and a Narrow Fridge', 'tags': ['binary search', 'flows', 'greedy', 'sortings'], 'dif': '1300'}
{'pro_id': '1119A', 'name': 'Ilya and a Colorful Walk', 'tags': ['greedy', 'implementation'], 'dif': '1100'}
{'pro_id': '1118F2', 'name': 'Tree Cutting (Hard Version)', 'tags': ['combinatorics', 'dfs and similar', 'dp', 'trees'], 'dif': '2700'}
{'pro_id': '1118F1', 'name': 'Tree Cutting (Easy Version)', 'tags': ['dfs and similar', 'trees'], 'dif': '1800'}
{'pro_id': '1118E', 'name': 'Yet Another Ball Problem', 'tags': ['constructive algorithms', 'implementation'], 'dif': '2000'}
{'pro_id': '1118D2', 'name': 'Coffee and Coursework (Hard Version)', 'tags': ['binary search', 'greedy'], 'dif': '1900'}
{'pro_id': '1118D1', 'name': 'Coffee and Coursework (Easy version)', 'tags': ['brute force', 'greedy'], 'dif': '1800'}
{'pro_id': '1118C', 'name': 'Palindromic Matrix', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1700'}
{'pro_id': '1118B', 'name': 'Tanya and Candies', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '1118A', 'name': 'Water Buying', 'tags': ['math'], 'dif': '800'}
{'pro_id': '1117G', 'name': 'Recursive Queries', 'tags': ['data structures'], 'dif': '2500'}
{'pro_id': '1117F', 'name': 'Crisp String', 'tags': ['bitmasks', 'dp'], 'dif': '2600'}
{'pro_id': '1117E', 'name': 'Decypher the String', 'tags': ['bitmasks', 'chinese remainder theorem', 'constructive algorithms', 'interactive', 'math'], 'dif': '2200'}
{'pro_id': '1117D', 'name': 'Magic Gems', 'tags': ['dp', 'math', 'matrices'], 'dif': '2000'}
{'pro_id': '1117C', 'name': 'Magic Ship', 'tags': ['binary search'], 'dif': '1800'}
{'pro_id': '1117B', 'name': 'Emotes', 'tags': ['greedy', 'math', 'sortings'], 'dif': '1000'}
{'pro_id': '1117A', 'name': 'Best Subsegment', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '1116D6', 'name': 'Hessenberg matrix', 'tags': [], 'dif': ''}
{'pro_id': '1116D5', 'name': 'Creeper', 'tags': [], 'dif': ''}
{'pro_id': '1116D4', 'name': 'TIE fighter', 'tags': [], 'dif': ''}
{'pro_id': '1116D3', 'name': 'X-wing fighter', 'tags': [], 'dif': ''}
{'pro_id': '1116D2', 'name': 'Pattern of increasing blocks', 'tags': [], 'dif': ''}
{'pro_id': '1116D1', 'name': 'Block diagonal matrix', 'tags': [], 'dif': ''}
{'pro_id': '1116C3', 'name': '"Is the number of ones divisible by 3?" oracle', 'tags': [], 'dif': ''}
{'pro_id': '1116C2', 'name': '"Is the bit string periodic?" oracle', 'tags': [], 'dif': ''}
{'pro_id': '1116C1', 'name': 'Alternating bits oracle', 'tags': [], 'dif': ''}
{'pro_id': '1116B2', 'name': 'Not A, not B or not C?', 'tags': [], 'dif': ''}
{'pro_id': '1116B1', 'name': 'Distinguish three-qubit states', 'tags': [], 'dif': ''}
{'pro_id': '1116A2', 'name': 'Generate equal superposition of four basis states', 'tags': [], 'dif': ''}
{'pro_id': '1116A1', 'name': 'Generate state |00⟩ + |01⟩ + |10⟩', 'tags': [], 'dif': ''}
{'pro_id': '1115U3', 'name': 'Block unitary', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '1115U2', 'name': 'Chessboard unitary', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '1115U1', 'name': 'Anti-diagonal unitary', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '1115G3', 'name': 'Palindrome checker oracle', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '1115G2', 'name': 'OR oracle', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '1115G1', 'name': 'AND oracle', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '1114F', 'name': 'Please, another Queries on Array?', 'tags': ['bitmasks', 'data structures', 'divide and conquer', 'math', 'number theory'], 'dif': '2500'}
{'pro_id': '1114E', 'name': 'Arithmetic Progression', 'tags': ['binary search', 'interactive', 'number theory', 'probabilities'], 'dif': '2100'}
{'pro_id': '1114D', 'name': 'Flood Fill', 'tags': ['dp'], 'dif': '1900'}
{'pro_id': '1114C', 'name': "Trailing Loves (or L'oeufs?)", 'tags': ['brute force', 'implementation', 'math', 'number theory'], 'dif': '1700'}
{'pro_id': '1114B', 'name': 'Yet Another Array Partitioning Task', 'tags': ['constructive algorithms', 'greedy', 'sortings'], 'dif': '1500'}
{'pro_id': '1114A', 'name': 'Got Any Grapes?', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '800'}
{'pro_id': '1113B', 'name': 'Sasha and Magnetic Machines', 'tags': ['greedy', 'number theory'], 'dif': '1300'}
{'pro_id': '1113A', 'name': 'Sasha and His Trip', 'tags': ['dp', 'greedy', 'math'], 'dif': '900'}
{'pro_id': '1111E', 'name': 'Tree', 'tags': ['data structures', 'dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '2800'}
{'pro_id': '1111D', 'name': 'Destroy the Colony', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2500'}
{'pro_id': '1111C', 'name': 'Creative Snap', 'tags': ['binary search', 'brute force', 'divide and conquer', 'math'], 'dif': '1700'}
{'pro_id': '1111B', 'name': 'Average Superhero Gang Power', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1600'}
{'pro_id': '1111A', 'name': 'Superhero Transformation', 'tags': ['implementation', 'strings'], 'dif': '1000'}
{'pro_id': '1110H', 'name': 'Modest Substrings', 'tags': ['dp', 'strings'], 'dif': '3500'}
{'pro_id': '1110G', 'name': 'Tree-Tac-Toe', 'tags': ['constructive algorithms', 'games', 'trees'], 'dif': '3000'}
{'pro_id': '1110F', 'name': 'Nearest Leaf', 'tags': ['data structures', 'trees'], 'dif': '2600'}
{'pro_id': '1110E', 'name': 'Magic Stones', 'tags': ['constructive algorithms', 'math', 'sortings'], 'dif': '2200'}
{'pro_id': '1110D', 'name': 'Jongmah', 'tags': ['dp'], 'dif': '2200'}
{'pro_id': '1110C', 'name': 'Meaningless Operations', 'tags': ['constructive algorithms', 'math', 'number theory'], 'dif': '1500'}
{'pro_id': '1110B', 'name': 'Tape', 'tags': ['greedy', 'sortings'], 'dif': '1400'}
{'pro_id': '1110A', 'name': 'Parity', 'tags': ['math'], 'dif': '1000'}
{'pro_id': '1109F', 'name': "Sasha and Algorithm of Silence's Sounds", 'tags': ['data structures', 'trees'], 'dif': '3200'}
{'pro_id': '1109E', 'name': 'Sasha and a Very Easy Test', 'tags': ['data structures', 'number theory'], 'dif': '2700'}
{'pro_id': '1109D', 'name': 'Sasha and Interesting Fact from Graph Theory', 'tags': ['brute force', 'combinatorics', 'dp', 'math', 'trees'], 'dif': '2600'}
{'pro_id': '1109C', 'name': 'Sasha and a Patient Friend', 'tags': ['binary search', 'data structures', 'implementation'], 'dif': '2800'}
{'pro_id': '1109B', 'name': 'Sasha and One More Name', 'tags': ['constructive algorithms', 'hashing', 'strings'], 'dif': '1800'}
{'pro_id': '1109A', 'name': 'Sasha and a Bit of Relax', 'tags': ['dp', 'implementation'], 'dif': '1600'}
{'pro_id': '1108F', 'name': 'MST Unification', 'tags': ['binary search', 'dsu', 'graphs', 'greedy'], 'dif': '2300'}
{'pro_id': '1108E2', 'name': 'Array and Segments (Hard version)', 'tags': ['data structures', 'implementation'], 'dif': '2300'}
{'pro_id': '1108E1', 'name': 'Array and Segments (Easy version)', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '1108D', 'name': 'Diverse Garland', 'tags': ['constructive algorithms', 'dp', 'greedy'], 'dif': '1400'}
{'pro_id': '1108C', 'name': 'Nice Garland', 'tags': ['brute force', 'greedy', 'math'], 'dif': '1300'}
{'pro_id': '1108B', 'name': 'Divisors of Two Integers', 'tags': ['brute force', 'greedy', 'math', 'number theory'], 'dif': '1100'}
{'pro_id': '1108A', 'name': 'Two distinct points', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '1107G', 'name': 'Vasya and Maximum Profit', 'tags': ['binary search', 'constructive algorithms', 'data structures', 'dp', 'dsu'], 'dif': '2400'}
{'pro_id': '1107F', 'name': 'Vasya and Endless Credits', 'tags': ['dp', 'flows', 'graph matchings', 'graphs', 'sortings'], 'dif': '2700'}
{'pro_id': '1107E', 'name': 'Vasya and Binary String', 'tags': ['dp'], 'dif': '2400'}
{'pro_id': '1107D', 'name': 'Compression', 'tags': ['dp', 'implementation', 'math', 'number theory'], 'dif': '1800'}
{'pro_id': '1107C', 'name': 'Brutality', 'tags': ['greedy', 'sortings', 'two pointers'], 'dif': '1300'}
{'pro_id': '1107B', 'name': 'Digital root', 'tags': ['math', 'number theory'], 'dif': '1100'}
{'pro_id': '1107A', 'name': 'Digits Sequence Dividing', 'tags': ['greedy', 'strings'], 'dif': '1000'}
{'pro_id': '1106F', 'name': 'Lunar New Year and a Recursive Sequence', 'tags': ['math', 'matrices', 'number theory'], 'dif': '2400'}
{'pro_id': '1106E', 'name': 'Lunar New Year and Red Envelopes', 'tags': ['data structures', 'dp'], 'dif': '2100'}
{'pro_id': '1106D', 'name': 'Lunar New Year and a Wander', 'tags': ['data structures', 'dfs and similar', 'graphs', 'greedy', 'shortest paths'], 'dif': '1500'}
{'pro_id': '1106C', 'name': 'Lunar New Year and Number Division', 'tags': ['greedy', 'implementation', 'math', 'sortings'], 'dif': '1000'}
{'pro_id': '1106B', 'name': 'Lunar New Year and Food Ordering', 'tags': ['data structures', 'implementation'], 'dif': '1500'}
{'pro_id': '1106A', 'name': 'Lunar New Year and Cross Counting', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '1105E', 'name': 'Helping Hiasat', 'tags': ['bitmasks', 'brute force', 'dp', 'meet-in-the-middle'], 'dif': '2200'}
{'pro_id': '1105D', 'name': 'Kilani and the Game', 'tags': ['dfs and similar', 'graphs', 'implementation', 'shortest paths'], 'dif': '1900'}
{'pro_id': '1105C', 'name': 'Ayoub and Lost Array', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '1500'}
{'pro_id': '1105B', 'name': 'Zuhair and Strings', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1200'}
{'pro_id': '1105A', 'name': 'Salem and Sticks', 'tags': ['brute force', 'implementation'], 'dif': '1100'}
{'pro_id': '1104B', 'name': 'Game with string', 'tags': ['data structures', 'implementation', 'math'], 'dif': '1300'}
{'pro_id': '1104A', 'name': 'Splitting into digits', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '800'}
{'pro_id': '1103E', 'name': 'Radix sum', 'tags': ['fft', 'math', 'number theory'], 'dif': '3300'}
{'pro_id': '1103D', 'name': 'Professional layer', 'tags': ['bitmasks', 'dp'], 'dif': '3000'}
{'pro_id': '1103C', 'name': 'Johnny Solving', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs', 'math'], 'dif': '2800'}
{'pro_id': '1103B', 'name': 'Game with modulo', 'tags': ['binary search', 'constructive algorithms', 'interactive'], 'dif': '2000'}
{'pro_id': '1103A', 'name': 'Grid game', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1400'}
{'pro_id': '1102F', 'name': 'Elongated Matrix', 'tags': ['binary search', 'bitmasks', 'brute force', 'dp', 'graphs'], 'dif': '2400'}
{'pro_id': '1102E', 'name': 'Monotonic Renumeration', 'tags': ['combinatorics', 'sortings'], 'dif': '1800'}
{'pro_id': '1102D', 'name': 'Balanced Ternary String', 'tags': ['greedy', 'strings'], 'dif': '1600'}
{'pro_id': '1102C', 'name': 'Doors Breaking and Repairing', 'tags': ['games'], 'dif': '1200'}
{'pro_id': '1102B', 'name': 'Array K-Coloring', 'tags': ['greedy', 'sortings'], 'dif': '1400'}
{'pro_id': '1102A', 'name': 'Integer Sequence Dividing', 'tags': ['math'], 'dif': '1000'}
{'pro_id': '1101G', 'name': '(Zero XOR Subset)-less', 'tags': ['math', 'matrices'], 'dif': '2400'}
{'pro_id': '1101F', 'name': 'Trucks and Cities', 'tags': ['binary search', 'dp'], 'dif': '2500'}
{'pro_id': '1101E', 'name': "Polycarp's New Job", 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '1101D', 'name': 'GCD Counting', 'tags': ['data structures', 'dfs and similar', 'dp', 'number theory', 'trees'], 'dif': '2000'}
{'pro_id': '1101C', 'name': 'Division and Union', 'tags': ['sortings'], 'dif': '1600'}
{'pro_id': '1101B', 'name': 'Accordion', 'tags': ['greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '1101A', 'name': 'Minimum Integer', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '1100F', 'name': 'Ivan and Burgers', 'tags': ['data structures', 'divide and conquer', 'greedy', 'math'], 'dif': '2600'}
{'pro_id': '1100E', 'name': 'Andrew and Taxi', 'tags': ['binary search', 'dfs and similar', 'graphs'], 'dif': '2200'}
{'pro_id': '1100D', 'name': 'Dasha and Chess', 'tags': ['constructive algorithms', 'games', 'interactive'], 'dif': '2400'}
{'pro_id': '1100C', 'name': 'NN and the Optical Illusion', 'tags': ['binary search', 'geometry', 'math'], 'dif': '1300'}
{'pro_id': '1100B', 'name': 'Build a Contest', 'tags': ['data structures', 'implementation'], 'dif': '1300'}
{'pro_id': '1100A', 'name': 'Roman and Browser', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '1099F', 'name': 'Cookies', 'tags': ['binary search', 'data structures', 'dfs and similar', 'dp', 'games', 'trees'], 'dif': '2300'}
{'pro_id': '1099C', 'name': 'Postcard', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1300'}
{'pro_id': '1099B', 'name': 'Squares and Segments', 'tags': ['binary search', 'constructive algorithms', 'math'], 'dif': '1100'}
{'pro_id': '1099A', 'name': 'Snowball', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '1098F', 'name': 'Ж-function', 'tags': ['string suffix structures', 'strings'], 'dif': '3500'}
{'pro_id': '1098E', 'name': 'Fedya the Potter', 'tags': ['binary search', 'implementation', 'math', 'number theory'], 'dif': '3400'}
{'pro_id': '1098D', 'name': 'Eels', 'tags': ['data structures'], 'dif': '2700'}
{'pro_id': '1098C', 'name': 'Construct a tree', 'tags': ['binary search', 'constructive algorithms', 'dfs and similar', 'graphs', 'greedy', 'trees'], 'dif': '2300'}
{'pro_id': '1098B', 'name': 'Nice table', 'tags': ['brute force', 'constructive algorithms', 'greedy', 'math'], 'dif': '2300'}
{'pro_id': '1098A', 'name': 'Sum in the tree', 'tags': ['constructive algorithms', 'dfs and similar', 'greedy', 'trees'], 'dif': '1600'}
{'pro_id': '1097H', 'name': 'Mateusz and an Infinite Sequence', 'tags': ['bitmasks', 'brute force', 'dp', 'strings'], 'dif': '3000'}
{'pro_id': '1097G', 'name': 'Vladislav and a Great Legend', 'tags': ['combinatorics', 'dp', 'trees'], 'dif': '2900'}
{'pro_id': '1097F', 'name': 'Alex and a TV Show', 'tags': ['bitmasks', 'combinatorics', 'number theory'], 'dif': '2400'}
{'pro_id': '1097E', 'name': 'Egor and an RPG game', 'tags': ['constructive algorithms', 'greedy'], 'dif': '3100'}
{'pro_id': '1097D', 'name': 'Makoto and a Blackboard', 'tags': ['dp', 'math', 'number theory', 'probabilities'], 'dif': '2200'}
{'pro_id': '1097C', 'name': 'Yuhao and a Parenthesis', 'tags': ['greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '1097B', 'name': 'Petr and a Combination Lock', 'tags': ['bitmasks', 'brute force', 'dp'], 'dif': '1200'}
{'pro_id': '1097A', 'name': 'Gennady and a Card Game', 'tags': ['brute force', 'implementation'], 'dif': '600'}
{'pro_id': '1096G', 'name': 'Lucky Tickets', 'tags': ['divide and conquer', 'dp', 'fft'], 'dif': '2400'}
{'pro_id': '1096F', 'name': 'Inversion Expectation', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2300'}
{'pro_id': '1096E', 'name': 'The Top Scorer', 'tags': ['combinatorics', 'dp', 'math', 'probabilities'], 'dif': '2600'}
{'pro_id': '1096D', 'name': 'Easy Problem', 'tags': ['dp'], 'dif': '1800'}
{'pro_id': '1096C', 'name': 'Polygon for the Angle', 'tags': ['brute force', 'geometry'], 'dif': '1600'}
{'pro_id': '1096B', 'name': 'Substring Removal', 'tags': ['combinatorics', 'math', 'strings'], 'dif': '1400'}
{'pro_id': '1096A', 'name': 'Find Divisible', 'tags': ['greedy', 'implementation', 'math'], 'dif': '800'}
{'pro_id': '1095F', 'name': 'Make It Connected', 'tags': ['dsu', 'graphs', 'greedy'], 'dif': '2000'}
{'pro_id': '1095E', 'name': 'Almost Regular Bracket Sequence', 'tags': ['implementation'], 'dif': '1900'}
{'pro_id': '1095D', 'name': 'Circular Dance', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '1095C', 'name': 'Powers Of Two', 'tags': ['bitmasks', 'greedy'], 'dif': '1400'}
{'pro_id': '1095B', 'name': 'Array Stabilization', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '1095A', 'name': 'Repeating Cipher', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '1093G', 'name': 'Multidimensional Queries', 'tags': ['bitmasks', 'data structures'], 'dif': '2200'}
{'pro_id': '1093F', 'name': 'Vasya and Array', 'tags': ['dp'], 'dif': '2500'}
{'pro_id': '1093E', 'name': 'Intersection of Permutations', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '1093D', 'name': 'Beautiful Graph', 'tags': ['dfs and similar', 'graphs'], 'dif': '1600'}
{'pro_id': '1093C', 'name': 'Mishka and the Last Exam', 'tags': ['greedy'], 'dif': '1200'}
{'pro_id': '1093B', 'name': 'Letters Rearranging', 'tags': ['constructive algorithms', 'greedy', 'sortings', 'strings'], 'dif': '900'}
{'pro_id': '1093A', 'name': 'Dice Rolling', 'tags': ['math'], 'dif': '700'}
{'pro_id': '1092F', 'name': 'Tree with Maximum Cost', 'tags': ['dfs and similar', 'dp', 'trees'], 'dif': '2100'}
{'pro_id': '1092E', 'name': 'Minimal Diameter Forest', 'tags': ['constructive algorithms', 'dfs and similar', 'greedy', 'trees'], 'dif': '2500'}
{'pro_id': '1092D2', 'name': 'Great Vova Wall (Version 2)', 'tags': ['data structures', 'implementation'], 'dif': '2200'}
{'pro_id': '1092D1', 'name': 'Great Vova Wall (Version 1)', 'tags': ['greedy', 'implementation', 'math'], 'dif': '2100'}
{'pro_id': '1092C', 'name': 'Prefixes and Suffixes', 'tags': ['strings'], 'dif': '1700'}
{'pro_id': '1092B', 'name': 'Teams Forming', 'tags': ['sortings'], 'dif': '700'}
{'pro_id': '1092A', 'name': 'Uniform String', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '1091H', 'name': 'New Year and the Tricolore Recreation', 'tags': ['games'], 'dif': '3100'}
{'pro_id': '1091G', 'name': 'New Year and the Factorisation Collaboration', 'tags': ['interactive', 'math', 'number theory'], 'dif': '3100'}
{'pro_id': '1091F', 'name': 'New Year and the Mallard Expedition', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2600'}
{'pro_id': '1091E', 'name': 'New Year and the Acquaintance Estimation', 'tags': ['binary search', 'data structures', 'graphs', 'greedy', 'implementation', 'math', 'sortings'], 'dif': '2400'}
{'pro_id': '1091D', 'name': 'New Year and the Permutation Concatenation', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '1700'}
{'pro_id': '1091C', 'name': 'New Year and the Sphere Transmission', 'tags': ['math', 'number theory'], 'dif': '1400'}
{'pro_id': '1091B', 'name': 'New Year and the Treasure Geolocation', 'tags': ['brute force', 'constructive algorithms', 'greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '1091A', 'name': 'New Year and the Christmas Ornament', 'tags': ['brute force', 'implementation', 'math'], 'dif': '900'}
{'pro_id': '1090M', 'name': 'The Pleasant Walk', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '1090L', 'name': 'Berland University', 'tags': ['greedy', 'math'], 'dif': '2100'}
{'pro_id': '1090K', 'name': 'Right Expansion Of The Mind', 'tags': ['math'], 'dif': '2100'}
{'pro_id': '1090J', 'name': 'Two Prefixes', 'tags': ['strings'], 'dif': '2700'}
{'pro_id': '1090I', 'name': 'Minimal Product', 'tags': [], 'dif': '2200'}
{'pro_id': '1090H', 'name': 'Linearization', 'tags': [], 'dif': '3000'}
{'pro_id': '1090G', 'name': 'Combostone', 'tags': ['games', 'implementation'], 'dif': '3000'}
{'pro_id': '1090F', 'name': 'How to Learn You Score', 'tags': ['constructive algorithms'], 'dif': '2800'}
{'pro_id': '1090E', 'name': 'Horseback Riding', 'tags': [], 'dif': '2400'}
{'pro_id': '1090D', 'name': 'Similar Arrays', 'tags': ['constructive algorithms'], 'dif': '1900'}
{'pro_id': '1090C', 'name': 'New Year Presents', 'tags': [], 'dif': '2500'}
{'pro_id': '1090B', 'name': 'LaTeX Expert', 'tags': [], 'dif': '2000'}
{'pro_id': '1090A', 'name': 'Company Merging', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '1089M', 'name': 'Minegraphed', 'tags': ['constructive algorithms', 'graphs'], 'dif': '2600'}
{'pro_id': '1089L', 'name': 'Lazyland', 'tags': [], 'dif': '1200'}
{'pro_id': '1089K', 'name': "King Kog's Reception", 'tags': ['data structures'], 'dif': '2400'}
{'pro_id': '1089J', 'name': 'JS Minification', 'tags': ['greedy', 'implementation'], 'dif': '3300'}
{'pro_id': '1089I', 'name': 'Interval-Free Permutations', 'tags': [], 'dif': '2800'}
{'pro_id': '1089H', 'name': 'Harder Satisfiability', 'tags': ['2-sat', 'dfs and similar', 'graphs'], 'dif': '3500'}
{'pro_id': '1089G', 'name': 'Guest Student', 'tags': [], 'dif': '1600'}
{'pro_id': '1089F', 'name': 'Fractions', 'tags': ['math'], 'dif': '2000'}
{'pro_id': '1089E', 'name': 'Easy Chess', 'tags': ['constructive algorithms'], 'dif': '1800'}
{'pro_id': '1089D', 'name': 'Distance Sum', 'tags': ['graphs'], 'dif': '3400'}
{'pro_id': '1089C', 'name': 'Cactus Search', 'tags': ['interactive'], 'dif': '2800'}
{'pro_id': '1089B', 'name': 'Bimatching', 'tags': ['graphs'], 'dif': '3500'}
{'pro_id': '1089A', 'name': 'Alice the Fan', 'tags': ['dp'], 'dif': '2300'}
{'pro_id': '1088F', 'name': 'Ehab and a weird weight formula', 'tags': ['data structures', 'trees'], 'dif': '3000'}
{'pro_id': '1088E', 'name': 'Ehab and a component choosing problem', 'tags': ['dp', 'greedy', 'math', 'trees'], 'dif': '2400'}
{'pro_id': '1088D', 'name': 'Ehab and another another xor problem', 'tags': ['bitmasks', 'constructive algorithms', 'implementation', 'interactive'], 'dif': '2000'}
{'pro_id': '1088C', 'name': 'Ehab and a 2-operation task', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '1400'}
{'pro_id': '1088B', 'name': 'Ehab and subtraction', 'tags': ['implementation', 'sortings'], 'dif': '1000'}
{'pro_id': '1088A', 'name': 'Ehab and another construction problem', 'tags': ['brute force', 'constructive algorithms'], 'dif': '800'}
{'pro_id': '1086F', 'name': 'Forest Fires', 'tags': ['math'], 'dif': '3400'}
{'pro_id': '1085G', 'name': 'Beautiful Matrix', 'tags': ['combinatorics', 'data structures', 'dp'], 'dif': '2600'}
{'pro_id': '1085F', 'name': 'Rock-Paper-Scissors Champion', 'tags': [], 'dif': '2700'}
{'pro_id': '1085E', 'name': 'Vasya and Templates', 'tags': ['greedy', 'implementation', 'strings'], 'dif': '2500'}
{'pro_id': '1085D', 'name': 'Minimum Diameter Tree', 'tags': ['constructive algorithms', 'implementation', 'trees'], 'dif': '1700'}
{'pro_id': '1085C', 'name': 'Connect Three', 'tags': ['implementation', 'math'], 'dif': '1600'}
{'pro_id': '1085B', 'name': 'Div Times Mod', 'tags': ['math'], 'dif': '1200'}
{'pro_id': '1085A', 'name': 'Right-Left Cipher', 'tags': ['implementation', 'strings'], 'dif': '900'}
{'pro_id': '1084C', 'name': 'The Fair Nut and String', 'tags': ['combinatorics', 'dp', 'implementation'], 'dif': '1500'}
{'pro_id': '1084B', 'name': 'Kvass and the Fair Nut', 'tags': ['greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '1084A', 'name': 'The Fair Nut and Elevator', 'tags': ['brute force', 'implementation'], 'dif': '1000'}
{'pro_id': '1083F', 'name': 'The Fair Nut and Amusing Xor', 'tags': ['data structures'], 'dif': '3100'}
{'pro_id': '1083E', 'name': 'The Fair Nut and Rectangles', 'tags': ['data structures', 'dp', 'geometry'], 'dif': '2400'}
{'pro_id': '1083D', 'name': "The Fair Nut's getting crazy", 'tags': ['data structures', 'implementation'], 'dif': '3400'}
{'pro_id': '1083C', 'name': 'Max Mex', 'tags': ['data structures', 'trees'], 'dif': '2800'}
{'pro_id': '1083B', 'name': 'The Fair Nut and Strings', 'tags': ['greedy', 'strings'], 'dif': '2100'}
{'pro_id': '1083A', 'name': 'The Fair Nut and the Best Path', 'tags': ['data structures', 'dp', 'trees'], 'dif': '1800'}
{'pro_id': '1082G', 'name': 'Petya and Graph', 'tags': ['flows', 'graphs'], 'dif': '2400'}
{'pro_id': '1082F', 'name': 'Speed Dial', 'tags': ['dp', 'strings', 'trees'], 'dif': '2900'}
{'pro_id': '1082E', 'name': 'Increasing Frequency', 'tags': ['binary search', 'dp', 'greedy'], 'dif': '2000'}
{'pro_id': '1082D', 'name': 'Maximum Diameter Graph', 'tags': ['constructive algorithms', 'graphs', 'implementation'], 'dif': '1800'}
{'pro_id': '1082C', 'name': 'Multi-Subject Competition', 'tags': ['greedy', 'sortings'], 'dif': '1600'}
{'pro_id': '1082B', 'name': 'Vova and Trophies', 'tags': ['greedy'], 'dif': '1600'}
{'pro_id': '1082A', 'name': 'Vasya and Book', 'tags': ['implementation', 'math'], 'dif': '1200'}
{'pro_id': '1081H', 'name': 'Palindromic Magic', 'tags': ['data structures', 'hashing', 'strings'], 'dif': '3500'}
{'pro_id': '1081G', 'name': 'Mergesort Strikes Back', 'tags': ['math', 'probabilities'], 'dif': '3000'}
{'pro_id': '1081F', 'name': 'Tricky Interactor', 'tags': ['constructive algorithms', 'implementation', 'interactive'], 'dif': '2500'}
{'pro_id': '1081E', 'name': 'Missing Numbers', 'tags': ['binary search', 'constructive algorithms', 'greedy', 'math', 'number theory'], 'dif': '1900'}
{'pro_id': '1081D', 'name': 'Maximum Distance', 'tags': ['dsu', 'graphs', 'shortest paths', 'sortings'], 'dif': '1800'}
{'pro_id': '1081C', 'name': 'Colorful Bricks', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '1600'}
{'pro_id': '1081B', 'name': 'Farewell Party', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1500'}
{'pro_id': '1081A', 'name': 'Definite Game', 'tags': ['constructive algorithms', 'math'], 'dif': '800'}
{'pro_id': '1080F', 'name': 'Katya and Segments Sets', 'tags': ['data structures', 'interactive', 'sortings'], 'dif': '2700'}
{'pro_id': '1080E', 'name': 'Sonya and Matrix Beauty', 'tags': ['strings'], 'dif': '2400'}
{'pro_id': '1080D', 'name': 'Olya and magical square', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '2000'}
{'pro_id': '1080C', 'name': 'Masha and two friends', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '1080B', 'name': 'Margarite and the best present', 'tags': ['math'], 'dif': '900'}
{'pro_id': '1080A', 'name': 'Petya and Origami', 'tags': ['math'], 'dif': '700'}
{'pro_id': '1078E', 'name': 'Negative Time Summation', 'tags': ['constructive algorithms'], 'dif': '3500'}
{'pro_id': '1077F2', 'name': 'Pictures with Kittens (hard version)', 'tags': ['data structures', 'dp'], 'dif': '2300'}
{'pro_id': '1077F1', 'name': 'Pictures with Kittens (easy version)', 'tags': ['dp'], 'dif': '2100'}
{'pro_id': '1077E', 'name': 'Thematic Contests', 'tags': ['greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '1077D', 'name': 'Cutting Out', 'tags': ['binary search', 'sortings'], 'dif': '1600'}
{'pro_id': '1077C', 'name': 'Good Array', 'tags': [], 'dif': '1400'}
{'pro_id': '1077B', 'name': 'Disturbed People', 'tags': ['greedy'], 'dif': '1000'}
{'pro_id': '1077A', 'name': 'Frog Jumping', 'tags': ['math'], 'dif': '700'}
{'pro_id': '1076G', 'name': 'Array Game', 'tags': ['data structures', 'games'], 'dif': '2700'}
{'pro_id': '1076F', 'name': 'Summer Practice Report', 'tags': ['dp', 'greedy'], 'dif': '2500'}
{'pro_id': '1076E', 'name': 'Vasya and a Tree', 'tags': ['data structures', 'trees'], 'dif': '1900'}
{'pro_id': '1076D', 'name': 'Edge Deletion', 'tags': ['graphs', 'greedy', 'shortest paths'], 'dif': '1800'}
{'pro_id': '1076C', 'name': 'Meme Problem', 'tags': ['binary search', 'math'], 'dif': '1300'}
{'pro_id': '1076B', 'name': 'Divisor Subtraction', 'tags': ['implementation', 'math', 'number theory'], 'dif': '1200'}
{'pro_id': '1076A', 'name': 'Minimizing the String', 'tags': ['greedy', 'strings'], 'dif': '1200'}
{'pro_id': '1075B', 'name': 'Taxi drivers and Lyft', 'tags': ['implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '1075A', 'name': "The King's Race", 'tags': ['implementation', 'math'], 'dif': '900'}
{'pro_id': '1073G', 'name': 'Yet Another LCP Problem', 'tags': ['data structures', 'string suffix structures'], 'dif': '2700'}
{'pro_id': '1073F', 'name': 'Choosing Two Paths', 'tags': ['dfs and similar', 'dp', 'greedy', 'trees'], 'dif': '2800'}
{'pro_id': '1073E', 'name': 'Segment Sum', 'tags': ['bitmasks', 'combinatorics', 'dp', 'math'], 'dif': '2300'}
{'pro_id': '1073D', 'name': 'Berland Fair', 'tags': ['binary search', 'brute force', 'data structures', 'greedy'], 'dif': '1700'}
{'pro_id': '1073C', 'name': 'Vasya and Robot', 'tags': ['binary search', 'two pointers'], 'dif': '1800'}
{'pro_id': '1073B', 'name': 'Vasya and Books', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '1073A', 'name': 'Diverse Substring', 'tags': ['implementation', 'strings'], 'dif': '1000'}
{'pro_id': '1071E', 'name': 'Rain Protection', 'tags': ['binary search', 'geometry'], 'dif': '3500'}
{'pro_id': '1070M', 'name': 'Algoland and Berland', 'tags': ['constructive algorithms', 'divide and conquer', 'geometry'], 'dif': '3100'}
{'pro_id': '1070L', 'name': 'Odd Federalization', 'tags': ['constructive algorithms'], 'dif': '2800'}
{'pro_id': '1070K', 'name': 'Video Posts', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '1070J', 'name': 'Streets and Avenues in Berhattan', 'tags': ['dp'], 'dif': '2600'}
{'pro_id': '1070I', 'name': 'Privatization of Roads in Berland', 'tags': ['flows', 'graphs'], 'dif': '2600'}
{'pro_id': '1070H', 'name': 'BerOS File Suggestion', 'tags': ['brute force', 'implementation'], 'dif': '1600'}
{'pro_id': '1070G', 'name': 'Monsters and Potions', 'tags': ['brute force', 'dp', 'greedy', 'implementation'], 'dif': '2500'}
{'pro_id': '1070F', 'name': 'Debate', 'tags': ['greedy'], 'dif': '1600'}
{'pro_id': '1070E', 'name': 'Getting Deals Done', 'tags': ['binary search', 'data structures'], 'dif': '2300'}
{'pro_id': '1070D', 'name': 'Garbage Disposal', 'tags': ['greedy'], 'dif': '1400'}
{'pro_id': '1070C', 'name': 'Cloud Computing', 'tags': ['data structures', 'greedy'], 'dif': '2000'}
{'pro_id': '1070B', 'name': 'Berkomnadzor', 'tags': ['data structures', 'greedy'], 'dif': '2500'}
{'pro_id': '1070A', 'name': 'Find a Number', 'tags': ['dp', 'graphs', 'number theory', 'shortest paths'], 'dif': '2200'}
{'pro_id': '1068C', 'name': 'Colored Rooks', 'tags': ['constructive algorithms', 'graphs'], 'dif': '1700'}
{'pro_id': '1068B', 'name': 'LCM', 'tags': ['math', 'number theory'], 'dif': '1200'}
{'pro_id': '1068A', 'name': 'Birthday', 'tags': ['math'], 'dif': '1300'}
{'pro_id': '1067E', 'name': 'Random Forest Rank', 'tags': ['dp', 'graph matchings', 'math', 'trees'], 'dif': '2800'}
{'pro_id': '1067D', 'name': 'Computer Game', 'tags': ['dp', 'greedy', 'math', 'probabilities'], 'dif': '2800'}
{'pro_id': '1067C', 'name': 'Knights', 'tags': ['constructive algorithms'], 'dif': '2800'}
{'pro_id': '1067B', 'name': 'Multihedgehog', 'tags': ['dfs and similar', 'graphs', 'shortest paths'], 'dif': '2000'}
{'pro_id': '1067A', 'name': 'Array Without Local Maximums', 'tags': ['dp'], 'dif': '2000'}
{'pro_id': '1066F', 'name': 'Yet another 2D Walking', 'tags': ['dp'], 'dif': '2300'}
{'pro_id': '1066E', 'name': 'Binary Numbers AND Sum', 'tags': ['data structures', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '1066D', 'name': 'Boxes Packing', 'tags': ['binary search', 'implementation'], 'dif': '1700'}
{'pro_id': '1066C', 'name': 'Books Queries', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '1066B', 'name': 'Heaters', 'tags': ['greedy', 'two pointers'], 'dif': '1500'}
{'pro_id': '1066A', 'name': 'Vova and Train', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '1065G', 'name': 'Fibonacci Suffix', 'tags': ['strings'], 'dif': '2800'}
{'pro_id': '1065F', 'name': 'Up and Down the Tree', 'tags': ['dfs and similar', 'dp', 'trees'], 'dif': '2500'}
{'pro_id': '1065E', 'name': 'Side Transmutations', 'tags': ['combinatorics', 'strings'], 'dif': '2200'}
{'pro_id': '1065D', 'name': 'Three Pieces', 'tags': ['dfs and similar', 'dp', 'shortest paths'], 'dif': '2200'}
{'pro_id': '1065C', 'name': 'Make It Equal', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '1065B', 'name': 'Vasya and Isolated Vertices', 'tags': ['constructive algorithms', 'graphs'], 'dif': '1300'}
{'pro_id': '1065A', 'name': 'Vasya and Chocolate', 'tags': ['implementation', 'math'], 'dif': '800'}
{'pro_id': '1064B', 'name': 'Equations of Mathematical Magic', 'tags': ['math'], 'dif': '1200'}
{'pro_id': '1064A', 'name': 'Make a triangle!', 'tags': ['brute force', 'geometry', 'math'], 'dif': '700'}
{'pro_id': '1063F', 'name': 'String Journey', 'tags': ['data structures', 'dp', 'string suffix structures'], 'dif': '3000'}
{'pro_id': '1063E', 'name': 'Lasers and Mirrors', 'tags': ['constructive algorithms', 'math'], 'dif': '3000'}
{'pro_id': '1063D', 'name': 'Candies for Children', 'tags': ['brute force', 'math'], 'dif': '2800'}
{'pro_id': '1063C', 'name': 'Dwarves, Hats and Extrasensory Abilities', 'tags': ['binary search', 'constructive algorithms', 'geometry', 'interactive'], 'dif': '1900'}
{'pro_id': '1063B', 'name': 'Labyrinth', 'tags': ['graphs', 'shortest paths'], 'dif': '1800'}
{'pro_id': '1063A', 'name': 'Oh Those Palindromes', 'tags': ['constructive algorithms', 'strings'], 'dif': '1400'}
{'pro_id': '1062F', 'name': 'Upgrading Cities', 'tags': ['dfs and similar', 'graphs'], 'dif': '3000'}
{'pro_id': '1062E', 'name': 'Company', 'tags': ['binary search', 'data structures', 'dfs and similar', 'greedy', 'trees'], 'dif': '2300'}
{'pro_id': '1062D', 'name': 'Fun with Integers', 'tags': ['dfs and similar', 'graphs', 'implementation', 'math'], 'dif': '1800'}
{'pro_id': '1062C', 'name': 'Banh-mi', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1600'}
{'pro_id': '1062B', 'name': 'Math', 'tags': ['greedy', 'math', 'number theory'], 'dif': '1600'}
{'pro_id': '1062A', 'name': 'A Prank', 'tags': ['greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '1061F', 'name': 'Lost Root', 'tags': ['interactive', 'probabilities'], 'dif': '2400'}
{'pro_id': '1061E', 'name': 'Politics', 'tags': ['flows', 'graphs'], 'dif': '2800'}
{'pro_id': '1061D', 'name': 'TV Shows', 'tags': ['data structures', 'greedy', 'implementation', 'sortings'], 'dif': '2000'}
{'pro_id': '1061C', 'name': 'Multiplicity', 'tags': ['data structures', 'dp', 'implementation', 'math', 'number theory'], 'dif': '1700'}
{'pro_id': '1061B', 'name': 'Views Matter', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1500'}
{'pro_id': '1061A', 'name': 'Coins', 'tags': ['greedy', 'implementation', 'math'], 'dif': '800'}
{'pro_id': '1060H', 'name': 'Sophisticated Device', 'tags': ['constructive algorithms'], 'dif': '2900'}
{'pro_id': '1060G', 'name': 'Balls and Pockets', 'tags': ['data structures'], 'dif': '3300'}
{'pro_id': '1060F', 'name': 'Shrinking Tree', 'tags': ['combinatorics', 'dp'], 'dif': '2800'}
{'pro_id': '1060E', 'name': 'Sergey and Subway', 'tags': ['dfs and similar', 'dp', 'trees'], 'dif': '2000'}
{'pro_id': '1060D', 'name': 'Social Circles', 'tags': ['greedy', 'math'], 'dif': '1900'}
{'pro_id': '1060C', 'name': 'Maximum Subrectangle', 'tags': ['binary search', 'implementation', 'two pointers'], 'dif': '1600'}
{'pro_id': '1060B', 'name': 'Maximum Sum of Digits', 'tags': ['greedy'], 'dif': '1100'}
{'pro_id': '1060A', 'name': 'Phone Numbers', 'tags': ['brute force'], 'dif': '800'}
{'pro_id': '1059E', 'name': 'Split the Tree', 'tags': ['binary search', 'data structures', 'dp', 'greedy', 'trees'], 'dif': '2400'}
{'pro_id': '1059D', 'name': 'Nature Reserve', 'tags': ['binary search', 'geometry', 'ternary search'], 'dif': '2200'}
{'pro_id': '1059C', 'name': 'Sequence Transformation', 'tags': ['constructive algorithms', 'math'], 'dif': '1500'}
{'pro_id': '1059B', 'name': 'Forgery', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '1059A', 'name': 'Cashier', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '1057C', 'name': 'Tanya and Colored Candies', 'tags': ['*special problem', 'dp'], 'dif': '2300'}
{'pro_id': '1057B', 'name': 'DDoS', 'tags': ['*special problem', 'brute force'], 'dif': '1800'}
{'pro_id': '1057A', 'name': 'Bmail Computer Network', 'tags': ['*special problem', 'dfs and similar', 'trees'], 'dif': '1700'}
{'pro_id': '1056H', 'name': 'Detect Robots', 'tags': ['data structures', 'strings'], 'dif': '3100'}
{'pro_id': '1056G', 'name': 'Take Metro', 'tags': ['brute force', 'data structures', 'graphs'], 'dif': '2800'}
{'pro_id': '1056F', 'name': 'Write The Contest', 'tags': ['binary search', 'dp', 'math'], 'dif': '2400'}
{'pro_id': '1056E', 'name': 'Check Transcription', 'tags': ['brute force', 'data structures', 'hashing', 'strings'], 'dif': '2100'}
{'pro_id': '1056D', 'name': 'Decorate Apple Tree', 'tags': ['constructive algorithms', 'dfs and similar', 'dp', 'graphs', 'greedy', 'sortings', 'trees'], 'dif': '1600'}
{'pro_id': '1056C', 'name': 'Pick Heroes', 'tags': ['greedy', 'implementation', 'interactive', 'sortings'], 'dif': '1700'}
{'pro_id': '1056B', 'name': 'Divide Candies', 'tags': ['math', 'number theory'], 'dif': '1600'}
{'pro_id': '1056A', 'name': 'Determine Line', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '1055G', 'name': 'Jellyfish Nightmare', 'tags': [], 'dif': '3100'}
{'pro_id': '1055F', 'name': 'Tree and XOR', 'tags': ['strings', 'trees'], 'dif': '2800'}
{'pro_id': '1055E', 'name': 'Segments on the Line', 'tags': ['binary search', 'dp'], 'dif': '2400'}
{'pro_id': '1055D', 'name': 'Refactoring', 'tags': ['greedy', 'implementation', 'strings'], 'dif': '2300'}
{'pro_id': '1055C', 'name': 'Lucky Days', 'tags': ['math', 'number theory'], 'dif': '1900'}
{'pro_id': '1055B', 'name': 'Alice and Hairdresser', 'tags': ['dsu', 'implementation'], 'dif': '1300'}
{'pro_id': '1055A', 'name': 'Metro', 'tags': ['graphs'], 'dif': '1000'}
{'pro_id': '1054H', 'name': 'Epic Convolution', 'tags': ['chinese remainder theorem', 'fft', 'math', 'number theory'], 'dif': '3400'}
{'pro_id': '1054G', 'name': 'New Road Network', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '2900'}
{'pro_id': '1054F', 'name': 'Electric Scheme', 'tags': ['flows', 'graph matchings'], 'dif': '2600'}
{'pro_id': '1054E', 'name': 'Chips Puzzle', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '2400'}
{'pro_id': '1054D', 'name': 'Changing Array', 'tags': ['greedy', 'implementation'], 'dif': '1900'}
{'pro_id': '1054C', 'name': 'Candies Distribution', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1400'}
{'pro_id': '1054B', 'name': 'Appending Mex', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '1054A', 'name': 'Elevator or Stairs?', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '1053E', 'name': 'Euler tour', 'tags': ['constructive algorithms', 'trees'], 'dif': '3500'}
{'pro_id': '1051G', 'name': 'Distinctification', 'tags': ['data structures', 'dsu', 'greedy'], 'dif': '2700'}
{'pro_id': '1051F', 'name': 'The Shortest Statement', 'tags': ['graphs', 'shortest paths', 'trees'], 'dif': '2300'}
{'pro_id': '1051E', 'name': 'Vasya and Big Integers', 'tags': ['binary search', 'data structures', 'dp', 'hashing', 'strings'], 'dif': '2500'}
{'pro_id': '1051D', 'name': 'Bicolorings', 'tags': ['bitmasks', 'dp'], 'dif': '1700'}
{'pro_id': '1051C', 'name': 'Vasya and Multisets', 'tags': ['brute force', 'dp', 'greedy', 'implementation', 'math'], 'dif': '1400'}
{'pro_id': '1051B', 'name': 'Relatively Prime Pairs', 'tags': ['greedy', 'math', 'number theory'], 'dif': '1000'}
{'pro_id': '1051A', 'name': 'Vasya And Password', 'tags': ['greedy', 'implementation', 'strings'], 'dif': '1200'}
{'pro_id': '1047B', 'name': 'Cover Points', 'tags': ['geometry', 'math'], 'dif': '900'}
{'pro_id': '1047A', 'name': 'Little C Loves 3 I', 'tags': ['math'], 'dif': '800'}
{'pro_id': '1046I', 'name': 'Say Hello', 'tags': ['geometry'], 'dif': '2300'}
{'pro_id': '1046F', 'name': 'Splitting money', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '1046C', 'name': 'Space Formula', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '1045J', 'name': 'Moonwalk challenge', 'tags': ['data structures', 'strings', 'trees'], 'dif': '3000'}
{'pro_id': '1045I', 'name': 'Palindrome Pairs', 'tags': ['hashing', 'strings'], 'dif': '1700'}
{'pro_id': '1045H', 'name': 'Self-exploration', 'tags': ['math'], 'dif': '2700'}
{'pro_id': '1045G', 'name': 'AI robots', 'tags': ['data structures'], 'dif': '2200'}
{'pro_id': '1045F', 'name': 'Shady Lady', 'tags': ['geometry', 'math'], 'dif': '3500'}
{'pro_id': '1045E', 'name': 'Ancient civilizations', 'tags': ['constructive algorithms', 'geometry'], 'dif': '2800'}
{'pro_id': '1045D', 'name': 'Interstellar battle', 'tags': ['math', 'probabilities', 'trees'], 'dif': '2600'}
{'pro_id': '1045C', 'name': 'Hyperspace Highways', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '2500'}
{'pro_id': '1045B', 'name': 'Space Isaac', 'tags': ['hashing', 'number theory'], 'dif': '2500'}
{'pro_id': '1045A', 'name': 'Last chance', 'tags': ['data structures', 'flows', 'graph matchings', 'trees'], 'dif': '2800'}
{'pro_id': '1044F', 'name': 'DFS', 'tags': ['data structures'], 'dif': '2600'}
{'pro_id': '1044E', 'name': 'Grid Sort', 'tags': ['implementation'], 'dif': '3100'}
{'pro_id': '1044D', 'name': 'Deduction Queries', 'tags': ['data structures', 'dsu'], 'dif': '2600'}
{'pro_id': '1044C', 'name': 'Optimal Polygon Perimeter', 'tags': ['dp', 'geometry'], 'dif': '2200'}
{'pro_id': '1044B', 'name': 'Intersecting Subtrees', 'tags': ['dfs and similar', 'interactive', 'trees'], 'dif': '1900'}
{'pro_id': '1044A', 'name': 'The Tower is Going Home', 'tags': ['binary search', 'two pointers'], 'dif': '1700'}
{'pro_id': '1043G', 'name': 'Speckled Band', 'tags': ['data structures', 'divide and conquer', 'hashing', 'string suffix structures', 'strings'], 'dif': '3500'}
{'pro_id': '1043F', 'name': 'Make It One', 'tags': ['bitmasks', 'combinatorics', 'dp', 'math', 'number theory', 'shortest paths'], 'dif': '2500'}
{'pro_id': '1043E', 'name': 'Train Hard, Win Easy', 'tags': ['constructive algorithms', 'greedy', 'math', 'sortings'], 'dif': '1900'}
{'pro_id': '1043D', 'name': 'Mysterious Crime', 'tags': ['brute force', 'combinatorics', 'math', 'meet-in-the-middle', 'two pointers'], 'dif': '1700'}
{'pro_id': '1043C', 'name': 'Smallest Word', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1500'}
{'pro_id': '1043B', 'name': 'Lost Array', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '1043A', 'name': 'Elections', 'tags': ['implementation', 'math'], 'dif': '800'}
{'pro_id': '1042F', 'name': 'Leaf Sets', 'tags': ['data structures', 'dfs and similar', 'dsu', 'graphs', 'greedy', 'sortings', 'trees'], 'dif': '2400'}
{'pro_id': '1042E', 'name': 'Vasya and Magic Matrix', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2300'}
{'pro_id': '1042D', 'name': 'Petya and Array', 'tags': ['data structures', 'divide and conquer', 'two pointers'], 'dif': '1800'}
{'pro_id': '1042C', 'name': 'Array Product', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '1700'}
{'pro_id': '1042B', 'name': 'Vitamins', 'tags': ['bitmasks', 'brute force', 'dp', 'implementation'], 'dif': '1200'}
{'pro_id': '1042A', 'name': 'Benches', 'tags': ['binary search', 'implementation'], 'dif': '1200'}
{'pro_id': '1041F', 'name': 'Ray in the tube', 'tags': ['data structures', 'divide and conquer', 'dp', 'math'], 'dif': '2400'}
{'pro_id': '1041E', 'name': 'Tree Reconstruction', 'tags': ['constructive algorithms', 'data structures', 'graphs', 'greedy'], 'dif': '1900'}
{'pro_id': '1041D', 'name': 'Glider', 'tags': ['binary search', 'data structures', 'two pointers'], 'dif': '1700'}
{'pro_id': '1041C', 'name': 'Coffee Break', 'tags': ['binary search', 'data structures', 'greedy', 'two pointers'], 'dif': '1500'}
{'pro_id': '1041B', 'name': 'Buying a TV Set', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '1041A', 'name': 'Heist', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '800'}
{'pro_id': '1040B', 'name': 'Shashlik Cooking', 'tags': ['dp', 'greedy', 'math'], 'dif': '1300'}
{'pro_id': '1040A', 'name': 'Palindrome Dance', 'tags': ['greedy'], 'dif': '1000'}
{'pro_id': '1039E', 'name': 'Summer Oenothera Exhibition', 'tags': ['data structures'], 'dif': '3400'}
{'pro_id': '1039D', 'name': 'You Are Given a Tree', 'tags': ['data structures', 'dp', 'trees'], 'dif': '2700'}
{'pro_id': '1039C', 'name': 'Network Safety', 'tags': ['dfs and similar', 'dsu', 'graphs', 'math', 'sortings'], 'dif': '2300'}
{'pro_id': '1039B', 'name': 'Subway Pursuit', 'tags': ['binary search', 'interactive', 'probabilities'], 'dif': '2100'}
{'pro_id': '1039A', 'name': 'Timetable', 'tags': ['constructive algorithms', 'data structures', 'greedy', 'math'], 'dif': '2400'}
{'pro_id': '1038F', 'name': 'Wrap Around', 'tags': ['dp', 'strings'], 'dif': '2900'}
{'pro_id': '1038E', 'name': 'Maximum Matching', 'tags': ['bitmasks', 'brute force', 'dfs and similar', 'dp', 'graphs'], 'dif': '2400'}
{'pro_id': '1038D', 'name': 'Slime', 'tags': ['dp', 'greedy', 'implementation'], 'dif': '1700'}
{'pro_id': '1038C', 'name': 'Gambling', 'tags': ['greedy', 'sortings'], 'dif': '1300'}
{'pro_id': '1038B', 'name': 'Non-Coprime Partition', 'tags': ['constructive algorithms', 'math'], 'dif': '1100'}
{'pro_id': '1038A', 'name': 'Equality', 'tags': ['implementation', 'strings'], 'dif': '800'}
{'pro_id': '1037H', 'name': 'Security', 'tags': ['data structures', 'string suffix structures'], 'dif': '2900'}
{'pro_id': '1037G', 'name': 'A Game on Strings', 'tags': ['games'], 'dif': '2900'}
{'pro_id': '1037F', 'name': 'Maximum Reduction', 'tags': ['combinatorics', 'data structures', 'math'], 'dif': '2400'}
{'pro_id': '1037E', 'name': 'Trips', 'tags': ['graphs'], 'dif': '2100'}
{'pro_id': '1037D', 'name': 'Valid BFS?', 'tags': ['dfs and similar', 'graphs', 'shortest paths', 'trees'], 'dif': '1700'}
{'pro_id': '1037C', 'name': 'Equalize', 'tags': ['dp', 'greedy', 'strings'], 'dif': '1300'}
{'pro_id': '1037B', 'name': 'Reach Median', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '1037A', 'name': 'Packets', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '1300'}
{'pro_id': '1036G', 'name': 'Sources and Sinks', 'tags': ['bitmasks', 'brute force', 'dfs and similar'], 'dif': '2800'}
{'pro_id': '1036F', 'name': 'Relatively Prime Powers', 'tags': ['combinatorics', 'math', 'number theory'], 'dif': '2400'}
{'pro_id': '1036E', 'name': 'Covered Points', 'tags': ['fft', 'geometry', 'number theory'], 'dif': '2300'}
{'pro_id': '1036D', 'name': 'Vasya and Arrays', 'tags': ['greedy', 'two pointers'], 'dif': '1600'}
{'pro_id': '1036C', 'name': 'Classy Numbers', 'tags': ['combinatorics', 'dp'], 'dif': '1800'}
{'pro_id': '1036B', 'name': 'Diagonal Walking v.2', 'tags': ['math'], 'dif': '1600'}
{'pro_id': '1036A', 'name': 'Function Height', 'tags': ['math'], 'dif': '1000'}
{'pro_id': '1034E', 'name': 'Little C Loves 3 III', 'tags': ['bitmasks', 'dp', 'math'], 'dif': '3200'}
{'pro_id': '1034D', 'name': 'Intervals of Intervals', 'tags': ['binary search', 'data structures', 'two pointers'], 'dif': '3500'}
{'pro_id': '1034C', 'name': 'Region Separation', 'tags': ['combinatorics', 'dp', 'number theory', 'trees'], 'dif': '2900'}
{'pro_id': '1034B', 'name': 'Little C Loves 3 II', 'tags': ['brute force', 'constructive algorithms', 'flows', 'graph matchings'], 'dif': '2100'}
{'pro_id': '1034A', 'name': 'Enlarge GCD', 'tags': ['number theory'], 'dif': '1700'}
{'pro_id': '1033G', 'name': 'Chip Game', 'tags': ['games'], 'dif': '3200'}
{'pro_id': '1033F', 'name': 'Boolean Computer', 'tags': ['bitmasks', 'brute force', 'fft', 'math'], 'dif': '2800'}
{'pro_id': '1033E', 'name': 'Hidden Bipartite Graph', 'tags': ['binary search', 'constructive algorithms', 'dfs and similar', 'graphs', 'interactive'], 'dif': '2700'}
{'pro_id': '1033D', 'name': 'Divisors', 'tags': ['interactive', 'math', 'number theory'], 'dif': '2000'}
{'pro_id': '1033C', 'name': 'Permutation Game', 'tags': ['brute force', 'dp', 'games'], 'dif': '1600'}
{'pro_id': '1033B', 'name': 'Square Difference', 'tags': ['math', 'number theory'], 'dif': '1100'}
{'pro_id': '1033A', 'name': 'King Escape', 'tags': ['dfs and similar', 'graphs', 'implementation'], 'dif': '1000'}
{'pro_id': '1032G', 'name': 'Chattering', 'tags': [], 'dif': '2700'}
{'pro_id': '1032F', 'name': 'Vasya and Maximum Matching', 'tags': ['dp', 'trees'], 'dif': '2600'}
{'pro_id': '1032E', 'name': 'The Unbearable Lightness of Weights', 'tags': ['dp', 'math'], 'dif': '2300'}
{'pro_id': '1032D', 'name': 'Barcelonian Distance', 'tags': ['geometry', 'implementation'], 'dif': '1900'}
{'pro_id': '1032C', 'name': 'Playing Piano', 'tags': ['constructive algorithms', 'dp'], 'dif': '1800'}
{'pro_id': '1032B', 'name': 'Personalized Cup', 'tags': [], 'dif': '1300'}
{'pro_id': '1032A', 'name': 'Kitchen Utensils', 'tags': [], 'dif': '1100'}
{'pro_id': '1031F', 'name': 'Familiar Operations', 'tags': ['brute force', 'graphs', 'math'], 'dif': '2700'}
{'pro_id': '1031E', 'name': 'Triple Flips', 'tags': ['constructive algorithms'], 'dif': '2900'}
{'pro_id': '1031D', 'name': 'Minimum path', 'tags': ['greedy'], 'dif': '2000'}
{'pro_id': '1031C', 'name': 'Cram Time', 'tags': ['greedy'], 'dif': '1700'}
{'pro_id': '1031B', 'name': 'Curiosity Has No Limits', 'tags': [], 'dif': '1500'}
{'pro_id': '1031A', 'name': 'Golden Plate', 'tags': ['implementation', 'math'], 'dif': '700'}
{'pro_id': '1030G', 'name': 'Linear Congruential Generator', 'tags': ['number theory'], 'dif': '3000'}
{'pro_id': '1030F', 'name': 'Putting Boxes Together', 'tags': ['data structures'], 'dif': '2600'}
{'pro_id': '1030E', 'name': 'Vasya and Good Sequences', 'tags': ['bitmasks', 'dp'], 'dif': '2100'}
{'pro_id': '1030D', 'name': 'Vasya and Triangle', 'tags': ['geometry', 'number theory'], 'dif': '1700'}
{'pro_id': '1030C', 'name': 'Vasya and Golden Ticket', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '1030B', 'name': 'Vasya and Cornfield', 'tags': ['geometry'], 'dif': '1100'}
{'pro_id': '1030A', 'name': 'In Search of an Easy Problem', 'tags': ['implementation'], 'dif': '500'}
{'pro_id': '1029F', 'name': 'Multicolored Markers', 'tags': ['binary search', 'brute force', 'math', 'number theory'], 'dif': '2100'}
{'pro_id': '1029E', 'name': 'Tree with Small Distances', 'tags': ['dp', 'graphs', 'greedy'], 'dif': '2200'}
{'pro_id': '1029D', 'name': 'Concatenated Multiples', 'tags': ['implementation', 'math'], 'dif': '2100'}
{'pro_id': '1029C', 'name': 'Maximal Intersection', 'tags': ['greedy', 'math', 'sortings'], 'dif': '1600'}
{'pro_id': '1029B', 'name': 'Creating the Contest', 'tags': ['dp', 'greedy', 'math'], 'dif': '1200'}
{'pro_id': '1029A', 'name': 'Many Equal Substrings', 'tags': ['implementation', 'strings'], 'dif': '1300'}
{'pro_id': '1028H', 'name': 'Make Square', 'tags': ['math'], 'dif': '2900'}
{'pro_id': '1028G', 'name': 'Guess the number', 'tags': ['dp', 'interactive'], 'dif': '2900'}
{'pro_id': '1028F', 'name': 'Make Symmetrical', 'tags': ['brute force'], 'dif': '2800'}
{'pro_id': '1028E', 'name': 'Restore Array', 'tags': ['constructive algorithms'], 'dif': '2400'}
{'pro_id': '1028D', 'name': 'Order book', 'tags': ['combinatorics', 'data structures', 'greedy'], 'dif': '2100'}
{'pro_id': '1028C', 'name': 'Rectangles', 'tags': ['geometry', 'implementation', 'sortings'], 'dif': '1600'}
{'pro_id': '1028B', 'name': 'Unnatural Conditions', 'tags': ['constructive algorithms', 'math'], 'dif': '1300'}
{'pro_id': '1028A', 'name': 'Find Square', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '1027G', 'name': 'X-mouse in the Campus', 'tags': ['bitmasks', 'math', 'number theory'], 'dif': '2800'}
{'pro_id': '1027F', 'name': 'Session in BSU', 'tags': ['binary search', 'dfs and similar', 'dsu', 'graph matchings', 'graphs'], 'dif': '2400'}
{'pro_id': '1027E', 'name': 'Inverse Coloring', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2100'}
{'pro_id': '1027D', 'name': 'Mouse Hunt', 'tags': ['dfs and similar', 'graphs'], 'dif': '1700'}
{'pro_id': '1027C', 'name': 'Minimum Value Rectangle', 'tags': ['greedy'], 'dif': '1600'}
{'pro_id': '1027B', 'name': 'Numbers on the Chessboard', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '1027A', 'name': 'Palindromic Twist', 'tags': ['implementation', 'strings'], 'dif': '1000'}
{'pro_id': '1025G', 'name': 'Company Acquisitions', 'tags': ['constructive algorithms', 'math'], 'dif': '3100'}
{'pro_id': '1025F', 'name': 'Disjoint Triangles', 'tags': ['geometry'], 'dif': '2700'}
{'pro_id': '1025E', 'name': 'Colored Cubes', 'tags': ['constructive algorithms', 'implementation', 'matrices'], 'dif': '2600'}
{'pro_id': '1025D', 'name': 'Recovering BST', 'tags': ['brute force', 'dp', 'math', 'number theory', 'trees'], 'dif': '2000'}
{'pro_id': '1025C', 'name': 'Plasticine zebra', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1600'}
{'pro_id': '1025B', 'name': 'Weakened Common Divisor', 'tags': ['brute force', 'greedy', 'number theory'], 'dif': '1600'}
{'pro_id': '1025A', 'name': 'Doggo Recoloring', 'tags': ['implementation', 'sortings'], 'dif': '900'}
{'pro_id': '1023G', 'name': 'Pisces', 'tags': ['data structures', 'flows', 'trees'], 'dif': '3300'}
{'pro_id': '1023F', 'name': 'Mobile Phone Network', 'tags': ['dfs and similar', 'dsu', 'graphs', 'trees'], 'dif': '2600'}
{'pro_id': '1023E', 'name': 'Down or Right', 'tags': ['constructive algorithms', 'interactive', 'matrices'], 'dif': '2100'}
{'pro_id': '1023D', 'name': 'Array Restoration', 'tags': ['constructive algorithms', 'data structures'], 'dif': '1700'}
{'pro_id': '1023C', 'name': 'Bracket Subsequence', 'tags': ['greedy'], 'dif': '1200'}
{'pro_id': '1023B', 'name': 'Pair of Toys', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '1023A', 'name': 'Single Wildcard Pattern Matching', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1300'}
{'pro_id': '1020B', 'name': 'Badge', 'tags': ['brute force', 'dfs and similar', 'graphs'], 'dif': '1000'}
{'pro_id': '1020A', 'name': 'New Building for SIS', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '1019E', 'name': 'Raining season', 'tags': ['data structures', 'divide and conquer', 'trees'], 'dif': '3200'}
{'pro_id': '1019D', 'name': 'Large Triangle', 'tags': ['binary search', 'geometry', 'sortings'], 'dif': '2700'}
{'pro_id': '1019C', 'name': "Sergey's problem", 'tags': ['constructive algorithms', 'graphs'], 'dif': '2800'}
{'pro_id': '1019B', 'name': 'The hat', 'tags': ['binary search', 'interactive'], 'dif': '2200'}
{'pro_id': '1019A', 'name': 'Elections', 'tags': ['brute force', 'greedy'], 'dif': '1800'}
{'pro_id': '1017H', 'name': 'The Films', 'tags': ['brute force'], 'dif': '3300'}
{'pro_id': '1017G', 'name': 'The Tree', 'tags': ['data structures'], 'dif': '3200'}
{'pro_id': '1017F', 'name': 'The Neutral Zone', 'tags': ['brute force', 'math'], 'dif': '2500'}
{'pro_id': '1017E', 'name': 'The Supersonic Rocket', 'tags': ['geometry', 'hashing', 'strings'], 'dif': '2400'}
{'pro_id': '1017D', 'name': 'The Wu', 'tags': ['bitmasks', 'brute force', 'data structures'], 'dif': '1900'}
{'pro_id': '1017C', 'name': 'The Phone Number', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1600'}
{'pro_id': '1017B', 'name': 'The Bits', 'tags': ['implementation', 'math'], 'dif': '1200'}
{'pro_id': '1017A', 'name': 'The Rank', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '1016G', 'name': 'Appropriate Team', 'tags': ['bitmasks', 'math', 'number theory'], 'dif': '2800'}
{'pro_id': '1016F', 'name': 'Road Projects', 'tags': ['dfs and similar', 'dp', 'trees'], 'dif': '2600'}
{'pro_id': '1016E', 'name': 'Rest In The Shades', 'tags': ['binary search', 'geometry'], 'dif': '2400'}
{'pro_id': '1016D', 'name': 'Vasya And The Matrix', 'tags': ['constructive algorithms', 'flows', 'math'], 'dif': '1800'}
{'pro_id': '1016C', 'name': 'Vasya And The Mushrooms', 'tags': ['dp', 'implementation'], 'dif': '1800'}
{'pro_id': '1016B', 'name': 'Segment Occurrences', 'tags': ['brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '1016A', 'name': 'Death Note', 'tags': ['greedy', 'implementation', 'math'], 'dif': '900'}
{'pro_id': '1015F', 'name': 'Bracket Substring', 'tags': ['dp', 'strings'], 'dif': '2600'}
{'pro_id': '1015E2', 'name': 'Stars Drawing (Hard Edition)', 'tags': ['binary search', 'dp', 'greedy'], 'dif': '2000'}
{'pro_id': '1015E1', 'name': 'Stars Drawing (Easy Edition)', 'tags': ['brute force', 'dp', 'greedy'], 'dif': '1700'}
{'pro_id': '1015D', 'name': 'Walking Between Houses', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1600'}
{'pro_id': '1015C', 'name': 'Songs Compression', 'tags': ['sortings'], 'dif': '1100'}
{'pro_id': '1015B', 'name': 'Obtaining the String', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '1015A', 'name': 'Points in Segments', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '1013B', 'name': 'And', 'tags': ['greedy'], 'dif': '1200'}
{'pro_id': '1013A', 'name': 'Piles With Stones', 'tags': ['math'], 'dif': '800'}
{'pro_id': '1012F', 'name': 'Passports', 'tags': ['dp', 'implementation'], 'dif': '3200'}
{'pro_id': '1012E', 'name': 'Cycle sort', 'tags': ['dsu', 'math'], 'dif': '3100'}
{'pro_id': '1012D', 'name': 'AB-Strings', 'tags': ['constructive algorithms', 'strings'], 'dif': '2700'}
{'pro_id': '1012C', 'name': 'Hills', 'tags': ['dp'], 'dif': '2000'}
{'pro_id': '1012B', 'name': 'Chemical table', 'tags': ['constructive algorithms', 'dfs and similar', 'dsu', 'graphs', 'matrices'], 'dif': '1900'}
{'pro_id': '1012A', 'name': 'Photo of The Sky', 'tags': ['brute force', 'implementation', 'math', 'sortings'], 'dif': '1500'}
{'pro_id': '1011B', 'name': 'Planning The Expedition', 'tags': ['binary search', 'brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '1011A', 'name': 'Stages', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1000'}
{'pro_id': '1010F', 'name': 'Tree', 'tags': ['fft', 'graphs', 'trees'], 'dif': '3400'}
{'pro_id': '1010E', 'name': 'Store', 'tags': ['data structures'], 'dif': '2700'}
{'pro_id': '1010D', 'name': 'Mars rover', 'tags': ['dfs and similar', 'graphs', 'implementation', 'trees'], 'dif': '2100'}
{'pro_id': '1010C', 'name': 'Border', 'tags': ['number theory'], 'dif': '1800'}
{'pro_id': '1010B', 'name': 'Rocket', 'tags': ['binary search', 'interactive'], 'dif': '1800'}
{'pro_id': '1010A', 'name': 'Fly', 'tags': ['binary search', 'math'], 'dif': '1500'}
{'pro_id': '1009G', 'name': 'Allowed Letters', 'tags': ['bitmasks', 'flows', 'graph matchings', 'graphs', 'greedy'], 'dif': '2500'}
{'pro_id': '1009F', 'name': 'Dominant Indices', 'tags': ['data structures', 'dsu', 'trees'], 'dif': '2300'}
{'pro_id': '1009E', 'name': 'Intercity Travelling', 'tags': ['combinatorics', 'math', 'probabilities'], 'dif': '1900'}
{'pro_id': '1009D', 'name': 'Relatively Prime Graph', 'tags': ['brute force', 'constructive algorithms', 'graphs', 'greedy', 'math'], 'dif': '1700'}
{'pro_id': '1009C', 'name': 'Annoying Present', 'tags': ['greedy', 'math'], 'dif': '1700'}
{'pro_id': '1009B', 'name': 'Minimum Ternary String', 'tags': ['greedy', 'implementation'], 'dif': '1500'}
{'pro_id': '1009A', 'name': 'Game Shopping', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '1008B', 'name': 'Turn the Rectangles', 'tags': ['greedy', 'sortings'], 'dif': '1100'}
{'pro_id': '1008A', 'name': 'Romaji', 'tags': ['implementation', 'strings'], 'dif': '900'}
{'pro_id': '1007E', 'name': 'Mini Metro', 'tags': ['dp'], 'dif': '3500'}
{'pro_id': '1007D', 'name': 'Ants', 'tags': ['2-sat', 'data structures', 'trees'], 'dif': '3200'}
{'pro_id': '1007C', 'name': 'Guess two numbers', 'tags': ['binary search', 'interactive'], 'dif': '2800'}
{'pro_id': '1007B', 'name': 'Pave the Parallelepiped', 'tags': ['bitmasks', 'brute force', 'combinatorics', 'math', 'number theory'], 'dif': '2400'}
{'pro_id': '1007A', 'name': 'Reorder the Array', 'tags': ['combinatorics', 'data structures', 'math', 'sortings', 'two pointers'], 'dif': '1300'}
{'pro_id': '1006F', 'name': 'Xor-Paths', 'tags': ['bitmasks', 'brute force', 'dp', 'meet-in-the-middle'], 'dif': '2400'}
{'pro_id': '1006E', 'name': 'Military Problem', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '1600'}
{'pro_id': '1006D', 'name': 'Two Strings Swaps', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '1006C', 'name': 'Three Parts of the Array', 'tags': ['binary search', 'data structures', 'two pointers'], 'dif': '1300'}
{'pro_id': '1006B', 'name': "Polycarp's Practice", 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '1006A', 'name': 'Adjacent Replacements', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '1005F', 'name': 'Berland and the Shortest Paths', 'tags': ['brute force', 'dfs and similar', 'graphs', 'shortest paths'], 'dif': '2400'}
{'pro_id': '1005E2', 'name': 'Median on Segments (General Case Edition)', 'tags': ['sortings'], 'dif': '2600'}
{'pro_id': '1005E1', 'name': 'Median on Segments (Permutations Edition)', 'tags': ['sortings'], 'dif': '1900'}
{'pro_id': '1005D', 'name': 'Polycarp and Div 3', 'tags': ['dp', 'greedy', 'number theory'], 'dif': '1500'}
{'pro_id': '1005C', 'name': 'Summarize to the Power of Two', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '1005B', 'name': 'Delete from the Left', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1000'}
{'pro_id': '1005A', 'name': 'Tanya and Stairways', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '1004F', 'name': 'Sonya and Bitwise OR', 'tags': ['bitmasks', 'data structures', 'divide and conquer'], 'dif': '2900'}
{'pro_id': '1004E', 'name': 'Sonya and Ice Cream', 'tags': ['binary search', 'data structures', 'dp', 'greedy', 'shortest paths', 'trees'], 'dif': '2400'}
{'pro_id': '1004D', 'name': 'Sonya and Matrix', 'tags': ['brute force', 'constructive algorithms', 'implementation'], 'dif': '2200'}
{'pro_id': '1004C', 'name': 'Sonya and Robots', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1400'}
{'pro_id': '1004B', 'name': 'Sonya and Exhibition', 'tags': ['constructive algorithms', 'greedy', 'implementation', 'math'], 'dif': '1400'}
{'pro_id': '1004A', 'name': 'Sonya and Hotels', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '1003F', 'name': 'Abbreviation', 'tags': ['dp', 'hashing', 'strings'], 'dif': '2400'}
{'pro_id': '1003E', 'name': 'Tree Constructing', 'tags': ['constructive algorithms', 'graphs'], 'dif': '2200'}
{'pro_id': '1003D', 'name': 'Coins and Queries', 'tags': ['greedy'], 'dif': '1600'}
{'pro_id': '1003C', 'name': 'Intense Heat', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1300'}
{'pro_id': '1003B', 'name': 'Binary String Constructing', 'tags': ['constructive algorithms'], 'dif': '1300'}
{'pro_id': '1003A', 'name': "Polycarp's Pockets", 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '1002E2', 'name': 'Another array reconstruction algorithm', 'tags': [], 'dif': '2400'}
{'pro_id': '1002E1', 'name': 'Bernstein-Vazirani algorithm', 'tags': [], 'dif': '2100'}
{'pro_id': '1002D3', 'name': 'Oracle for majority function', 'tags': [], 'dif': '2200'}
{'pro_id': '1002D2', 'name': 'Oracle for f(x) = b * x + (1 - b) * (1 - x) mod 2', 'tags': [], 'dif': '2100'}
{'pro_id': '1002D1', 'name': 'Oracle for f(x) = b * x mod 2', 'tags': [], 'dif': '2100'}
{'pro_id': '1002C2', 'name': 'Distinguish zero state and plus state without errors', 'tags': [], 'dif': '2400'}
{'pro_id': '1002C1', 'name': 'Distinguish zero state and plus state with minimum error', 'tags': [], 'dif': '2300'}
{'pro_id': '1002B4', 'name': 'Distinguish four 2-qubit states - 2', 'tags': [], 'dif': '2200'}
{'pro_id': '1002B3', 'name': 'Distinguish four 2-qubit states', 'tags': [], 'dif': '2100'}
{'pro_id': '1002B2', 'name': 'Distinguish GHZ state and W state', 'tags': [], 'dif': '2100'}
{'pro_id': '1002B1', 'name': 'Distinguish zero state and W state', 'tags': [], 'dif': '2000'}
{'pro_id': '1002A4', 'name': 'Generate W state', 'tags': [], 'dif': '2400'}
{'pro_id': '1002A3', 'name': 'Generate superposition of two basis states', 'tags': [], 'dif': '1900'}
{'pro_id': '1002A2', 'name': 'Generate superposition of zero state and a basis state', 'tags': [], 'dif': '1900'}
{'pro_id': '1002A1', 'name': 'Generate superposition of all basis states', 'tags': [], 'dif': '1900'}
{'pro_id': '1001I', 'name': 'Deutsch-Jozsa algorithm', 'tags': ['*special problem'], 'dif': '2700'}
{'pro_id': '1001H', 'name': 'Oracle for f(x) = parity of the number of 1s in x', 'tags': ['*special problem'], 'dif': '2500'}
{'pro_id': '1001G', 'name': 'Oracle for f(x) = k-th element of x', 'tags': ['*special problem'], 'dif': '2500'}
{'pro_id': '1001F', 'name': 'Distinguish multi-qubit basis states', 'tags': ['*special problem'], 'dif': '2400'}
{'pro_id': '1001E', 'name': 'Distinguish Bell states', 'tags': ['*special problem'], 'dif': '2400'}
{'pro_id': '1001D', 'name': 'Distinguish plus state and minus state', 'tags': ['*special problem'], 'dif': '2300'}
{'pro_id': '1001C', 'name': 'Generate GHZ state', 'tags': ['*special problem'], 'dif': '2300'}
{'pro_id': '1001B', 'name': 'Generate Bell state', 'tags': ['*special problem'], 'dif': '2000'}
{'pro_id': '1001A', 'name': 'Generate plus state or minus state', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '1000G', 'name': 'Two-Paths', 'tags': ['data structures', 'dp', 'trees'], 'dif': '2800'}
{'pro_id': '1000F', 'name': 'One Occurrence', 'tags': ['data structures', 'divide and conquer'], 'dif': '2400'}
{'pro_id': '1000E', 'name': 'We Need More Bosses', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '2100'}
{'pro_id': '1000D', 'name': 'Yet Another Problem On a Subsequence', 'tags': ['combinatorics', 'dp'], 'dif': '1900'}
{'pro_id': '1000C', 'name': 'Covered Points Count', 'tags': ['data structures', 'implementation', 'sortings'], 'dif': '1700'}
{'pro_id': '1000B', 'name': 'Light It Up', 'tags': ['greedy'], 'dif': '1600'}
{'pro_id': '1000A', 'name': 'Codehorses T-shirts', 'tags': ['greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '999F', 'name': 'Cards and Joy', 'tags': ['dp'], 'dif': '2200'}
{'pro_id': '999E', 'name': 'Reachability from the Capital', 'tags': ['dfs and similar', 'graphs', 'greedy'], 'dif': '1900'}
{'pro_id': '999D', 'name': 'Equalize the Remainders', 'tags': ['data structures', 'greedy', 'implementation'], 'dif': '1900'}
{'pro_id': '999C', 'name': 'Alphabetic Removals', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '999B', 'name': 'Reversing Encryption', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '999A', 'name': 'Mishka and Contest', 'tags': ['brute force', 'implementation'], 'dif': '800'}
{'pro_id': '998B', 'name': 'Cutting', 'tags': ['dp', 'greedy', 'sortings'], 'dif': '1200'}
{'pro_id': '998A', 'name': 'Balloons', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1000'}
{'pro_id': '997E', 'name': 'Good Subsegments', 'tags': ['data structures'], 'dif': '3000'}
{'pro_id': '997D', 'name': 'Cycles in product', 'tags': ['combinatorics', 'divide and conquer', 'trees'], 'dif': '2800'}
{'pro_id': '997C', 'name': 'Sky Full of Stars', 'tags': ['combinatorics', 'math'], 'dif': '2600'}
{'pro_id': '997B', 'name': 'Roman Digits', 'tags': ['brute force', 'combinatorics', 'dp', 'greedy', 'math'], 'dif': '2000'}
{'pro_id': '997A', 'name': 'Convert to Ones', 'tags': ['brute force', 'greedy', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '996B', 'name': 'World Cup', 'tags': ['binary search', 'math'], 'dif': '1300'}
{'pro_id': '996A', 'name': 'Hit the Lottery', 'tags': ['dp', 'greedy'], 'dif': '600'}
{'pro_id': '995F', 'name': 'Cowmpany Cowmpensation', 'tags': ['combinatorics', 'dp', 'math', 'trees'], 'dif': '2700'}
{'pro_id': '995E', 'name': 'Number Clicker', 'tags': ['divide and conquer', 'graphs', 'meet-in-the-middle', 'number theory'], 'dif': '2700'}
{'pro_id': '995D', 'name': 'Game', 'tags': ['math'], 'dif': '2400'}
{'pro_id': '995C', 'name': 'Leaving the Bar', 'tags': ['brute force', 'data structures', 'geometry', 'greedy', 'math', 'sortings'], 'dif': '2200'}
{'pro_id': '995B', 'name': 'Suit and Tie', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '995A', 'name': 'Tesla', 'tags': ['constructive algorithms', 'implementation'], 'dif': '2100'}
{'pro_id': '994B', 'name': 'Knights of a Polygonal Table', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '994A', 'name': 'Fingerprints', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '993F', 'name': 'The Moral Dilemma', 'tags': [], 'dif': '3100'}
{'pro_id': '993E', 'name': 'Nikita and Order Statistics', 'tags': ['chinese remainder theorem', 'fft', 'math'], 'dif': '2300'}
{'pro_id': '993D', 'name': 'Compute Power', 'tags': ['binary search', 'dp', 'greedy'], 'dif': '2400'}
{'pro_id': '993C', 'name': 'Careful Maneuvering', 'tags': ['bitmasks', 'brute force', 'geometry'], 'dif': '2100'}
{'pro_id': '993B', 'name': 'Open Communication', 'tags': ['bitmasks', 'brute force'], 'dif': '1900'}
{'pro_id': '993A', 'name': 'Two Squares', 'tags': ['geometry', 'implementation'], 'dif': '1700'}
{'pro_id': '992E', 'name': 'Nastya and King-Shamans', 'tags': ['binary search', 'data structures'], 'dif': '2600'}
{'pro_id': '992D', 'name': 'Nastya and a Game', 'tags': ['brute force', 'implementation', 'math'], 'dif': '2100'}
{'pro_id': '992C', 'name': 'Nastya and a Wardrobe', 'tags': ['math'], 'dif': '1700'}
{'pro_id': '992B', 'name': 'Nastya Studies Informatics', 'tags': ['math', 'number theory'], 'dif': '1700'}
{'pro_id': '992A', 'name': 'Nastya and an Array', 'tags': ['implementation', 'sortings'], 'dif': '900'}
{'pro_id': '991F', 'name': 'Concise and clear', 'tags': ['brute force', 'greedy', 'implementation', 'math'], 'dif': '2800'}
{'pro_id': '991E', 'name': 'Bus Number', 'tags': ['brute force', 'combinatorics', 'math'], 'dif': '1800'}
{'pro_id': '991D', 'name': 'Bishwock', 'tags': ['dp', 'greedy'], 'dif': '1500'}
{'pro_id': '991C', 'name': 'Candies', 'tags': ['binary search', 'implementation'], 'dif': '1500'}
{'pro_id': '991B', 'name': 'Getting an A', 'tags': ['greedy', 'sortings'], 'dif': '1100'}
{'pro_id': '991A', 'name': "If at first you don't succeed...", 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '990G', 'name': 'GCD Counting', 'tags': ['divide and conquer', 'dp', 'dsu', 'number theory', 'trees'], 'dif': '2400'}
{'pro_id': '990F', 'name': 'Flow Control', 'tags': ['dfs and similar', 'dp', 'greedy', 'trees'], 'dif': '2500'}
{'pro_id': '990E', 'name': 'Post Lamps', 'tags': ['brute force', 'greedy'], 'dif': '2000'}
{'pro_id': '990D', 'name': 'Graph And Its Complement', 'tags': ['constructive algorithms', 'graphs', 'implementation'], 'dif': '1700'}
{'pro_id': '990C', 'name': 'Bracket Sequences Concatenation Problem', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '990B', 'name': 'Micro-World', 'tags': ['greedy', 'sortings'], 'dif': '1200'}
{'pro_id': '990A', 'name': 'Commentary Boxes', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '989E', 'name': 'A Trance of Nightfall', 'tags': ['dp', 'geometry', 'matrices', 'probabilities'], 'dif': '2900'}
{'pro_id': '989D', 'name': 'A Shade of Moonlight', 'tags': ['binary search', 'geometry', 'math', 'sortings', 'two pointers'], 'dif': '2500'}
{'pro_id': '989C', 'name': 'A Mist of Florescence', 'tags': ['constructive algorithms', 'graphs'], 'dif': '1800'}
{'pro_id': '989B', 'name': 'A Tide of Riverscape', 'tags': ['constructive algorithms', 'strings'], 'dif': '1300'}
{'pro_id': '989A', 'name': 'A Blend of Springtime', 'tags': ['implementation', 'strings'], 'dif': '1000'}
{'pro_id': '988F', 'name': 'Rain and Umbrellas', 'tags': ['dp'], 'dif': '2300'}
{'pro_id': '988E', 'name': 'Divisibility by 25', 'tags': ['brute force', 'greedy'], 'dif': '2100'}
{'pro_id': '988D', 'name': 'Points and Powers of Two', 'tags': ['brute force', 'math'], 'dif': '1800'}
{'pro_id': '988C', 'name': 'Equal Sums', 'tags': ['implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '988B', 'name': 'Substrings Sort', 'tags': ['sortings', 'strings'], 'dif': '1100'}
{'pro_id': '988A', 'name': 'Diverse Team', 'tags': ['brute force', 'implementation'], 'dif': '800'}
{'pro_id': '987C', 'name': 'Three displays', 'tags': ['brute force', 'dp', 'implementation'], 'dif': '1400'}
{'pro_id': '987B', 'name': 'High School: Become Human', 'tags': ['math'], 'dif': '1200'}
{'pro_id': '987A', 'name': 'Infinity Gauntlet', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '986F', 'name': 'Oppa Funcan Style Remastered', 'tags': ['graphs', 'math', 'number theory', 'shortest paths'], 'dif': '3200'}
{'pro_id': '986E', 'name': "Prince's Problem", 'tags': ['brute force', 'data structures', 'math', 'number theory', 'trees'], 'dif': '2900'}
{'pro_id': '986D', 'name': 'Perfect Encoding', 'tags': ['fft', 'math'], 'dif': '2600'}
{'pro_id': '986C', 'name': 'AND Graph', 'tags': ['bitmasks', 'dfs and similar', 'dsu', 'graphs'], 'dif': '2300'}
{'pro_id': '986B', 'name': 'Petr and Permutations', 'tags': ['combinatorics', 'math'], 'dif': '1800'}
{'pro_id': '986A', 'name': 'Fair', 'tags': ['graphs', 'greedy', 'number theory', 'shortest paths'], 'dif': '1600'}
{'pro_id': '985G', 'name': 'Team Players', 'tags': ['combinatorics'], 'dif': '2700'}
{'pro_id': '985F', 'name': 'Isomorphic Strings', 'tags': ['hashing', 'strings'], 'dif': '2400'}
{'pro_id': '985E', 'name': 'Pencils and Boxes', 'tags': ['binary search', 'data structures', 'dp', 'greedy', 'two pointers'], 'dif': '2000'}
{'pro_id': '985D', 'name': 'Sand Fortress', 'tags': ['binary search', 'constructive algorithms', 'math'], 'dif': '2100'}
{'pro_id': '985C', 'name': "Liebig's Barrels", 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '985B', 'name': 'Switches and Lamps', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '985A', 'name': 'Chess Placing', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '984B', 'name': 'Minesweeper', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '984A', 'name': 'Game', 'tags': ['sortings'], 'dif': '700'}
{'pro_id': '983E', 'name': 'NN country', 'tags': ['binary search', 'data structures', 'trees'], 'dif': '2700'}
{'pro_id': '983D', 'name': 'Arkady and Rectangles', 'tags': ['data structures'], 'dif': '3300'}
{'pro_id': '983C', 'name': 'Elevator', 'tags': ['dp', 'graphs', 'shortest paths'], 'dif': '2500'}
{'pro_id': '983B', 'name': 'XOR-pyramid', 'tags': ['dp'], 'dif': '1900'}
{'pro_id': '983A', 'name': 'Finite or not?', 'tags': ['implementation', 'math'], 'dif': '1700'}
{'pro_id': '982F', 'name': 'The Meeting Place Cannot Be Changed', 'tags': ['dfs and similar', 'graphs'], 'dif': '2800'}
{'pro_id': '982E', 'name': 'Billiard', 'tags': ['geometry', 'number theory'], 'dif': '2500'}
{'pro_id': '982D', 'name': 'Shark', 'tags': ['brute force', 'data structures', 'dsu', 'trees'], 'dif': '1900'}
{'pro_id': '982C', 'name': "Cut 'em all!", 'tags': ['dfs and similar', 'dp', 'graphs', 'greedy', 'trees'], 'dif': '1500'}
{'pro_id': '982B', 'name': 'Bus of Characters', 'tags': ['data structures', 'greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '982A', 'name': 'Row', 'tags': ['brute force', 'constructive algorithms'], 'dif': '1200'}
{'pro_id': '981H', 'name': 'K Paths', 'tags': ['combinatorics', 'data structures', 'dp', 'fft', 'math'], 'dif': '2900'}
{'pro_id': '981G', 'name': 'Magic multisets', 'tags': ['data structures'], 'dif': '2400'}
{'pro_id': '981F', 'name': 'Round Marriage', 'tags': ['binary search', 'graph matchings', 'greedy'], 'dif': '2500'}
{'pro_id': '981E', 'name': 'Addition on Segments', 'tags': ['bitmasks', 'data structures', 'divide and conquer', 'dp'], 'dif': '2100'}
{'pro_id': '981D', 'name': 'Bookshelves', 'tags': ['bitmasks', 'dp', 'greedy'], 'dif': '1800'}
{'pro_id': '981C', 'name': 'Useful Decomposition', 'tags': ['implementation', 'trees'], 'dif': '1400'}
{'pro_id': '981B', 'name': 'Businessmen Problems', 'tags': ['sortings'], 'dif': '1000'}
{'pro_id': '981A', 'name': 'Antipalindrome', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1000'}
{'pro_id': '980F', 'name': 'Cactus to Tree', 'tags': ['dp', 'graphs', 'trees'], 'dif': '2900'}
{'pro_id': '980E', 'name': 'The Number Games', 'tags': ['data structures', 'greedy', 'trees'], 'dif': '2300'}
{'pro_id': '980D', 'name': 'Perfect Groups', 'tags': ['dp', 'math', 'number theory'], 'dif': '2100'}
{'pro_id': '980C', 'name': 'Posterized', 'tags': ['games', 'greedy'], 'dif': '1700'}
{'pro_id': '980B', 'name': 'Marlin', 'tags': ['constructive algorithms'], 'dif': '1600'}
{'pro_id': '980A', 'name': 'Links and Pearls', 'tags': ['implementation', 'math'], 'dif': '900'}
{'pro_id': '979E', 'name': 'Kuro and Topological Parity', 'tags': ['dp'], 'dif': '2800'}
{'pro_id': '979D', 'name': 'Kuro and GCD and XOR and SUM', 'tags': ['binary search', 'bitmasks', 'brute force', 'data structures', 'dp', 'dsu', 'greedy', 'math', 'number theory', 'strings', 'trees'], 'dif': '2200'}
{'pro_id': '979C', 'name': 'Kuro and Walking Route', 'tags': ['dfs and similar', 'trees'], 'dif': '1600'}
{'pro_id': '979B', 'name': 'Treasure Hunt', 'tags': ['greedy'], 'dif': '1800'}
{'pro_id': '979A', 'name': 'Pizza, Pizza, Pizza!!!', 'tags': ['math'], 'dif': '1000'}
{'pro_id': '978G', 'name': "Petya's Exams", 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1800'}
{'pro_id': '978F', 'name': 'Mentors', 'tags': ['binary search', 'data structures', 'implementation'], 'dif': '1500'}
{'pro_id': '978E', 'name': 'Bus Video System', 'tags': ['combinatorics', 'math'], 'dif': '1400'}
{'pro_id': '978D', 'name': 'Almost Arithmetic Progression', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '978C', 'name': 'Letters', 'tags': ['binary search', 'implementation', 'two pointers'], 'dif': '1000'}
{'pro_id': '978B', 'name': 'File Name', 'tags': ['greedy', 'strings'], 'dif': '700'}
{'pro_id': '978A', 'name': 'Remove Duplicates', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '977F', 'name': 'Consecutive Subsequence', 'tags': ['dp'], 'dif': '1700'}
{'pro_id': '977E', 'name': 'Cyclic Components', 'tags': ['dfs and similar', 'dsu', 'graphs'], 'dif': '1500'}
{'pro_id': '977D', 'name': 'Divide by three, multiply by two', 'tags': ['dfs and similar', 'math', 'sortings'], 'dif': '1400'}
{'pro_id': '977C', 'name': 'Less or Equal', 'tags': ['sortings'], 'dif': '1200'}
{'pro_id': '977B', 'name': 'Two-gram', 'tags': ['implementation', 'strings'], 'dif': '900'}
{'pro_id': '977A', 'name': 'Wrong Subtraction', 'tags': ['implementation'], 'dif': '500'}
{'pro_id': '976F', 'name': 'Minimal k-covering', 'tags': ['flows', 'graphs'], 'dif': '2500'}
{'pro_id': '976E', 'name': 'Well played!', 'tags': ['greedy', 'sortings'], 'dif': '2100'}
{'pro_id': '976D', 'name': 'Degree Set', 'tags': ['constructive algorithms', 'graphs', 'implementation'], 'dif': '2400'}
{'pro_id': '976C', 'name': 'Nested Segments', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1500'}
{'pro_id': '976B', 'name': 'Lara Croft and the New Game', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '976A', 'name': 'Minimum Binary Number', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '975E', 'name': "Hag's Khashba", 'tags': ['geometry'], 'dif': '3000'}
{'pro_id': '975D', 'name': 'Ghosts', 'tags': ['geometry', 'math'], 'dif': '2000'}
{'pro_id': '975C', 'name': 'Valhalla Siege', 'tags': ['binary search'], 'dif': '1400'}
{'pro_id': '975B', 'name': 'Mancala', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '975A', 'name': 'Aramic script', 'tags': ['implementation', 'strings'], 'dif': '1000'}
{'pro_id': '967B', 'name': 'Watering System', 'tags': ['math', 'sortings'], 'dif': '1000'}
{'pro_id': '967A', 'name': 'Mind the Gap', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '965E', 'name': 'Short Code', 'tags': ['data structures', 'dp', 'greedy', 'strings', 'trees'], 'dif': '2500'}
{'pro_id': '965D', 'name': 'Single-use Stones', 'tags': ['binary search', 'flows', 'greedy', 'two pointers'], 'dif': '1900'}
{'pro_id': '965C', 'name': 'Greedy Arkady', 'tags': ['math'], 'dif': '1900'}
{'pro_id': '965B', 'name': 'Battleship', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '965A', 'name': 'Paper Airplanes', 'tags': ['math'], 'dif': '900'}
{'pro_id': '964B', 'name': 'Messages', 'tags': ['math'], 'dif': '1300'}
{'pro_id': '964A', 'name': 'Splits', 'tags': ['math'], 'dif': '900'}
{'pro_id': '963E', 'name': 'Circles of Waiting', 'tags': ['math'], 'dif': '3100'}
{'pro_id': '963D', 'name': 'Frequency of String', 'tags': ['hashing', 'string suffix structures', 'strings'], 'dif': '2400'}
{'pro_id': '963C', 'name': 'Cutting Rectangle', 'tags': ['brute force', 'math', 'number theory'], 'dif': '2600'}
{'pro_id': '963B', 'name': 'Destruction of a Tree', 'tags': ['constructive algorithms', 'dfs and similar', 'dp', 'greedy', 'trees'], 'dif': '2100'}
{'pro_id': '963A', 'name': 'Alternating Sum', 'tags': ['math', 'number theory'], 'dif': '1800'}
{'pro_id': '962G', 'name': 'Visible Black Areas', 'tags': ['data structures', 'dsu', 'geometry', 'trees'], 'dif': '2900'}
{'pro_id': '962F', 'name': 'Simple Cycles Edges', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '2400'}
{'pro_id': '962E', 'name': 'Byteland, Berland and Disputed Cities', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2200'}
{'pro_id': '962D', 'name': 'Merge Equals', 'tags': ['data structures', 'implementation'], 'dif': '1600'}
{'pro_id': '962C', 'name': 'Make a Square', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1400'}
{'pro_id': '962B', 'name': 'Students in Railway Carriage', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '962A', 'name': 'Equator', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '961G', 'name': 'Partitions', 'tags': ['combinatorics', 'math', 'number theory'], 'dif': '2700'}
{'pro_id': '961F', 'name': 'k-substrings', 'tags': ['binary search', 'hashing', 'string suffix structures'], 'dif': '2700'}
{'pro_id': '961E', 'name': 'Tufurama', 'tags': ['data structures'], 'dif': '1900'}
{'pro_id': '961D', 'name': 'Pair Of Lines', 'tags': ['geometry'], 'dif': '1900'}
{'pro_id': '961C', 'name': 'Chessboard', 'tags': ['bitmasks', 'brute force', 'implementation'], 'dif': '1400'}
{'pro_id': '961B', 'name': 'Lecture Sleep', 'tags': ['data structures', 'dp', 'implementation', 'two pointers'], 'dif': '1300'}
{'pro_id': '961A', 'name': 'Tetris', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '960H', 'name': "Santa's Gift", 'tags': ['data structures', 'trees'], 'dif': '3000'}
{'pro_id': '960G', 'name': 'Bandit Blues', 'tags': ['combinatorics', 'dp', 'fft', 'math'], 'dif': '2800'}
{'pro_id': '960F', 'name': 'Pathwalks', 'tags': ['data structures', 'dp', 'graphs'], 'dif': '2000'}
{'pro_id': '960E', 'name': 'Alternating Tree', 'tags': ['combinatorics', 'dfs and similar', 'divide and conquer', 'dp', 'probabilities', 'trees'], 'dif': '2200'}
{'pro_id': '960D', 'name': 'Full Binary Tree Queries', 'tags': ['brute force', 'implementation', 'trees'], 'dif': '2100'}
{'pro_id': '960C', 'name': 'Subsequence Counting', 'tags': ['bitmasks', 'constructive algorithms', 'greedy', 'implementation'], 'dif': '1700'}
{'pro_id': '960B', 'name': 'Minimize the error', 'tags': ['data structures', 'greedy', 'sortings'], 'dif': '1500'}
{'pro_id': '960A', 'name': 'Check the string', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '959F', 'name': 'Mahmoud and Ehab and yet another xor task', 'tags': ['bitmasks', 'dp', 'math', 'matrices'], 'dif': '2600'}
{'pro_id': '959E', 'name': 'Mahmoud and Ehab and the xor-MST', 'tags': ['bitmasks', 'dp', 'graphs', 'implementation', 'math'], 'dif': '1900'}
{'pro_id': '959D', 'name': 'Mahmoud and Ehab and another array construction task', 'tags': ['constructive algorithms', 'greedy', 'math', 'number theory'], 'dif': '2000'}
{'pro_id': '959C', 'name': 'Mahmoud and Ehab and the wrong algorithm', 'tags': ['constructive algorithms', 'trees'], 'dif': '1500'}
{'pro_id': '959B', 'name': 'Mahmoud and Ehab and the message', 'tags': ['dsu', 'greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '959A', 'name': 'Mahmoud and Ehab and the even-odd game', 'tags': ['games', 'math'], 'dif': '600'}
{'pro_id': '958F3', 'name': 'Lightsabers (hard)', 'tags': ['fft'], 'dif': '2600'}
{'pro_id': '958F2', 'name': 'Lightsabers (medium)', 'tags': ['binary search', 'two pointers'], 'dif': '1900'}
{'pro_id': '958F1', 'name': 'Lightsabers (easy)', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '958E3', 'name': 'Guard Duty (hard)', 'tags': ['geometry'], 'dif': '2800'}
{'pro_id': '958E2', 'name': 'Guard Duty (medium)', 'tags': ['binary search', 'dp', 'greedy', 'sortings'], 'dif': '2300'}
{'pro_id': '958E1', 'name': 'Guard Duty (easy)', 'tags': ['brute force', 'geometry', 'greedy', 'math'], 'dif': '1800'}
{'pro_id': '958D2', 'name': 'Hyperspace Jump (hard)', 'tags': [], 'dif': '3000'}
{'pro_id': '958D1', 'name': 'Hyperspace Jump (easy)', 'tags': ['expression parsing', 'math'], 'dif': '1500'}
{'pro_id': '958C3', 'name': 'Encryption (hard)', 'tags': ['data structures', 'dp'], 'dif': '2600'}
{'pro_id': '958C2', 'name': 'Encryption (medium)', 'tags': ['dp'], 'dif': '2100'}
{'pro_id': '958C1', 'name': 'Encryption (easy)', 'tags': ['brute force'], 'dif': '1400'}
{'pro_id': '958B2', 'name': 'Maximum Control (medium)', 'tags': ['data structures', 'dfs and similar', 'graphs', 'greedy', 'trees'], 'dif': '2400'}
{'pro_id': '958B1', 'name': 'Maximum Control (easy)', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '958A3', 'name': 'Death Stars (hard)', 'tags': [], 'dif': '3100'}
{'pro_id': '958A2', 'name': 'Death Stars (medium)', 'tags': ['hashing', 'strings'], 'dif': '2100'}
{'pro_id': '958A1', 'name': 'Death Stars (easy)', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '957A', 'name': 'Tritonic Iridescence', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '955F', 'name': 'Heaps', 'tags': ['dp', 'trees'], 'dif': '2800'}
{'pro_id': '955E', 'name': 'Icicles', 'tags': [], 'dif': '2900'}
{'pro_id': '955D', 'name': 'Scissors', 'tags': ['brute force', 'strings'], 'dif': '2700'}
{'pro_id': '955C', 'name': 'Sad powers', 'tags': ['binary search', 'math', 'number theory'], 'dif': '2100'}
{'pro_id': '955B', 'name': 'Not simply beatiful strings', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '955A', 'name': 'Feed the cat', 'tags': ['greedy', 'math'], 'dif': '1100'}
{'pro_id': '954I', 'name': 'Yet Another String Matching Problem', 'tags': ['fft', 'math'], 'dif': '2600'}
{'pro_id': '954H', 'name': 'Path Counting', 'tags': ['combinatorics', 'dp'], 'dif': '2500'}
{'pro_id': '954G', 'name': 'Castle Defense', 'tags': ['binary search', 'data structures', 'greedy', 'two pointers'], 'dif': '2100'}
{'pro_id': '954F', 'name': "Runner's Problem", 'tags': ['dp', 'matrices', 'sortings'], 'dif': '2300'}
{'pro_id': '954E', 'name': 'Water Taps', 'tags': ['binary search', 'greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '954D', 'name': 'Fight Against Traffic', 'tags': ['dfs and similar', 'graphs', 'shortest paths'], 'dif': '1600'}
{'pro_id': '954C', 'name': 'Matrix Walk', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '954B', 'name': 'String Typing', 'tags': ['implementation', 'strings'], 'dif': '1400'}
{'pro_id': '954A', 'name': 'Diagonal Walking', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '952G', 'name': 'Puzzling Language', 'tags': ['constructive algorithms'], 'dif': '2500'}
{'pro_id': '952F', 'name': '2 + 2 != 4', 'tags': [], 'dif': '2700'}
{'pro_id': '952E', 'name': 'Cheese Board', 'tags': [], 'dif': '2200'}
{'pro_id': '952D', 'name': "I'm Feeling Lucky!", 'tags': ['probabilities'], 'dif': '2000'}
{'pro_id': '952C', 'name': 'Ravioli Sort', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '952B', 'name': 'A Map of the Cat', 'tags': ['brute force'], 'dif': '1800'}
{'pro_id': '952A', 'name': 'Quirky Quantifiers', 'tags': ['math'], 'dif': '800'}
{'pro_id': '950B', 'name': 'Intercepted Message', 'tags': ['greedy', 'implementation'], 'dif': '1100'}
{'pro_id': '950A', 'name': 'Left-handers, Right-handers and Ambidexters', 'tags': ['implementation', 'math'], 'dif': '900'}
{'pro_id': '949F', 'name': 'Astronomy', 'tags': ['geometry', 'probabilities'], 'dif': '3200'}
{'pro_id': '949E', 'name': 'Binary Cards', 'tags': ['brute force'], 'dif': '2700'}
{'pro_id': '949D', 'name': 'Curfew', 'tags': ['binary search', 'brute force', 'greedy', 'sortings'], 'dif': '2400'}
{'pro_id': '949C', 'name': 'Data Center Maintenance', 'tags': ['dfs and similar', 'graphs'], 'dif': '2000'}
{'pro_id': '949B', 'name': 'A Leapfrog in the Array', 'tags': ['constructive algorithms', 'math'], 'dif': '1700'}
{'pro_id': '949A', 'name': 'Zebras', 'tags': ['greedy'], 'dif': '1600'}
{'pro_id': '948A', 'name': 'Protect Sheep', 'tags': ['brute force', 'dfs and similar', 'graphs', 'implementation'], 'dif': '1000'}
{'pro_id': '946G', 'name': 'Almost Increasing Array', 'tags': ['data structures', 'dp'], 'dif': '2600'}
{'pro_id': '946F', 'name': 'Fibonacci String Subsequences', 'tags': ['combinatorics', 'dp', 'matrices'], 'dif': '2500'}
{'pro_id': '946E', 'name': 'Largest Beautiful Number', 'tags': ['greedy', 'implementation'], 'dif': '2200'}
{'pro_id': '946D', 'name': 'Timetable', 'tags': ['dp'], 'dif': '1800'}
{'pro_id': '946C', 'name': 'String Transformation', 'tags': ['greedy', 'strings'], 'dif': '1300'}
{'pro_id': '946B', 'name': 'Weird Subtraction Process', 'tags': ['math', 'number theory'], 'dif': '1200'}
{'pro_id': '946A', 'name': 'Partition', 'tags': ['greedy'], 'dif': '800'}
{'pro_id': '940F', 'name': 'Machine Learning', 'tags': ['brute force', 'data structures'], 'dif': '2600'}
{'pro_id': '940E', 'name': 'Cashback', 'tags': ['data structures', 'dp', 'greedy', 'math'], 'dif': '2000'}
{'pro_id': '940D', 'name': 'Alena And The Heater', 'tags': ['binary search', 'implementation'], 'dif': '1600'}
{'pro_id': '940C', 'name': 'Phone Numbers', 'tags': ['constructive algorithms', 'implementation', 'strings'], 'dif': '1500'}
{'pro_id': '940B', 'name': 'Our Tanya is Crying Out Loud', 'tags': ['dp', 'greedy'], 'dif': '1400'}
{'pro_id': '940A', 'name': 'Points on the line', 'tags': ['brute force', 'greedy', 'sortings'], 'dif': '1300'}
{'pro_id': '939F', 'name': 'Cutlet', 'tags': ['data structures', 'dp'], 'dif': '2700'}
{'pro_id': '939E', 'name': 'Maximize!', 'tags': ['binary search', 'greedy', 'ternary search', 'two pointers'], 'dif': '1900'}
{'pro_id': '939D', 'name': 'Love Rescue', 'tags': ['dfs and similar', 'dsu', 'graphs', 'greedy', 'strings'], 'dif': '1600'}
{'pro_id': '939C', 'name': 'Convenient For Everybody', 'tags': ['binary search', 'two pointers'], 'dif': '1600'}
{'pro_id': '939B', 'name': 'Hamster Farm', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '939A', 'name': 'Love Triangle', 'tags': ['graphs'], 'dif': '800'}
{'pro_id': '938G', 'name': 'Shortest Path Queries', 'tags': ['bitmasks', 'data structures', 'dsu', 'graphs'], 'dif': '2900'}
{'pro_id': '938F', 'name': 'Erasing Substrings', 'tags': ['bitmasks', 'dp', 'greedy'], 'dif': '2600'}
{'pro_id': '938E', 'name': 'Max History', 'tags': ['combinatorics', 'math'], 'dif': '2300'}
{'pro_id': '938D', 'name': 'Buy a Ticket', 'tags': ['data structures', 'graphs', 'shortest paths'], 'dif': '2000'}
{'pro_id': '938C', 'name': 'Constructing Tests', 'tags': ['binary search', 'brute force', 'constructive algorithms'], 'dif': '1700'}
{'pro_id': '938B', 'name': 'Run For Your Prize', 'tags': ['brute force', 'greedy'], 'dif': '1100'}
{'pro_id': '938A', 'name': 'Word Correction', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '937B', 'name': 'Vile Grasshoppers', 'tags': ['brute force', 'math', 'number theory'], 'dif': '1500'}
{'pro_id': '937A', 'name': 'Olympiad', 'tags': ['implementation', 'sortings'], 'dif': '800'}
{'pro_id': '936E', 'name': 'Iqea', 'tags': ['data structures', 'dfs and similar', 'divide and conquer', 'dsu', 'shortest paths', 'trees'], 'dif': '3300'}
{'pro_id': '936D', 'name': 'World of Tank', 'tags': ['dp', 'greedy'], 'dif': '3000'}
{'pro_id': '936C', 'name': 'Lock Puzzle', 'tags': ['constructive algorithms', 'implementation', 'strings'], 'dif': '2500'}
{'pro_id': '936B', 'name': 'Sleepy Game', 'tags': ['dfs and similar', 'dp', 'games', 'graphs'], 'dif': '2100'}
{'pro_id': '936A', 'name': 'Save Energy!', 'tags': ['binary search', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '935F', 'name': 'Fafa and Array', 'tags': ['data structures', 'greedy'], 'dif': '2800'}
{'pro_id': '935E', 'name': 'Fafa and Ancient Mathematics', 'tags': ['dfs and similar', 'dp', 'trees'], 'dif': '2500'}
{'pro_id': '935D', 'name': 'Fafa and Ancient Alphabet', 'tags': ['math', 'probabilities'], 'dif': '1900'}
{'pro_id': '935C', 'name': 'Fifa and Fafa', 'tags': ['geometry'], 'dif': '1700'}
{'pro_id': '935B', 'name': 'Fafa and the Gates', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '935A', 'name': 'Fafa and his Company', 'tags': ['brute force', 'implementation'], 'dif': '600'}
{'pro_id': '934B', 'name': 'A Prosperous Lot', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1200'}
{'pro_id': '934A', 'name': 'A Compatible Pair', 'tags': ['brute force', 'games'], 'dif': '1400'}
{'pro_id': '933E', 'name': 'A Preponderant Reunion', 'tags': ['constructive algorithms', 'dp'], 'dif': '3100'}
{'pro_id': '933D', 'name': 'A Creative Cutout', 'tags': ['brute force', 'combinatorics', 'math'], 'dif': '2900'}
{'pro_id': '933C', 'name': 'A Colourful Prospect', 'tags': ['geometry', 'graphs'], 'dif': '2400'}
{'pro_id': '933B', 'name': 'A Determined Cleanup', 'tags': ['math'], 'dif': '2100'}
{'pro_id': '933A', 'name': 'A Twisty Movement', 'tags': ['dp'], 'dif': '1800'}
{'pro_id': '932G', 'name': 'Palindrome Partition', 'tags': ['dp', 'string suffix structures', 'strings'], 'dif': '2900'}
{'pro_id': '932F', 'name': 'Escape Through Leaf', 'tags': ['data structures', 'dp', 'geometry'], 'dif': '2700'}
{'pro_id': '932E', 'name': 'Team Work', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2400'}
{'pro_id': '932D', 'name': 'Tree', 'tags': ['binary search', 'dp', 'trees'], 'dif': '2200'}
{'pro_id': '932C', 'name': 'Permutation Cycle', 'tags': ['brute force', 'constructive algorithms'], 'dif': '1600'}
{'pro_id': '932B', 'name': 'Recursive Queries', 'tags': ['binary search', 'data structures', 'dfs and similar'], 'dif': '1300'}
{'pro_id': '932A', 'name': 'Palindromic Supersequence', 'tags': ['constructive algorithms'], 'dif': '800'}
{'pro_id': '931C', 'name': 'Laboratory Work', 'tags': ['implementation', 'math'], 'dif': '1700'}
{'pro_id': '931B', 'name': 'World Cup', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1200'}
{'pro_id': '931A', 'name': 'Friends Meeting', 'tags': ['brute force', 'greedy', 'implementation', 'math'], 'dif': '800'}
{'pro_id': '930E', 'name': 'Coins Exhibition', 'tags': ['data structures', 'dp', 'math'], 'dif': '2700'}
{'pro_id': '930D', 'name': 'Game with Tokens', 'tags': ['data structures', 'games', 'implementation'], 'dif': '2600'}
{'pro_id': '930C', 'name': 'Teodor is not a liar!', 'tags': ['data structures', 'dp'], 'dif': '2100'}
{'pro_id': '930B', 'name': 'Game with String', 'tags': ['implementation', 'probabilities', 'strings'], 'dif': '1800'}
{'pro_id': '930A', 'name': 'Peculiar apple-tree', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '1500'}
{'pro_id': '929D', 'name': 'Пограничные врата', 'tags': [], 'dif': '2600'}
{'pro_id': '929C', 'name': 'Красивая команда', 'tags': ['*special problem', 'combinatorics', 'math'], 'dif': '2000'}
{'pro_id': '929B', 'name': 'Места в самолёте', 'tags': ['*special problem', 'implementation'], 'dif': '1700'}
{'pro_id': '929A', 'name': 'Прокат велосипедов', 'tags': ['*special problem', 'greedy', 'implementation'], 'dif': '1600'}
{'pro_id': '928D', 'name': 'Autocompletion', 'tags': ['*special problem', 'strings', 'trees'], 'dif': '2400'}
{'pro_id': '928C', 'name': 'Dependency management', 'tags': ['*special problem', 'graphs', 'implementation'], 'dif': '2300'}
{'pro_id': '928B', 'name': 'Chat', 'tags': ['*special problem', 'dp'], 'dif': '1800'}
{'pro_id': '928A', 'name': 'Login Verification', 'tags': ['*special problem', 'strings'], 'dif': '1600'}
{'pro_id': '927A', 'name': 'BuberPool Taxi Optimization', 'tags': [], 'dif': '2800'}
{'pro_id': '926J', 'name': 'Segments', 'tags': ['data structures'], 'dif': '2500'}
{'pro_id': '926I', 'name': 'A Vital Problem', 'tags': [], 'dif': '1900'}
{'pro_id': '926H', 'name': 'Endless Roses Most Beautiful', 'tags': [], 'dif': '2300'}
{'pro_id': '926G', 'name': 'Large Bouquets', 'tags': [], 'dif': '1700'}
{'pro_id': '926F', 'name': 'Mobile Communications', 'tags': [], 'dif': '2400'}
{'pro_id': '926E', 'name': 'Merge Equal Elements', 'tags': [], 'dif': '2100'}
{'pro_id': '926D', 'name': 'Choose Place', 'tags': [], 'dif': '1800'}
{'pro_id': '926C', 'name': 'Is This a Zebra?', 'tags': [], 'dif': '1600'}
{'pro_id': '926B', 'name': 'Add Points', 'tags': [], 'dif': '1800'}
{'pro_id': '926A', 'name': '2-3-numbers', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '925F', 'name': 'Parametric Circulation', 'tags': ['binary search', 'flows'], 'dif': '3300'}
{'pro_id': '925E', 'name': 'May Holidays', 'tags': ['data structures', 'trees'], 'dif': '2900'}
{'pro_id': '925D', 'name': 'Aztec Catacombs', 'tags': ['constructive algorithms'], 'dif': '2700'}
{'pro_id': '925C', 'name': 'Big Secret', 'tags': ['constructive algorithms', 'math'], 'dif': '2200'}
{'pro_id': '925B', 'name': 'Resource Distribution', 'tags': ['binary search', 'implementation', 'sortings'], 'dif': '1800'}
{'pro_id': '925A', 'name': 'Stairs and Elevators', 'tags': ['binary search'], 'dif': '1700'}
{'pro_id': '924F', 'name': 'Minimal Subset Difference', 'tags': ['dp'], 'dif': '3400'}
{'pro_id': '924E', 'name': 'Wardrobe', 'tags': [], 'dif': '2600'}
{'pro_id': '924D', 'name': 'Contact ATC', 'tags': [], 'dif': '2500'}
{'pro_id': '924C', 'name': 'Riverside Curio', 'tags': ['data structures', 'dp', 'greedy'], 'dif': '1800'}
{'pro_id': '924B', 'name': 'Three-level Laser', 'tags': ['binary search', 'greedy', 'two pointers'], 'dif': '1600'}
{'pro_id': '924A', 'name': 'Mystical Mosaic', 'tags': ['greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '923F', 'name': 'Public Service', 'tags': ['constructive algorithms', 'graphs', 'trees'], 'dif': '2900'}
{'pro_id': '923E', 'name': 'Perpetual Subtraction', 'tags': ['fft', 'math', 'matrices'], 'dif': '3100'}
{'pro_id': '923D', 'name': 'Picking Strings', 'tags': ['constructive algorithms', 'implementation', 'strings'], 'dif': '2500'}
{'pro_id': '923C', 'name': 'Perfect Security', 'tags': ['data structures', 'greedy', 'strings', 'trees'], 'dif': '1900'}
{'pro_id': '923B', 'name': 'Producing Snow', 'tags': ['binary search', 'data structures'], 'dif': '1600'}
{'pro_id': '923A', 'name': 'Primal Sport', 'tags': ['math', 'number theory'], 'dif': '1700'}
{'pro_id': '922F', 'name': 'Divisibility', 'tags': ['constructive algorithms', 'dp', 'greedy', 'number theory'], 'dif': '2500'}
{'pro_id': '922E', 'name': 'Birds', 'tags': ['dp'], 'dif': '2300'}
{'pro_id': '922D', 'name': 'Robot Vacuum Cleaner', 'tags': ['greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '922C', 'name': 'Cave Painting', 'tags': ['brute force', 'number theory'], 'dif': '1600'}
{'pro_id': '922B', 'name': 'Magic Forest', 'tags': ['brute force'], 'dif': '1300'}
{'pro_id': '922A', 'name': 'Cloning Toys', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '92114', 'name': 'Labyrinth-14', 'tags': [], 'dif': '3200'}
{'pro_id': '92113', 'name': 'Labyrinth-13', 'tags': [], 'dif': '3200'}
{'pro_id': '92112', 'name': 'Labyrinth-12', 'tags': [], 'dif': '3200'}
{'pro_id': '92111', 'name': 'Labyrinth-11', 'tags': [], 'dif': '3200'}
{'pro_id': '92110', 'name': 'Labyrinth-10', 'tags': [], 'dif': '3200'}
{'pro_id': '92109', 'name': 'Labyrinth-9', 'tags': [], 'dif': '3200'}
{'pro_id': '92108', 'name': 'Labyrinth-8', 'tags': [], 'dif': '3200'}
{'pro_id': '92107', 'name': 'Labyrinth-7', 'tags': [], 'dif': '3200'}
{'pro_id': '92106', 'name': 'Labyrinth-6', 'tags': [], 'dif': '3200'}
{'pro_id': '92105', 'name': 'Labyrinth-5', 'tags': [], 'dif': '3200'}
{'pro_id': '92104', 'name': 'Labyrinth-4', 'tags': [], 'dif': '3200'}
{'pro_id': '92103', 'name': 'Labyrinth-3', 'tags': [], 'dif': '3200'}
{'pro_id': '92102', 'name': 'Labyrinth-2', 'tags': [], 'dif': '3200'}
{'pro_id': '92101', 'name': 'Labyrinth-1', 'tags': [], 'dif': '3200'}
{'pro_id': '920G', 'name': 'List Of Integers', 'tags': ['binary search', 'bitmasks', 'brute force', 'combinatorics', 'math', 'number theory'], 'dif': '2300'}
{'pro_id': '920F', 'name': 'SUM and REPLACE', 'tags': ['brute force', 'data structures', 'dsu', 'number theory'], 'dif': '2000'}
{'pro_id': '920E', 'name': 'Connected Components?', 'tags': ['data structures', 'dfs and similar', 'dsu', 'graphs'], 'dif': '2100'}
{'pro_id': '920D', 'name': 'Tanks', 'tags': ['dp', 'greedy', 'implementation'], 'dif': '2600'}
{'pro_id': '920C', 'name': 'Swap Adjacent Elements', 'tags': ['dfs and similar', 'greedy', 'math', 'sortings', 'two pointers'], 'dif': '1500'}
{'pro_id': '920B', 'name': 'Tea Queue', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '920A', 'name': 'Water The Garden', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '919F', 'name': 'A Game With Numbers', 'tags': ['games', 'graphs', 'shortest paths'], 'dif': '2800'}
{'pro_id': '919E', 'name': 'Congruence Equation', 'tags': ['chinese remainder theorem', 'math', 'number theory'], 'dif': '2100'}
{'pro_id': '919D', 'name': 'Substring', 'tags': ['dfs and similar', 'dp', 'graphs'], 'dif': '1700'}
{'pro_id': '919C', 'name': 'Seat Arrangements', 'tags': ['brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '919B', 'name': 'Perfect Number', 'tags': ['binary search', 'brute force', 'dp', 'implementation', 'number theory'], 'dif': '1100'}
{'pro_id': '919A', 'name': 'Supermarket', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '900'}
{'pro_id': '918B', 'name': 'Radio Station', 'tags': ['implementation', 'strings'], 'dif': '900'}
{'pro_id': '918A', 'name': 'Eleven', 'tags': ['brute force', 'implementation'], 'dif': '800'}
{'pro_id': '917E', 'name': 'Upside Down', 'tags': ['data structures', 'string suffix structures', 'strings', 'trees'], 'dif': '3000'}
{'pro_id': '917D', 'name': 'Stranger Trees', 'tags': ['dp', 'math', 'matrices', 'trees'], 'dif': '2600'}
{'pro_id': '917C', 'name': 'Pollywog', 'tags': ['combinatorics', 'dp', 'matrices'], 'dif': '2800'}
{'pro_id': '917B', 'name': 'MADMAX', 'tags': ['dfs and similar', 'dp', 'games', 'graphs'], 'dif': '1800'}
{'pro_id': '917A', 'name': 'The Monster', 'tags': ['dp', 'greedy', 'implementation', 'math'], 'dif': '1900'}
{'pro_id': '916E', 'name': 'Jamie and Tree', 'tags': ['data structures', 'trees'], 'dif': '2600'}
{'pro_id': '916D', 'name': 'Jamie and To-do List', 'tags': ['data structures', 'interactive', 'trees'], 'dif': '2600'}
{'pro_id': '916C', 'name': 'Jamie and Interesting Graph', 'tags': ['constructive algorithms', 'graphs', 'shortest paths'], 'dif': '1600'}
{'pro_id': '916B', 'name': 'Jamie and Binary Sequence (changed after round)', 'tags': ['bitmasks', 'greedy', 'math'], 'dif': '1700'}
{'pro_id': '916A', 'name': 'Jamie and Alarm Snooze', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1200'}
{'pro_id': '915G', 'name': 'Coprime Arrays', 'tags': ['math', 'number theory'], 'dif': '2500'}
{'pro_id': '915F', 'name': 'Imbalance Value of a Tree', 'tags': ['data structures', 'dsu', 'graphs', 'trees'], 'dif': '2500'}
{'pro_id': '915E', 'name': 'Physical Education Lessons', 'tags': ['data structures', 'implementation', 'sortings'], 'dif': '2300'}
{'pro_id': '915D', 'name': 'Almost Acyclic Graph', 'tags': ['dfs and similar', 'graphs'], 'dif': '2200'}
{'pro_id': '915C', 'name': 'Permute Digits', 'tags': ['dp', 'greedy'], 'dif': '1700'}
{'pro_id': '915B', 'name': 'Browser', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '915A', 'name': 'Garden', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '914H', 'name': "Ember and Storm's Tree Game", 'tags': ['combinatorics', 'dp', 'games', 'trees'], 'dif': '2900'}
{'pro_id': '914G', 'name': 'Sum the Fibonacci', 'tags': ['bitmasks', 'divide and conquer', 'dp', 'fft', 'math'], 'dif': '2500'}
{'pro_id': '914F', 'name': 'Substrings in a String', 'tags': ['bitmasks', 'brute force', 'data structures', 'string suffix structures', 'strings'], 'dif': '2900'}
{'pro_id': '914E', 'name': 'Palindromes in a Tree', 'tags': ['bitmasks', 'data structures', 'divide and conquer', 'trees'], 'dif': '2400'}
{'pro_id': '914D', 'name': 'Bash and a Tough Math Puzzle', 'tags': ['data structures', 'number theory'], 'dif': '1900'}
{'pro_id': '914C', 'name': 'Travelling Salesman and Special Numbers', 'tags': ['brute force', 'combinatorics', 'dp'], 'dif': '1800'}
{'pro_id': '914B', 'name': 'Conan and Agasa play a Card Game', 'tags': ['games', 'greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '914A', 'name': 'Perfect Squares', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1100'}
{'pro_id': '913H', 'name': "Don't Exceed", 'tags': ['math', 'probabilities'], 'dif': '3400'}
{'pro_id': '913G', 'name': 'Power Substring', 'tags': ['math', 'number theory'], 'dif': '3100'}
{'pro_id': '913F', 'name': 'Strongly Connected Tournament', 'tags': ['dp', 'graphs', 'math', 'probabilities'], 'dif': '2700'}
{'pro_id': '913E', 'name': 'Logical Expression', 'tags': ['bitmasks', 'dp', 'shortest paths'], 'dif': '2400'}
{'pro_id': '913D', 'name': 'Too Easy Problems', 'tags': ['binary search', 'brute force', 'data structures', 'greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '913C', 'name': 'Party Lemonade', 'tags': ['bitmasks', 'dp', 'greedy'], 'dif': '1600'}
{'pro_id': '913B', 'name': 'Christmas Spruce', 'tags': ['implementation', 'trees'], 'dif': '1200'}
{'pro_id': '913A', 'name': 'Modular Exponentiation', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '912E', 'name': 'Prime Gift', 'tags': ['binary search', 'dfs and similar', 'math', 'meet-in-the-middle', 'number theory', 'two pointers'], 'dif': '2600'}
{'pro_id': '912D', 'name': 'Fishes', 'tags': ['data structures', 'graphs', 'greedy', 'probabilities', 'shortest paths'], 'dif': '2100'}
{'pro_id': '912C', 'name': 'Perun, Ult!', 'tags': ['brute force', 'greedy', 'sortings'], 'dif': '2500'}
{'pro_id': '912B', 'name': "New Year's Eve", 'tags': ['bitmasks', 'constructive algorithms', 'number theory'], 'dif': '1400'}
{'pro_id': '912A', 'name': 'Tricky Alchemy', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '911G', 'name': 'Mass Change Queries', 'tags': ['data structures'], 'dif': '2600'}
{'pro_id': '911F', 'name': 'Tree Destruction', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs', 'greedy', 'trees'], 'dif': '2500'}
{'pro_id': '911E', 'name': 'Stack Sorting', 'tags': ['constructive algorithms', 'data structures', 'greedy', 'implementation'], 'dif': '2000'}
{'pro_id': '911D', 'name': 'Inversion Counting', 'tags': ['brute force', 'math'], 'dif': '1700'}
{'pro_id': '911C', 'name': 'Three Garlands', 'tags': ['brute force', 'constructive algorithms'], 'dif': '1400'}
{'pro_id': '911B', 'name': 'Two Cakes', 'tags': ['binary search', 'brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '911A', 'name': 'Nearest Minimums', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '910C', 'name': 'Minimum Sum', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '1700'}
{'pro_id': '910B', 'name': 'Door Frames', 'tags': ['greedy', 'implementation'], 'dif': '1600'}
{'pro_id': '910A', 'name': 'The Way to Home', 'tags': ['dfs and similar', 'dp', 'greedy', 'implementation'], 'dif': '1100'}
{'pro_id': '909F', 'name': 'AND-permutations', 'tags': ['constructive algorithms'], 'dif': '2600'}
{'pro_id': '909E', 'name': 'Coprocessor', 'tags': ['dfs and similar', 'dp', 'graphs', 'greedy'], 'dif': '2100'}
{'pro_id': '909D', 'name': 'Colorful Points', 'tags': ['data structures', 'greedy', 'implementation'], 'dif': '2100'}
{'pro_id': '909C', 'name': 'Python Indentation', 'tags': ['dp'], 'dif': '1800'}
{'pro_id': '909B', 'name': 'Segments', 'tags': ['constructive algorithms', 'math'], 'dif': '1300'}
{'pro_id': '909A', 'name': 'Generate Login', 'tags': ['brute force', 'greedy', 'sortings'], 'dif': '1100'}
{'pro_id': '908H', 'name': 'New Year and Boolean Bridges', 'tags': [], 'dif': '3000'}
{'pro_id': '908G', 'name': 'New Year and Original Order', 'tags': ['dp', 'math'], 'dif': '2700'}
{'pro_id': '908F', 'name': 'New Year and Rainbow Roads', 'tags': ['graphs', 'greedy', 'implementation'], 'dif': '2400'}
{'pro_id': '908E', 'name': 'New Year and Entity Enumeration', 'tags': ['bitmasks', 'combinatorics', 'dp', 'math'], 'dif': '2400'}
{'pro_id': '908D', 'name': 'New Year and Arbitrary Arrangement', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2200'}
{'pro_id': '908C', 'name': 'New Year and Curling', 'tags': ['brute force', 'geometry', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '908B', 'name': 'New Year and Buggy Bot', 'tags': ['brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '908A', 'name': 'New Year and Counting Cards', 'tags': ['brute force', 'implementation'], 'dif': '800'}
{'pro_id': '907B', 'name': 'Tic-Tac-Toe', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '907A', 'name': 'Masha and Bears', 'tags': ['brute force', 'implementation'], 'dif': '1400'}
{'pro_id': '906E', 'name': 'Reverses', 'tags': ['dp', 'string suffix structures', 'strings'], 'dif': '3200'}
{'pro_id': '906D', 'name': 'Power Tower', 'tags': ['chinese remainder theorem', 'math', 'number theory'], 'dif': '2600'}
{'pro_id': '906C', 'name': 'Party', 'tags': ['bitmasks', 'brute force', 'dp', 'graphs'], 'dif': '2300'}
{'pro_id': '906B', 'name': 'Seating of Students', 'tags': ['brute force', 'constructive algorithms', 'math'], 'dif': '2300'}
{'pro_id': '906A', 'name': 'Shockers', 'tags': ['implementation', 'strings'], 'dif': '1600'}
{'pro_id': '903G', 'name': 'Yet Another Maxflow Problem', 'tags': ['data structures', 'flows', 'graphs'], 'dif': '2700'}
{'pro_id': '903F', 'name': 'Clear The Matrix', 'tags': ['bitmasks', 'dp'], 'dif': '2400'}
{'pro_id': '903E', 'name': 'Swapping Characters', 'tags': ['brute force', 'hashing', 'implementation', 'strings'], 'dif': '2200'}
{'pro_id': '903D', 'name': 'Almost Difference', 'tags': ['data structures', 'math'], 'dif': '2200'}
{'pro_id': '903C', 'name': 'Boxes Packing', 'tags': ['greedy'], 'dif': '1200'}
{'pro_id': '903B', 'name': 'The Modcrab', 'tags': ['greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '903A', 'name': 'Hungry Student Problem', 'tags': ['greedy', 'implementation'], 'dif': '900'}
{'pro_id': '902B', 'name': 'Coloring a Tree', 'tags': ['dfs and similar', 'dsu', 'greedy'], 'dif': '1300'}
{'pro_id': '902A', 'name': 'Visiting a Friend', 'tags': ['greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '901E', 'name': 'Cyclic Cipher', 'tags': ['fft', 'math'], 'dif': '3300'}
{'pro_id': '901D', 'name': 'Weighting a Tree', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs'], 'dif': '2700'}
{'pro_id': '901C', 'name': 'Bipartite Segments', 'tags': ['binary search', 'data structures', 'dfs and similar', 'dsu', 'graphs', 'two pointers'], 'dif': '2500'}
{'pro_id': '901B', 'name': 'GCD of Polynomials', 'tags': ['constructive algorithms', 'math'], 'dif': '2100'}
{'pro_id': '901A', 'name': 'Hashing Trees', 'tags': ['constructive algorithms', 'trees'], 'dif': '1500'}
{'pro_id': '900E', 'name': 'Maximum Questions', 'tags': ['data structures', 'dp', 'strings'], 'dif': '2300'}
{'pro_id': '900D', 'name': 'Unusual Sequences', 'tags': ['bitmasks', 'combinatorics', 'dp', 'math', 'number theory'], 'dif': '2100'}
{'pro_id': '900C', 'name': 'Remove Extra One', 'tags': ['brute force', 'data structures', 'math'], 'dif': '1700'}
{'pro_id': '900B', 'name': 'Position in Fraction', 'tags': ['math', 'number theory'], 'dif': '1300'}
{'pro_id': '900A', 'name': 'Find Extra One', 'tags': ['geometry', 'implementation'], 'dif': '900'}
{'pro_id': '899F', 'name': 'Letters Removing', 'tags': ['data structures', 'strings'], 'dif': '2200'}
{'pro_id': '899E', 'name': 'Segments Removal', 'tags': ['data structures', 'dsu', 'flows', 'implementation', 'two pointers'], 'dif': '2100'}
{'pro_id': '899D', 'name': 'Shovel Sale', 'tags': ['constructive algorithms', 'math'], 'dif': '1800'}
{'pro_id': '899C', 'name': 'Dividing the numbers', 'tags': ['constructive algorithms', 'graphs', 'math'], 'dif': '1300'}
{'pro_id': '899B', 'name': 'Months and Years', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '899A', 'name': 'Splitting in Teams', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '900'}
{'pro_id': '898F', 'name': 'Restoring the Expression', 'tags': ['brute force', 'hashing', 'math'], 'dif': '2300'}
{'pro_id': '898E', 'name': 'Squares and not squares', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1600'}
{'pro_id': '898D', 'name': 'Alarm Clock', 'tags': ['greedy'], 'dif': '1700'}
{'pro_id': '898C', 'name': 'Phone Numbers', 'tags': ['implementation', 'strings'], 'dif': '1400'}
{'pro_id': '898B', 'name': 'Proper Nutrition', 'tags': ['brute force', 'implementation', 'number theory'], 'dif': '1300'}
{'pro_id': '898A', 'name': 'Rounding', 'tags': ['implementation', 'math'], 'dif': '800'}
{'pro_id': '897B', 'name': "Chtholly's request", 'tags': ['brute force'], 'dif': '1300'}
{'pro_id': '897A', 'name': 'Scarborough Fair', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '896E', 'name': 'Welcome home, Chtholly', 'tags': ['data structures', 'dsu'], 'dif': '3100'}
{'pro_id': '896D', 'name': 'Nephren Runs a Cinema', 'tags': ['chinese remainder theorem', 'combinatorics', 'math', 'number theory'], 'dif': '2800'}
{'pro_id': '896C', 'name': 'Willem, Chtholly and Seniorious', 'tags': ['data structures', 'probabilities'], 'dif': '2700'}
{'pro_id': '896B', 'name': 'Ithea Plays With Chtholly', 'tags': ['binary search', 'constructive algorithms', 'games', 'greedy', 'interactive'], 'dif': '2000'}
{'pro_id': '896A', 'name': 'Nephren gives a riddle', 'tags': ['binary search', 'dfs and similar'], 'dif': '1700'}
{'pro_id': '895E', 'name': 'Eyes Closed', 'tags': ['data structures', 'probabilities'], 'dif': '2500'}
{'pro_id': '895D', 'name': 'String Mark', 'tags': ['combinatorics', 'math', 'strings'], 'dif': '2300'}
{'pro_id': '895C', 'name': 'Square Subsets', 'tags': ['bitmasks', 'combinatorics', 'dp', 'math'], 'dif': '2000'}
{'pro_id': '895B', 'name': 'XK Segments', 'tags': ['binary search', 'math', 'sortings', 'two pointers'], 'dif': '1700'}
{'pro_id': '895A', 'name': 'Pizza Separation', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '894E', 'name': 'Ralph and Mushrooms', 'tags': ['dp', 'graphs'], 'dif': '2400'}
{'pro_id': '894D', 'name': 'Ralph And His Tour in Binary Country', 'tags': ['brute force', 'data structures', 'trees'], 'dif': '2300'}
{'pro_id': '894C', 'name': 'Marco and GCD Sequence', 'tags': ['constructive algorithms', 'math'], 'dif': '1800'}
{'pro_id': '894B', 'name': 'Ralph And His Magic Field', 'tags': ['combinatorics', 'constructive algorithms', 'math', 'number theory'], 'dif': '1800'}
{'pro_id': '894A', 'name': 'QAQ', 'tags': ['brute force', 'dp'], 'dif': '800'}
{'pro_id': '893F', 'name': 'Subtree Minimum Query', 'tags': ['data structures', 'trees'], 'dif': '2300'}
{'pro_id': '893E', 'name': 'Counting Arrays', 'tags': ['combinatorics', 'dp', 'math', 'number theory'], 'dif': '2000'}
{'pro_id': '893D', 'name': 'Credit Card', 'tags': ['data structures', 'dp', 'greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '893C', 'name': 'Rumor', 'tags': ['dfs and similar', 'graphs', 'greedy'], 'dif': '1300'}
{'pro_id': '893B', 'name': 'Beautiful Divisors', 'tags': ['brute force', 'implementation'], 'dif': '1000'}
{'pro_id': '893A', 'name': 'Chess For Three', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '892B', 'name': 'Wrath', 'tags': ['greedy', 'implementation', 'two pointers'], 'dif': '1200'}
{'pro_id': '892A', 'name': 'Greed', 'tags': ['greedy', 'implementation'], 'dif': '900'}
{'pro_id': '891E', 'name': 'Lust', 'tags': ['combinatorics', 'math', 'matrices'], 'dif': '2800'}
{'pro_id': '891D', 'name': 'Sloth', 'tags': ['dfs and similar', 'dp', 'graph matchings', 'trees'], 'dif': '3000'}
{'pro_id': '891C', 'name': 'Envy', 'tags': ['data structures', 'dsu', 'graphs'], 'dif': '2500'}
{'pro_id': '891B', 'name': 'Gluttony', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2000'}
{'pro_id': '891A', 'name': 'Pride', 'tags': ['brute force', 'dp', 'greedy', 'math', 'number theory'], 'dif': '1600'}
{'pro_id': '889E', 'name': 'Mod Mod Mod', 'tags': ['binary search', 'dp', 'math'], 'dif': '3100'}
{'pro_id': '888G', 'name': 'Xor-MST', 'tags': ['bitmasks', 'constructive algorithms', 'data structures'], 'dif': '2300'}
{'pro_id': '888F', 'name': 'Connecting Vertices', 'tags': ['dp', 'graphs'], 'dif': '2500'}
{'pro_id': '888E', 'name': 'Maximum Subsequence', 'tags': ['bitmasks', 'divide and conquer', 'meet-in-the-middle'], 'dif': '1800'}
{'pro_id': '888D', 'name': 'Almost Identity Permutations', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '1600'}
{'pro_id': '888C', 'name': 'K-Dominant Character', 'tags': ['binary search', 'implementation', 'two pointers'], 'dif': '1400'}
{'pro_id': '888B', 'name': 'Buggy Robot', 'tags': ['greedy'], 'dif': '1000'}
{'pro_id': '888A', 'name': 'Local Extrema', 'tags': ['brute force', 'implementation'], 'dif': '1600'}
{'pro_id': '887F', 'name': 'Row of Models', 'tags': ['greedy', 'sortings'], 'dif': '2800'}
{'pro_id': '887E', 'name': 'Little Brother', 'tags': ['binary search', 'geometry', 'sortings'], 'dif': '2700'}
{'pro_id': '887D', 'name': 'Ratings and Reality Shows', 'tags': ['data structures', 'two pointers'], 'dif': '2500'}
{'pro_id': '887C', 'name': 'Solution for Cube', 'tags': ['brute force', 'implementation'], 'dif': '1500'}
{'pro_id': '887B', 'name': 'Cubes for Masha', 'tags': ['brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '887A', 'name': 'Div. 64', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '886F', 'name': 'Symmetric Projections', 'tags': ['geometry'], 'dif': '2700'}
{'pro_id': '886E', 'name': 'Maximum Element', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2500'}
{'pro_id': '886D', 'name': 'Restoration of string', 'tags': ['constructive algorithms', 'graphs', 'implementation'], 'dif': '2000'}
{'pro_id': '886C', 'name': 'Petya and Catacombs', 'tags': ['dsu', 'greedy', 'implementation', 'trees'], 'dif': '1300'}
{'pro_id': '886B', 'name': 'Vlad and Cafes', 'tags': [], 'dif': '1000'}
{'pro_id': '886A', 'name': 'ACM ICPC', 'tags': ['brute force'], 'dif': '1100'}
{'pro_id': '884F', 'name': 'Anti-Palindromize', 'tags': ['flows', 'graphs', 'greedy'], 'dif': '2500'}
{'pro_id': '884E', 'name': 'Binary Matrix', 'tags': ['dsu'], 'dif': '2500'}
{'pro_id': '884D', 'name': 'Boxes And Balls', 'tags': ['data structures', 'greedy'], 'dif': '2300'}
{'pro_id': '884C', 'name': 'Bertown Subway', 'tags': ['dfs and similar', 'greedy', 'math'], 'dif': '1500'}
{'pro_id': '884B', 'name': 'Japanese Crosswords Strike Back', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '884A', 'name': 'Book Reading', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '883M', 'name': 'Quadcopter Competition', 'tags': ['greedy', 'math'], 'dif': '1100'}
{'pro_id': '883L', 'name': 'Berland.Taxi', 'tags': ['data structures'], 'dif': '2800'}
{'pro_id': '883K', 'name': 'Road Widening', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '2100'}
{'pro_id': '883J', 'name': 'Renovation', 'tags': ['greedy', 'sortings'], 'dif': '2600'}
{'pro_id': '883I', 'name': 'Photo Processing', 'tags': ['binary search', 'dp'], 'dif': '2000'}
{'pro_id': '883H', 'name': 'Palindromic Cut', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1800'}
{'pro_id': '883G', 'name': 'Orientation of Edges', 'tags': ['graphs'], 'dif': '2000'}
{'pro_id': '883F', 'name': 'Lost in Transliteration', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '883E', 'name': 'Field of Wonders', 'tags': ['implementation', 'strings'], 'dif': '1600'}
{'pro_id': '883D', 'name': 'Packmen Strike Back', 'tags': ['binary search', 'dp'], 'dif': '2800'}
{'pro_id': '883C', 'name': 'Downloading B++', 'tags': ['binary search'], 'dif': '2400'}
{'pro_id': '883B', 'name': 'Berland Army', 'tags': ['constructive algorithms', 'graphs', 'greedy'], 'dif': '2800'}
{'pro_id': '883A', 'name': 'Automatic Door', 'tags': ['implementation'], 'dif': '2300'}
{'pro_id': '879B', 'name': 'Table Tennis', 'tags': ['data structures', 'implementation'], 'dif': '1300'}
{'pro_id': '879A', 'name': "Borya's Diagnosis", 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '878E', 'name': 'Numbers on the blackboard', 'tags': ['combinatorics', 'dp'], 'dif': '3200'}
{'pro_id': '878D', 'name': 'Magic Breeding', 'tags': ['bitmasks'], 'dif': '2900'}
{'pro_id': '878C', 'name': 'Tournament', 'tags': ['data structures', 'graphs'], 'dif': '2800'}
{'pro_id': '878B', 'name': 'Teams Formation', 'tags': ['data structures', 'implementation'], 'dif': '2400'}
{'pro_id': '878A', 'name': 'Short Program', 'tags': ['bitmasks', 'constructive algorithms'], 'dif': '1600'}
{'pro_id': '877F', 'name': 'Ann and Books', 'tags': ['data structures', 'flows', 'hashing'], 'dif': '2500'}
{'pro_id': '877E', 'name': 'Danil and a Part-time Job', 'tags': ['bitmasks', 'data structures', 'trees'], 'dif': '2000'}
{'pro_id': '877D', 'name': 'Olya and Energy Drinks', 'tags': ['data structures', 'dfs and similar', 'graphs', 'shortest paths'], 'dif': '1900'}
{'pro_id': '877C', 'name': 'Slava and tanks', 'tags': ['constructive algorithms'], 'dif': '1600'}
{'pro_id': '877B', 'name': 'Nikita and string', 'tags': ['brute force', 'dp'], 'dif': '1500'}
{'pro_id': '877A', 'name': 'Alex and broken contest', 'tags': ['implementation', 'strings'], 'dif': '1200'}
{'pro_id': '876B', 'name': 'Divisiblity of Differences', 'tags': ['implementation', 'math', 'number theory'], 'dif': '1300'}
{'pro_id': '876A', 'name': 'Trip For Meal', 'tags': ['math'], 'dif': '1000'}
{'pro_id': '875F', 'name': 'Royal Questions', 'tags': ['dsu', 'graphs', 'greedy'], 'dif': '2500'}
{'pro_id': '875E', 'name': 'Delivery Club', 'tags': ['binary search', 'data structures', 'dp'], 'dif': '2600'}
{'pro_id': '875D', 'name': 'High Cry', 'tags': ['binary search', 'bitmasks', 'combinatorics', 'data structures', 'divide and conquer'], 'dif': '2200'}
{'pro_id': '875C', 'name': 'National Property', 'tags': ['2-sat', 'dfs and similar', 'graphs', 'implementation'], 'dif': '2100'}
{'pro_id': '875B', 'name': 'Sorting the Coins', 'tags': ['dsu', 'implementation', 'sortings', 'two pointers'], 'dif': '1500'}
{'pro_id': '875A', 'name': 'Classroom Watch', 'tags': ['brute force', 'math'], 'dif': '1200'}
{'pro_id': '873F', 'name': 'Forbidden Indices', 'tags': ['dsu', 'string suffix structures', 'strings'], 'dif': '2300'}
{'pro_id': '873E', 'name': 'Awards For Contestants', 'tags': ['brute force', 'data structures', 'dp'], 'dif': '2500'}
{'pro_id': '873D', 'name': 'Merge Sort', 'tags': ['constructive algorithms', 'divide and conquer'], 'dif': '1800'}
{'pro_id': '873C', 'name': 'Strange Game On Matrix', 'tags': ['greedy', 'two pointers'], 'dif': '1600'}
{'pro_id': '873B', 'name': 'Balanced Substring', 'tags': ['dp', 'implementation'], 'dif': '1500'}
{'pro_id': '873A', 'name': 'Chores', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '871E', 'name': 'Restore the Tree', 'tags': ['graphs', 'greedy', 'trees'], 'dif': '2800'}
{'pro_id': '870F', 'name': 'Paths', 'tags': ['data structures', 'number theory'], 'dif': '2600'}
{'pro_id': '870E', 'name': 'Points, Lines and Ready-made Titles', 'tags': ['dfs and similar', 'dsu', 'graphs', 'trees'], 'dif': '2400'}
{'pro_id': '870D', 'name': 'Something with XOR Queries', 'tags': ['brute force', 'interactive', 'probabilities'], 'dif': '2100'}
{'pro_id': '870C', 'name': 'Maximum splitting', 'tags': ['dp', 'greedy', 'math', 'number theory'], 'dif': '1300'}
{'pro_id': '870B', 'name': 'Maximum of Maximums of Minimums', 'tags': ['greedy'], 'dif': '1200'}
{'pro_id': '870A', 'name': 'Search for Pretty Integers', 'tags': ['brute force', 'implementation'], 'dif': '900'}
{'pro_id': '869E', 'name': 'The Untended Antiquity', 'tags': ['data structures', 'hashing'], 'dif': '2300'}
{'pro_id': '869D', 'name': 'The Overdosing Ubiquity', 'tags': ['brute force', 'dfs and similar', 'graphs'], 'dif': '2800'}
{'pro_id': '869C', 'name': 'The Intriguing Obsession', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '1800'}
{'pro_id': '869B', 'name': 'The Eternal Immortality', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '869A', 'name': 'The Artful Expedient', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '868G', 'name': 'El Toll Caves', 'tags': ['math'], 'dif': '3300'}
{'pro_id': '868F', 'name': 'Yet Another Minimization Problem', 'tags': ['divide and conquer', 'dp'], 'dif': '2500'}
{'pro_id': '868E', 'name': 'Policeman and a Tree', 'tags': ['dp', 'graphs', 'trees'], 'dif': '2600'}
{'pro_id': '868D', 'name': 'Huge Strings', 'tags': ['bitmasks', 'brute force', 'dp', 'implementation', 'strings'], 'dif': '2100'}
{'pro_id': '868C', 'name': 'Qualification Rounds', 'tags': ['bitmasks', 'brute force', 'constructive algorithms', 'dp'], 'dif': '1500'}
{'pro_id': '868B', 'name': 'Race Against Time', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '868A', 'name': 'Bark to Unlock', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1000'}
{'pro_id': '867A', 'name': 'Between the Offices', 'tags': ['implementation'], 'dif': '600'}
{'pro_id': '865G', 'name': 'Flowers and Chocolate', 'tags': ['combinatorics', 'math', 'matrices'], 'dif': '3200'}
{'pro_id': '865F', 'name': 'Egg Roulette', 'tags': ['bitmasks', 'brute force', 'divide and conquer', 'math', 'meet-in-the-middle'], 'dif': '3300'}
{'pro_id': '865E', 'name': 'Hex Dyslexia', 'tags': ['bitmasks', 'brute force', 'dp', 'graphs'], 'dif': '2700'}
{'pro_id': '865D', 'name': 'Buy Low Sell High', 'tags': ['constructive algorithms', 'data structures', 'greedy'], 'dif': '2300'}
{'pro_id': '865C', 'name': 'Gotta Go Fast', 'tags': ['binary search', 'dp'], 'dif': '2500'}
{'pro_id': '865B', 'name': 'Ordering Pizza', 'tags': ['binary search', 'sortings', 'ternary search'], 'dif': '1900'}
{'pro_id': '865A', 'name': 'Save the problem!', 'tags': ['constructive algorithms'], 'dif': '1400'}
{'pro_id': '864F', 'name': 'Cities Excursions', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '2700'}
{'pro_id': '864E', 'name': 'Fire', 'tags': ['dp', 'sortings'], 'dif': '2000'}
{'pro_id': '864D', 'name': 'Make a Permutation!', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '864C', 'name': 'Bus', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '864B', 'name': 'Polycarp and Letters', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1100'}
{'pro_id': '864A', 'name': 'Fair Game', 'tags': ['implementation', 'sortings'], 'dif': '1000'}
{'pro_id': '863G', 'name': 'Graphic Settings', 'tags': [], 'dif': '3100'}
{'pro_id': '863F', 'name': 'Almost Permutation', 'tags': ['flows'], 'dif': '2300'}
{'pro_id': '863E', 'name': 'Turn Off The TV', 'tags': ['data structures', 'sortings'], 'dif': '2000'}
{'pro_id': '863D', 'name': 'Yet Another Array Queries Problem', 'tags': ['data structures', 'implementation'], 'dif': '1800'}
{'pro_id': '863C', 'name': '1-2-3', 'tags': ['graphs', 'implementation'], 'dif': '1800'}
{'pro_id': '863B', 'name': 'Kayaking', 'tags': ['brute force', 'greedy', 'sortings'], 'dif': '1500'}
{'pro_id': '863A', 'name': 'Quasi-palindrome', 'tags': ['brute force', 'implementation'], 'dif': '900'}
{'pro_id': '862F', 'name': 'Mahmoud and Ehab and the final stage', 'tags': ['data structures', 'strings'], 'dif': '2800'}
{'pro_id': '862E', 'name': 'Mahmoud and Ehab and the function', 'tags': ['binary search', 'data structures', 'sortings'], 'dif': '2200'}
{'pro_id': '862D', 'name': 'Mahmoud and Ehab and the binary string', 'tags': ['binary search', 'divide and conquer', 'interactive'], 'dif': '2000'}
{'pro_id': '862C', 'name': 'Mahmoud and Ehab and the xor', 'tags': ['constructive algorithms'], 'dif': '1800'}
{'pro_id': '862B', 'name': 'Mahmoud and Ehab and the bipartiteness', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '1400'}
{'pro_id': '862A', 'name': 'Mahmoud and Ehab and the MEX', 'tags': ['greedy', 'implementation'], 'dif': '1000'}
{'pro_id': '860E', 'name': 'Arkady and a Nobody-men', 'tags': ['data structures', 'dfs and similar', 'trees'], 'dif': '2600'}
{'pro_id': '859G', 'name': 'Circle of Numbers', 'tags': ['math'], 'dif': '2900'}
{'pro_id': '859F', 'name': 'Ordering T-Shirts', 'tags': ['greedy'], 'dif': '2700'}
{'pro_id': '859E', 'name': 'Desk Disorder', 'tags': ['combinatorics', 'dfs and similar', 'dsu', 'graphs', 'trees'], 'dif': '2100'}
{'pro_id': '859D', 'name': 'Third Month Insanity', 'tags': ['dp', 'probabilities', 'trees'], 'dif': '2100'}
{'pro_id': '859C', 'name': 'Pie Rules', 'tags': ['dp', 'games'], 'dif': '1500'}
{'pro_id': '859B', 'name': 'Lazy Security Guard', 'tags': ['brute force', 'geometry', 'math'], 'dif': '1000'}
{'pro_id': '859A', 'name': 'Declined Finalists', 'tags': ['greedy', 'implementation'], 'dif': '800'}
{'pro_id': '858F', 'name': "Wizard's Tour", 'tags': ['constructive algorithms', 'dfs and similar', 'graphs'], 'dif': '2400'}
{'pro_id': '858E', 'name': 'Tests Renumeration', 'tags': ['implementation'], 'dif': '2300'}
{'pro_id': '858D', 'name': "Polycarp's phone book", 'tags': ['data structures', 'implementation', 'sortings'], 'dif': '1700'}
{'pro_id': '858C', 'name': 'Did you mean...', 'tags': ['dp', 'greedy', 'implementation'], 'dif': '1500'}
{'pro_id': '858B', 'name': 'Which floor?', 'tags': ['brute force', 'implementation'], 'dif': '1500'}
{'pro_id': '858A', 'name': 'k-rounding', 'tags': ['brute force', 'math', 'number theory'], 'dif': '1200'}
{'pro_id': '856F', 'name': 'To Play or not to Play', 'tags': ['greedy'], 'dif': '3100'}
{'pro_id': '856E', 'name': 'Satellites', 'tags': [], 'dif': '3100'}
{'pro_id': '856D', 'name': 'Masha and Cactus', 'tags': [], 'dif': '2500'}
{'pro_id': '856C', 'name': 'Eleventh Birthday', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2400'}
{'pro_id': '856B', 'name': 'Similar Words', 'tags': ['dp', 'strings'], 'dif': '2300'}
{'pro_id': '856A', 'name': 'Set Theory', 'tags': ['brute force', 'constructive algorithms'], 'dif': '1600'}
{'pro_id': '855G', 'name': 'Harry Vs Voldemort', 'tags': ['dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '3000'}
{'pro_id': '855F', 'name': 'Nagini', 'tags': ['binary search', 'data structures'], 'dif': '3000'}
{'pro_id': '855E', 'name': "Salazar Slytherin's Locket", 'tags': ['bitmasks', 'dp'], 'dif': '2200'}
{'pro_id': '855D', 'name': "Rowena Ravenclaw's Diadem", 'tags': ['trees'], 'dif': '2400'}
{'pro_id': '855C', 'name': "Helga Hufflepuff's Cup", 'tags': ['dp', 'trees'], 'dif': '2000'}
{'pro_id': '855B', 'name': "Marvolo Gaunt's Ring", 'tags': ['brute force', 'data structures', 'dp'], 'dif': '1500'}
{'pro_id': '855A', 'name': "Tom Riddle's Diary", 'tags': ['brute force', 'implementation', 'strings'], 'dif': '700'}
{'pro_id': '854B', 'name': 'Maxim Buys an Apartment', 'tags': ['constructive algorithms', 'math'], 'dif': '1200'}
{'pro_id': '854A', 'name': 'Fraction', 'tags': ['brute force', 'constructive algorithms', 'math'], 'dif': '900'}
{'pro_id': '853E', 'name': 'Lada Malina', 'tags': ['data structures', 'geometry'], 'dif': '3400'}
{'pro_id': '853D', 'name': 'Michael and Charging Stations', 'tags': ['binary search', 'dp', 'greedy'], 'dif': '2400'}
{'pro_id': '853C', 'name': 'Boredom', 'tags': ['data structures'], 'dif': '2200'}
{'pro_id': '853B', 'name': 'Jury Meeting', 'tags': ['greedy', 'sortings', 'two pointers'], 'dif': '1900'}
{'pro_id': '853A', 'name': 'Planning', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '852I', 'name': 'Dating', 'tags': ['brute force', 'dfs and similar', 'graphs', 'trees'], 'dif': '2500'}
{'pro_id': '852H', 'name': 'Bob and stages', 'tags': ['dp', 'geometry'], 'dif': '3100'}
{'pro_id': '852G', 'name': 'Bathroom terminal', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '852F', 'name': 'Product transformation', 'tags': ['combinatorics', 'math', 'number theory'], 'dif': '2300'}
{'pro_id': '852E', 'name': 'Casinos and travel', 'tags': ['dp'], 'dif': '2200'}
{'pro_id': '852D', 'name': 'Exploration plan', 'tags': ['binary search', 'flows', 'graph matchings', 'shortest paths'], 'dif': '2400'}
{'pro_id': '852C', 'name': 'Property', 'tags': ['greedy', 'sortings'], 'dif': '2500'}
{'pro_id': '852B', 'name': 'Neural Network country', 'tags': ['dp', 'matrices'], 'dif': '2000'}
{'pro_id': '852A', 'name': 'Digits', 'tags': ['brute force', 'implementation', 'math'], 'dif': '2700'}
{'pro_id': '851B', 'name': 'Arpa and an exam about geometry', 'tags': ['geometry', 'math'], 'dif': '1400'}
{'pro_id': '851A', 'name': 'Arpa and a research in Mexican wave', 'tags': ['implementation', 'math'], 'dif': '800'}
{'pro_id': '850F', 'name': 'Rainbow Balls', 'tags': ['math'], 'dif': '2800'}
{'pro_id': '850E', 'name': 'Random Elections', 'tags': ['bitmasks', 'brute force', 'divide and conquer', 'fft', 'math'], 'dif': '2800'}
{'pro_id': '850D', 'name': 'Tournament Construction', 'tags': ['constructive algorithms', 'dp', 'graphs', 'greedy', 'math'], 'dif': '2700'}
{'pro_id': '850C', 'name': 'Arpa and a game with Mojtaba', 'tags': ['bitmasks', 'dp', 'games'], 'dif': '2400'}
{'pro_id': '850B', 'name': 'Arpa and a list of numbers', 'tags': ['implementation', 'number theory'], 'dif': '2000'}
{'pro_id': '850A', 'name': 'Five Dimensional Points', 'tags': ['brute force', 'geometry', 'math'], 'dif': '1700'}
{'pro_id': '849B', 'name': 'Tell Your World', 'tags': ['brute force', 'geometry'], 'dif': '1600'}
{'pro_id': '849A', 'name': 'Odds and Ends', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '848E', 'name': 'Days of Floral Colours', 'tags': ['combinatorics', 'divide and conquer', 'dp', 'fft', 'math'], 'dif': '3400'}
{'pro_id': '848D', 'name': 'Shake It!', 'tags': ['combinatorics', 'dp', 'flows', 'graphs'], 'dif': '2900'}
{'pro_id': '848C', 'name': 'Goodbye Souvenir', 'tags': ['data structures', 'divide and conquer'], 'dif': '2800'}
{'pro_id': '848B', 'name': "Rooter's Song", 'tags': ['constructive algorithms', 'data structures', 'geometry', 'implementation', 'sortings', 'two pointers'], 'dif': '2100'}
{'pro_id': '848A', 'name': 'From Y to Y', 'tags': ['constructive algorithms'], 'dif': '1600'}
{'pro_id': '847M', 'name': 'Weather Tomorrow', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '847L', 'name': 'Berland SU Computer Network', 'tags': ['dfs and similar', 'hashing', 'trees'], 'dif': '2500'}
{'pro_id': '847K', 'name': 'Travel Cards', 'tags': ['sortings'], 'dif': '2100'}
{'pro_id': '847J', 'name': 'Students Initiation', 'tags': ['binary search', 'flows'], 'dif': '2400'}
{'pro_id': '847I', 'name': 'Noise Level', 'tags': ['dfs and similar'], 'dif': '2000'}
{'pro_id': '847H', 'name': 'Load Testing', 'tags': [], 'dif': '1700'}
{'pro_id': '847G', 'name': 'University Classes', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '847F', 'name': 'Berland Elections', 'tags': ['greedy'], 'dif': '2200'}
{'pro_id': '847E', 'name': 'Packmen', 'tags': ['binary search'], 'dif': '2000'}
{'pro_id': '847D', 'name': 'Dog Show', 'tags': ['data structures', 'greedy'], 'dif': '2300'}
{'pro_id': '847C', 'name': 'Sum of Nestings', 'tags': ['constructive algorithms'], 'dif': '1900'}
{'pro_id': '847B', 'name': 'Preparing for Merge Sort', 'tags': ['binary search', 'data structures'], 'dif': '1700'}
{'pro_id': '847A', 'name': 'Union of Doubly Linked Lists', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '846F', 'name': 'Random Query', 'tags': ['data structures', 'math', 'probabilities', 'two pointers'], 'dif': '2000'}
{'pro_id': '846E', 'name': 'Chemistry in Berland', 'tags': ['dfs and similar', 'greedy', 'trees'], 'dif': '2400'}
{'pro_id': '846D', 'name': 'Monitor', 'tags': ['binary search', 'data structures'], 'dif': '1900'}
{'pro_id': '846C', 'name': 'Four Segments', 'tags': ['brute force', 'data structures', 'dp'], 'dif': '1900'}
{'pro_id': '846B', 'name': 'Math Show', 'tags': ['brute force', 'greedy'], 'dif': '1800'}
{'pro_id': '846A', 'name': 'Curriculum Vitae', 'tags': ['brute force', 'implementation'], 'dif': '1500'}
{'pro_id': '845G', 'name': 'Shortest Path Problem?', 'tags': ['dfs and similar', 'graphs', 'math'], 'dif': '2400'}
{'pro_id': '845F', 'name': 'Guards In The Storehouse', 'tags': ['bitmasks', 'dp'], 'dif': '2600'}
{'pro_id': '845E', 'name': 'Fire in the City', 'tags': ['binary search', 'data structures'], 'dif': '2500'}
{'pro_id': '845D', 'name': 'Driving Test', 'tags': ['data structures', 'dp', 'greedy'], 'dif': '1800'}
{'pro_id': '845C', 'name': 'Two TVs', 'tags': ['data structures', 'greedy', 'sortings'], 'dif': '1500'}
{'pro_id': '845B', 'name': 'Luba And The Ticket', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1600'}
{'pro_id': '845A', 'name': 'Chess Tourney', 'tags': ['implementation', 'sortings'], 'dif': '1100'}
{'pro_id': '844B', 'name': 'Rectangles', 'tags': ['combinatorics', 'math'], 'dif': '1300'}
{'pro_id': '844A', 'name': 'Diversity', 'tags': ['greedy', 'implementation', 'strings'], 'dif': '1000'}
{'pro_id': '843E', 'name': 'Maximum Flow', 'tags': ['flows', 'graphs'], 'dif': '2900'}
{'pro_id': '843D', 'name': 'Dynamic Shortest Path', 'tags': ['graphs', 'shortest paths'], 'dif': '2700'}
{'pro_id': '843C', 'name': 'Upgrading Tree', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs', 'math', 'trees'], 'dif': '2900'}
{'pro_id': '843B', 'name': 'Interactive LowerBound', 'tags': ['brute force', 'interactive', 'probabilities'], 'dif': '2000'}
{'pro_id': '843A', 'name': 'Sorting by Subsequences', 'tags': ['dfs and similar', 'dsu', 'implementation', 'math', 'sortings'], 'dif': '1400'}
{'pro_id': '842E', 'name': 'Nikita and game', 'tags': ['binary search', 'dfs and similar', 'divide and conquer', 'graphs', 'trees'], 'dif': '3000'}
{'pro_id': '842D', 'name': 'Vitya and Strange Lesson', 'tags': ['binary search', 'data structures'], 'dif': '2100'}
{'pro_id': '842C', 'name': 'Ilya And The Tree', 'tags': ['dfs and similar', 'graphs', 'math', 'number theory', 'trees'], 'dif': '2000'}
{'pro_id': '842B', 'name': 'Gleb And Pizza', 'tags': ['geometry'], 'dif': '1100'}
{'pro_id': '842A', 'name': 'Kirill And The Game', 'tags': ['brute force', 'two pointers'], 'dif': '1300'}
{'pro_id': '841B', 'name': 'Godsend', 'tags': ['games', 'math'], 'dif': '1200'}
{'pro_id': '841A', 'name': 'Generous Kefa', 'tags': ['brute force', 'implementation'], 'dif': '900'}
{'pro_id': '840E', 'name': 'In a Trap', 'tags': ['trees'], 'dif': '3200'}
{'pro_id': '840D', 'name': 'Destiny', 'tags': ['data structures', 'probabilities'], 'dif': '2400'}
{'pro_id': '840C', 'name': 'On the Bench', 'tags': ['combinatorics', 'dp'], 'dif': '2600'}
{'pro_id': '840B', 'name': 'Leha and another game about graph', 'tags': ['constructive algorithms', 'data structures', 'dfs and similar', 'dp', 'graphs'], 'dif': '2100'}
{'pro_id': '840A', 'name': 'Leha and Function', 'tags': ['combinatorics', 'greedy', 'math', 'number theory', 'sortings'], 'dif': '1300'}
{'pro_id': '839E', 'name': 'Mother of Dragons', 'tags': ['brute force', 'graphs', 'math', 'meet-in-the-middle'], 'dif': '2600'}
{'pro_id': '839D', 'name': 'Winter is here', 'tags': ['combinatorics', 'dp', 'math', 'number theory'], 'dif': '2200'}
{'pro_id': '839C', 'name': 'Journey', 'tags': ['dfs and similar', 'dp', 'graphs', 'probabilities', 'trees'], 'dif': '1500'}
{'pro_id': '839B', 'name': 'Game of the Rows', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1700'}
{'pro_id': '839A', 'name': 'Arya and Bran', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '838F', 'name': 'Expected Earnings', 'tags': [], 'dif': '2800'}
{'pro_id': '838E', 'name': 'Convex Countour', 'tags': ['dp'], 'dif': '2300'}
{'pro_id': '838D', 'name': 'Airplane Arrangements', 'tags': ['math', 'number theory'], 'dif': '2700'}
{'pro_id': '838C', 'name': 'Future Failure', 'tags': ['dp', 'games'], 'dif': '2800'}
{'pro_id': '838B', 'name': 'Diverging Directions', 'tags': ['data structures', 'dfs and similar', 'trees'], 'dif': '2100'}
{'pro_id': '838A', 'name': 'Binary Blocks', 'tags': ['brute force'], 'dif': '1400'}
{'pro_id': '837G', 'name': 'Functions On The Segments', 'tags': ['data structures'], 'dif': '2600'}
{'pro_id': '837F', 'name': 'Prefix Sums', 'tags': ['binary search', 'brute force', 'combinatorics', 'math', 'matrices'], 'dif': '2500'}
{'pro_id': '837E', 'name': "Vasya's Function", 'tags': ['binary search', 'implementation', 'math'], 'dif': '2200'}
{'pro_id': '837D', 'name': 'Round Subset', 'tags': ['dp', 'math'], 'dif': '2100'}
{'pro_id': '837C', 'name': 'Two Seals', 'tags': ['brute force', 'implementation'], 'dif': '1500'}
{'pro_id': '837B', 'name': 'Flag of Berland', 'tags': ['brute force', 'implementation'], 'dif': '1600'}
{'pro_id': '837A', 'name': 'Text Volume', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '835F', 'name': 'Roads in the Kingdom', 'tags': ['dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '2400'}
{'pro_id': '835E', 'name': "The penguin's game", 'tags': ['binary search', 'constructive algorithms', 'interactive'], 'dif': '2400'}
{'pro_id': '835D', 'name': 'Palindromic characteristics', 'tags': ['brute force', 'dp', 'hashing', 'strings'], 'dif': '1900'}
{'pro_id': '835C', 'name': 'Star sky', 'tags': ['dp', 'implementation'], 'dif': '1600'}
{'pro_id': '835B', 'name': 'The number on the board', 'tags': ['greedy'], 'dif': '1100'}
{'pro_id': '835A', 'name': 'Key races', 'tags': ['math'], 'dif': '700'}
{'pro_id': '834B', 'name': 'The Festive Evening', 'tags': ['data structures', 'implementation'], 'dif': '1100'}
{'pro_id': '834A', 'name': 'The Useless Toy', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '833E', 'name': 'Caramel Clouds', 'tags': ['data structures', 'dp', 'sortings'], 'dif': '3100'}
{'pro_id': '833D', 'name': 'Red-Black Cobweb', 'tags': ['data structures', 'divide and conquer', 'implementation', 'trees'], 'dif': '2800'}
{'pro_id': '833C', 'name': 'Ever-Hungry Krakozyabra', 'tags': ['brute force', 'combinatorics', 'greedy', 'math'], 'dif': '2600'}
{'pro_id': '833B', 'name': 'The Bakery', 'tags': ['binary search', 'data structures', 'divide and conquer', 'dp', 'two pointers'], 'dif': '2200'}
{'pro_id': '833A', 'name': 'The Meaningless Game', 'tags': ['math', 'number theory'], 'dif': '1700'}
{'pro_id': '832E', 'name': 'Vasya and Shifts', 'tags': ['matrices'], 'dif': '2700'}
{'pro_id': '832D', 'name': 'Misha, Grisha and Underground', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '1900'}
{'pro_id': '832C', 'name': 'Strange Radiation', 'tags': ['binary search', 'implementation', 'math'], 'dif': '2500'}
{'pro_id': '832B', 'name': 'Petya and Exam', 'tags': ['implementation', 'strings'], 'dif': '1600'}
{'pro_id': '832A', 'name': 'Sasha and Sticks', 'tags': ['games', 'math'], 'dif': '800'}
{'pro_id': '831C', 'name': 'Jury Marks', 'tags': ['brute force', 'constructive algorithms'], 'dif': '1600'}
{'pro_id': '831B', 'name': 'Keyboard Layouts', 'tags': ['implementation', 'strings'], 'dif': '800'}
{'pro_id': '831A', 'name': 'Unimodal Array', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '830E', 'name': 'Perpetual Motion Machine', 'tags': ['constructive algorithms', 'dp', 'graphs', 'implementation', 'math', 'trees'], 'dif': '3100'}
{'pro_id': '830D', 'name': 'Singer House', 'tags': ['combinatorics', 'dp', 'graphs', 'trees'], 'dif': '2800'}
{'pro_id': '830C', 'name': 'Bamboo Partition', 'tags': ['brute force', 'data structures', 'implementation', 'math', 'number theory', 'sortings', 'two pointers'], 'dif': '2500'}
{'pro_id': '830B', 'name': 'Cards Sorting', 'tags': ['data structures', 'implementation', 'sortings'], 'dif': '1800'}
{'pro_id': '830A', 'name': 'Office Keys', 'tags': ['binary search', 'brute force', 'dp', 'greedy', 'sortings'], 'dif': '1900'}
{'pro_id': '828B', 'name': 'Black Square', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '828A', 'name': 'Restaurant Tables', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '827F', 'name': "Dirty Arkady's Kitchen", 'tags': ['data structures', 'dp', 'graphs', 'shortest paths'], 'dif': '3100'}
{'pro_id': '827E', 'name': 'Rusty String', 'tags': ['fft', 'math', 'strings'], 'dif': '2700'}
{'pro_id': '827D', 'name': 'Best Edge Weight', 'tags': ['data structures', 'dfs and similar', 'graphs', 'trees'], 'dif': '2700'}
{'pro_id': '827C', 'name': 'DNA Evolution', 'tags': ['data structures', 'strings'], 'dif': '2200'}
{'pro_id': '827B', 'name': 'High Load', 'tags': ['constructive algorithms', 'greedy', 'implementation', 'trees'], 'dif': '1800'}
{'pro_id': '827A', 'name': 'String Reconstruction', 'tags': ['data structures', 'greedy', 'sortings', 'strings'], 'dif': '1700'}
{'pro_id': '825G', 'name': 'Tree Queries', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '2600'}
{'pro_id': '825F', 'name': 'String Compression', 'tags': ['dp', 'hashing', 'string suffix structures', 'strings'], 'dif': '2400'}
{'pro_id': '825E', 'name': 'Minimal Labels', 'tags': ['data structures', 'dfs and similar', 'graphs', 'greedy'], 'dif': '2400'}
{'pro_id': '825D', 'name': 'Suitable Replacement', 'tags': ['binary search', 'greedy', 'implementation'], 'dif': '1600'}
{'pro_id': '825C', 'name': 'Multi-judge Solving', 'tags': ['greedy', 'implementation'], 'dif': '1600'}
{'pro_id': '825B', 'name': 'Five-In-a-Row', 'tags': ['brute force', 'implementation'], 'dif': '1600'}
{'pro_id': '825A', 'name': 'Binary Protocol', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '822F', 'name': 'Madness', 'tags': ['constructive algorithms', 'dfs and similar', 'trees'], 'dif': '2700'}
{'pro_id': '822E', 'name': 'Liar', 'tags': ['binary search', 'dp', 'hashing', 'string suffix structures'], 'dif': '2500'}
{'pro_id': '822D', 'name': 'My pretty girl Noora', 'tags': ['brute force', 'dp', 'greedy', 'math', 'number theory'], 'dif': '1800'}
{'pro_id': '822C', 'name': 'Hacker, pack your bags!', 'tags': ['binary search', 'greedy', 'implementation', 'sortings'], 'dif': '1600'}
{'pro_id': '822B', 'name': 'Crossword solving', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1100'}
{'pro_id': '822A', 'name': "I'm bored with life", 'tags': ['implementation', 'math', 'number theory'], 'dif': '800'}
{'pro_id': '821E', 'name': 'Okabe and El Psy Kongroo', 'tags': ['dp', 'matrices'], 'dif': '2200'}
{'pro_id': '821D', 'name': 'Okabe and City', 'tags': ['dfs and similar', 'graphs', 'shortest paths'], 'dif': '2200'}
{'pro_id': '821C', 'name': 'Okabe and Boxes', 'tags': ['data structures', 'greedy', 'trees'], 'dif': '1600'}
{'pro_id': '821B', 'name': 'Okabe and Banana Trees', 'tags': ['brute force', 'math'], 'dif': '1300'}
{'pro_id': '821A', 'name': 'Okabe and Future Gadget Laboratory', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '820B', 'name': 'Mister B and Angle in Polygon', 'tags': ['constructive algorithms', 'geometry', 'math'], 'dif': '1300'}
{'pro_id': '820A', 'name': 'Mister B and Book Reading', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '819E', 'name': 'Mister B and Flight to the Moon', 'tags': ['constructive algorithms', 'graphs'], 'dif': '2800'}
{'pro_id': '819D', 'name': 'Mister B and Astronomers', 'tags': ['number theory'], 'dif': '2900'}
{'pro_id': '819C', 'name': 'Mister B and Beacons on Field', 'tags': ['number theory'], 'dif': '3000'}
{'pro_id': '819B', 'name': 'Mister B and PR Shifts', 'tags': ['data structures', 'implementation', 'math'], 'dif': '2100'}
{'pro_id': '819A', 'name': 'Mister B and Boring Game', 'tags': ['games', 'greedy'], 'dif': '2100'}
{'pro_id': '818G', 'name': 'Four Melodies', 'tags': ['flows', 'graphs'], 'dif': '2700'}
{'pro_id': '818F', 'name': 'Level Generation', 'tags': ['binary search', 'math', 'ternary search'], 'dif': '2200'}
{'pro_id': '818E', 'name': 'Card Game Again', 'tags': ['binary search', 'data structures', 'number theory', 'two pointers'], 'dif': '2000'}
{'pro_id': '818D', 'name': 'Multicolored Cars', 'tags': ['data structures', 'implementation'], 'dif': '1700'}
{'pro_id': '818C', 'name': 'Sofa Thief', 'tags': ['brute force', 'implementation'], 'dif': '2000'}
{'pro_id': '818B', 'name': 'Permutation Game', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '818A', 'name': 'Diplomas and Certificates', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '817F', 'name': 'MEX Queries', 'tags': ['binary search', 'data structures', 'trees'], 'dif': '2400'}
{'pro_id': '817E', 'name': 'Choosing The Commander', 'tags': ['bitmasks', 'data structures', 'trees'], 'dif': '2100'}
{'pro_id': '817D', 'name': 'Imbalanced Array', 'tags': ['data structures', 'divide and conquer', 'dsu', 'sortings'], 'dif': '2000'}
{'pro_id': '817C', 'name': 'Really Big Numbers', 'tags': ['binary search', 'brute force', 'dp', 'math'], 'dif': '1600'}
{'pro_id': '817B', 'name': 'Makes And The Product', 'tags': ['combinatorics', 'implementation', 'math', 'sortings'], 'dif': '1500'}
{'pro_id': '817A', 'name': 'Treasure Hunt', 'tags': ['implementation', 'math', 'number theory'], 'dif': '1200'}
{'pro_id': '816B', 'name': 'Karen and Coffee', 'tags': ['binary search', 'data structures', 'implementation'], 'dif': '1400'}
{'pro_id': '816A', 'name': 'Karen and Morning', 'tags': ['brute force', 'implementation'], 'dif': '1100'}
{'pro_id': '815E', 'name': 'Karen and Neighborhood', 'tags': ['binary search', 'constructive algorithms', 'implementation'], 'dif': '2900'}
{'pro_id': '815D', 'name': 'Karen and Cards', 'tags': ['binary search', 'combinatorics', 'data structures', 'geometry'], 'dif': '2700'}
{'pro_id': '815C', 'name': 'Karen and Supermarket', 'tags': ['brute force', 'dp', 'trees'], 'dif': '2500'}
{'pro_id': '815B', 'name': 'Karen and Test', 'tags': ['brute force', 'combinatorics', 'constructive algorithms', 'math'], 'dif': '2200'}
{'pro_id': '815A', 'name': 'Karen and Game', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1700'}
{'pro_id': '814E', 'name': 'An unavoidable detour for home', 'tags': ['combinatorics', 'dp', 'graphs', 'shortest paths'], 'dif': '2700'}
{'pro_id': '814D', 'name': 'An overnight dance in discotheque', 'tags': ['dfs and similar', 'dp', 'geometry', 'greedy', 'trees'], 'dif': '2000'}
{'pro_id': '814C', 'name': 'An impassioned circulation of affection', 'tags': ['brute force', 'dp', 'strings', 'two pointers'], 'dif': '1600'}
{'pro_id': '814B', 'name': 'An express train to reveries', 'tags': ['constructive algorithms'], 'dif': '1300'}
{'pro_id': '814A', 'name': 'An abandoned sentiment from past', 'tags': ['constructive algorithms', 'greedy', 'implementation', 'sortings'], 'dif': '1000'}
{'pro_id': '813F', 'name': 'Bipartite Checking', 'tags': ['data structures', 'dsu', 'graphs'], 'dif': '2600'}
{'pro_id': '813E', 'name': 'Army Creation', 'tags': ['binary search', 'data structures'], 'dif': '2300'}
{'pro_id': '813D', 'name': 'Two Melodies', 'tags': ['dp', 'flows'], 'dif': '2700'}
{'pro_id': '813C', 'name': 'The Tag Game', 'tags': ['dfs and similar', 'graphs'], 'dif': '1700'}
{'pro_id': '813B', 'name': 'The Golden Age', 'tags': ['brute force', 'math'], 'dif': '1700'}
{'pro_id': '813A', 'name': 'The Contest', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '812E', 'name': 'Sagheer and Apple Tree', 'tags': ['games', 'trees'], 'dif': '2200'}
{'pro_id': '812D', 'name': 'Sagheer and Kindergarten', 'tags': ['dfs and similar', 'graphs', 'implementation', 'trees'], 'dif': '2700'}
{'pro_id': '812C', 'name': 'Sagheer and Nubian Market', 'tags': ['binary search', 'sortings'], 'dif': '1500'}
{'pro_id': '812B', 'name': 'Sagheer, the Hausmeister', 'tags': ['bitmasks', 'brute force', 'dp'], 'dif': '1600'}
{'pro_id': '812A', 'name': 'Sagheer and Crossroads', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '811E', 'name': 'Vladik and Entertaining Flags', 'tags': ['data structures', 'dsu', 'graphs'], 'dif': '2600'}
{'pro_id': '811D', 'name': 'Vladik and Favorite Game', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs', 'interactive'], 'dif': '2000'}
{'pro_id': '811C', 'name': 'Vladik and Memorable Trip', 'tags': ['dp', 'implementation'], 'dif': '1800'}
{'pro_id': '811B', 'name': 'Vladik and Complicated Book', 'tags': ['implementation', 'sortings'], 'dif': '1300'}
{'pro_id': '811A', 'name': 'Vladik and Courtesy', 'tags': ['brute force', 'implementation'], 'dif': '900'}
{'pro_id': '810B', 'name': 'Summer sell-off', 'tags': ['greedy', 'sortings'], 'dif': '1300'}
{'pro_id': '810A', 'name': 'Straight <<A>>', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '809E', 'name': 'Surprise me!', 'tags': ['divide and conquer', 'math', 'number theory', 'trees'], 'dif': '3000'}
{'pro_id': '809D', 'name': 'Hitchhiking in the Baltic States', 'tags': ['data structures', 'dp'], 'dif': '2800'}
{'pro_id': '809C', 'name': 'Find a car', 'tags': ['combinatorics', 'divide and conquer', 'dp'], 'dif': '2900'}
{'pro_id': '809B', 'name': 'Glad to see you!', 'tags': ['binary search', 'interactive'], 'dif': '2200'}
{'pro_id': '809A', 'name': 'Do you want a date?', 'tags': ['implementation', 'math', 'sortings'], 'dif': '1500'}
{'pro_id': '808G', 'name': 'Anthem of Berland', 'tags': ['dp', 'strings'], 'dif': '2300'}
{'pro_id': '808F', 'name': 'Card Game', 'tags': ['binary search', 'flows', 'graphs'], 'dif': '2500'}
{'pro_id': '808E', 'name': 'Selling Souvenirs', 'tags': ['binary search', 'dp', 'greedy', 'ternary search'], 'dif': '2300'}
{'pro_id': '808D', 'name': 'Array Division', 'tags': ['binary search', 'data structures', 'implementation'], 'dif': '1900'}
{'pro_id': '808C', 'name': 'Tea Party', 'tags': ['constructive algorithms', 'greedy', 'sortings'], 'dif': '1500'}
{'pro_id': '808B', 'name': 'Average Sleep Time', 'tags': ['data structures', 'implementation', 'math'], 'dif': '1300'}
{'pro_id': '808A', 'name': 'Lucky Year', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '807B', 'name': 'T-Shirt Hunt', 'tags': ['brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '807A', 'name': 'Is it rated?', 'tags': ['implementation', 'sortings'], 'dif': '900'}
{'pro_id': '805B', 'name': '3-palindrome', 'tags': ['constructive algorithms'], 'dif': '1000'}
{'pro_id': '805A', 'name': 'Fake NP', 'tags': ['greedy', 'math'], 'dif': '1000'}
{'pro_id': '804F', 'name': 'Fake bullions', 'tags': ['combinatorics', 'dfs and similar', 'dp', 'graphs', 'number theory'], 'dif': '3400'}
{'pro_id': '804E', 'name': 'The same permutation', 'tags': ['constructive algorithms'], 'dif': '3100'}
{'pro_id': '804D', 'name': 'Expected diameter of a tree', 'tags': ['binary search', 'brute force', 'dfs and similar', 'dp', 'sortings', 'trees'], 'dif': '2600'}
{'pro_id': '804C', 'name': 'Ice cream coloring', 'tags': ['constructive algorithms', 'dfs and similar', 'greedy'], 'dif': '2200'}
{'pro_id': '804B', 'name': 'Minimum number of steps', 'tags': ['combinatorics', 'greedy', 'implementation', 'math'], 'dif': '1400'}
{'pro_id': '804A', 'name': 'Find Amir', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '1100'}
{'pro_id': '803G', 'name': 'Periodic RMQ Problem', 'tags': ['data structures'], 'dif': '2500'}
{'pro_id': '803F', 'name': 'Coprime Subsequences', 'tags': ['bitmasks', 'combinatorics', 'number theory'], 'dif': '2100'}
{'pro_id': '803E', 'name': 'Roma and Poker', 'tags': ['dp', 'graphs'], 'dif': '2100'}
{'pro_id': '803D', 'name': 'Magazine Ad', 'tags': ['binary search', 'greedy'], 'dif': '1900'}
{'pro_id': '803C', 'name': 'Maximal GCD', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '2000'}
{'pro_id': '803B', 'name': 'Distances to Zero', 'tags': ['constructive algorithms'], 'dif': '1200'}
{'pro_id': '803A', 'name': 'Maximal Binary Matrix', 'tags': ['constructive algorithms'], 'dif': '1500'}
{'pro_id': '802O', 'name': "April Fools' Problem (hard)", 'tags': ['binary search', 'data structures', 'flows'], 'dif': '3200'}
{'pro_id': '802N', 'name': "April Fools' Problem (medium)", 'tags': ['binary search', 'flows', 'graphs'], 'dif': '2500'}
{'pro_id': '802M', 'name': "April Fools' Problem (easy)", 'tags': ['greedy', 'sortings'], 'dif': '1300'}
{'pro_id': '802L', 'name': 'Send the Fool Further! (hard)', 'tags': ['dfs and similar', 'dp', 'math', 'trees'], 'dif': '2800'}
{'pro_id': '802K', 'name': 'Send the Fool Further! (medium)', 'tags': ['dp', 'trees'], 'dif': '2100'}
{'pro_id': '802J', 'name': 'Send the Fool Further! (easy)', 'tags': ['dfs and similar', 'trees'], 'dif': '1500'}
{'pro_id': '802I', 'name': 'Fake News (hard)', 'tags': ['string suffix structures'], 'dif': '2400'}
{'pro_id': '802H', 'name': 'Fake News (medium)', 'tags': ['constructive algorithms', 'strings'], 'dif': '2400'}
{'pro_id': '802G', 'name': 'Fake News (easy)', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '802F', 'name': 'Marmots (hard)', 'tags': ['math', 'probabilities'], 'dif': '2800'}
{'pro_id': '802E', 'name': 'Marmots (medium)', 'tags': ['math'], 'dif': '2400'}
{'pro_id': '802D', 'name': 'Marmots (easy)', 'tags': ['math'], 'dif': '2100'}
{'pro_id': '802C', 'name': 'Heidi and Library (hard)', 'tags': ['flows'], 'dif': '2700'}
{'pro_id': '802B', 'name': 'Heidi and Library (medium)', 'tags': ['data structures', 'greedy'], 'dif': '1900'}
{'pro_id': '802A', 'name': 'Heidi and Library (easy)', 'tags': ['greedy'], 'dif': '1800'}
{'pro_id': '801B', 'name': 'Valued Keys', 'tags': ['constructive algorithms', 'greedy', 'strings'], 'dif': '1000'}
{'pro_id': '801A', 'name': 'Vicious Keyboard', 'tags': ['brute force'], 'dif': '1100'}
{'pro_id': '799G', 'name': 'Cut the pie', 'tags': ['binary search', 'data structures', 'geometry'], 'dif': '2600'}
{'pro_id': '799F', 'name': 'Beautiful fountains rows', 'tags': ['data structures'], 'dif': '3300'}
{'pro_id': '799E', 'name': 'Aquarium decoration', 'tags': ['data structures', 'greedy', 'two pointers'], 'dif': '2500'}
{'pro_id': '799D', 'name': 'Field expansion', 'tags': ['brute force', 'dp', 'meet-in-the-middle'], 'dif': '2000'}
{'pro_id': '799C', 'name': 'Fountains', 'tags': ['binary search', 'data structures', 'implementation'], 'dif': '1700'}
{'pro_id': '799B', 'name': 'T-shirt buying', 'tags': ['data structures', 'implementation'], 'dif': '1400'}
{'pro_id': '799A', 'name': 'Carrot Cakes', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '798E', 'name': 'Mike and code of a permutation', 'tags': ['constructive algorithms', 'data structures', 'graphs', 'sortings'], 'dif': '2700'}
{'pro_id': '798D', 'name': 'Mike and distribution', 'tags': ['constructive algorithms', 'sortings'], 'dif': '2300'}
{'pro_id': '798C', 'name': 'Mike and gcd problem', 'tags': ['dp', 'greedy', 'number theory'], 'dif': '1700'}
{'pro_id': '798B', 'name': 'Mike and strings', 'tags': ['brute force', 'dp', 'strings'], 'dif': '1300'}
{'pro_id': '798A', 'name': 'Mike and palindrome', 'tags': ['brute force', 'constructive algorithms', 'strings'], 'dif': '1100'}
{'pro_id': '797F', 'name': 'Mice and Holes', 'tags': ['data structures', 'dp', 'greedy', 'sortings'], 'dif': '2600'}
{'pro_id': '797E', 'name': 'Array Queries', 'tags': ['brute force', 'data structures', 'dp'], 'dif': '2000'}
{'pro_id': '797D', 'name': 'Broken BST', 'tags': ['data structures', 'dfs and similar'], 'dif': '2200'}
{'pro_id': '797C', 'name': 'Minimal string', 'tags': ['data structures', 'greedy', 'strings'], 'dif': '1700'}
{'pro_id': '797B', 'name': 'Odd sum', 'tags': ['dp', 'greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '797A', 'name': 'k-Factorization', 'tags': ['implementation', 'math', 'number theory'], 'dif': '1100'}
{'pro_id': '796F', 'name': 'Sequence Recovery', 'tags': ['bitmasks', 'data structures', 'greedy'], 'dif': '2800'}
{'pro_id': '796E', 'name': 'Exam Cheating', 'tags': ['binary search', 'dp'], 'dif': '2800'}
{'pro_id': '796D', 'name': 'Police Stations', 'tags': ['constructive algorithms', 'dfs and similar', 'dp', 'graphs', 'shortest paths', 'trees'], 'dif': '2100'}
{'pro_id': '796C', 'name': 'Bank Hacking', 'tags': ['constructive algorithms', 'data structures', 'dp', 'trees'], 'dif': '1900'}
{'pro_id': '796B', 'name': 'Find The Bone', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '796A', 'name': 'Buying A House', 'tags': ['brute force', 'implementation'], 'dif': '900'}
{'pro_id': '794G', 'name': 'Replace All', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '3400'}
{'pro_id': '794F', 'name': 'Leha and security system', 'tags': ['data structures'], 'dif': '2800'}
{'pro_id': '794E', 'name': 'Choosing Carrot', 'tags': ['games', 'math'], 'dif': '2700'}
{'pro_id': '794D', 'name': 'Labelling Cities', 'tags': ['dfs and similar', 'graphs', 'hashing'], 'dif': '2400'}
{'pro_id': '794C', 'name': 'Naming Company', 'tags': ['games', 'greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '794B', 'name': 'Cutting Carrot', 'tags': ['geometry', 'math'], 'dif': '1300'}
{'pro_id': '794A', 'name': 'Bank Robbery', 'tags': ['brute force', 'implementation'], 'dif': '900'}
{'pro_id': '793G', 'name': 'Oleg and chess', 'tags': ['data structures', 'divide and conquer', 'flows', 'graph matchings'], 'dif': '3100'}
{'pro_id': '793F', 'name': 'Julia the snail', 'tags': ['data structures', 'divide and conquer', 'dp'], 'dif': '2900'}
{'pro_id': '793E', 'name': 'Problem of offices', 'tags': ['constructive algorithms', 'dfs and similar', 'dp', 'trees'], 'dif': '2800'}
{'pro_id': '793D', 'name': 'Presents in Bankopolis', 'tags': ['dp', 'graphs', 'shortest paths'], 'dif': '2100'}
{'pro_id': '793C', 'name': 'Mice problem', 'tags': ['geometry', 'implementation', 'math', 'sortings'], 'dif': '2200'}
{'pro_id': '793B', 'name': 'Igor and his way to work', 'tags': ['dfs and similar', 'graphs', 'implementation', 'shortest paths'], 'dif': '1600'}
{'pro_id': '793A', 'name': 'Oleg and shares', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '792F', 'name': 'Mages and Monsters', 'tags': ['data structures', 'geometry'], 'dif': '3100'}
{'pro_id': '792E', 'name': 'Colored Balls', 'tags': ['greedy', 'math', 'number theory'], 'dif': '2400'}
{'pro_id': '792D', 'name': 'Paths in a Complete Binary Tree', 'tags': ['bitmasks', 'trees'], 'dif': '1800'}
{'pro_id': '792C', 'name': 'Divide by Three', 'tags': ['dp', 'greedy', 'math', 'number theory'], 'dif': '2000'}
{'pro_id': '792B', 'name': 'Counting-out Rhyme', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '792A', 'name': 'New Bus Route', 'tags': ['implementation', 'sortings'], 'dif': '1100'}
{'pro_id': '791A', 'name': 'Bear and Big Brother', 'tags': ['implementation'], 'dif': '600'}
{'pro_id': '789B', 'name': 'Masha and geometric depression', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '789A', 'name': 'Anastasia and pebbles', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '788E', 'name': 'New task', 'tags': ['data structures'], 'dif': '2900'}
{'pro_id': '788D', 'name': 'Finding lines', 'tags': ['constructive algorithms', 'divide and conquer', 'interactive'], 'dif': '2900'}
{'pro_id': '788C', 'name': 'The Great Mixing', 'tags': ['dfs and similar', 'graphs', 'shortest paths'], 'dif': '2500'}
{'pro_id': '788B', 'name': 'Weird journey', 'tags': ['combinatorics', 'constructive algorithms', 'dfs and similar', 'dsu', 'graphs'], 'dif': '2200'}
{'pro_id': '788A', 'name': 'Functions again', 'tags': ['dp', 'two pointers'], 'dif': '1500'}
{'pro_id': '787B', 'name': 'Not Afraid', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1300'}
{'pro_id': '787A', 'name': 'The Monster', 'tags': ['brute force', 'math', 'number theory'], 'dif': '1300'}
{'pro_id': '786E', 'name': 'ALT', 'tags': ['data structures', 'flows', 'graphs', 'trees'], 'dif': '3200'}
{'pro_id': '786D', 'name': 'Rap God', 'tags': ['data structures', 'dfs and similar', 'hashing', 'strings', 'trees'], 'dif': '3300'}
{'pro_id': '786C', 'name': 'Till I Collapse', 'tags': ['data structures', 'divide and conquer'], 'dif': '2600'}
{'pro_id': '786B', 'name': 'Legacy', 'tags': ['data structures', 'graphs', 'shortest paths'], 'dif': '2600'}
{'pro_id': '786A', 'name': 'Berzerk', 'tags': ['dfs and similar', 'dp', 'games'], 'dif': '2100'}
{'pro_id': '785E', 'name': 'Anton and Permutation', 'tags': ['brute force', 'data structures'], 'dif': '2300'}
{'pro_id': '785D', 'name': 'Anton and School - 2', 'tags': ['combinatorics', 'dp', 'math', 'number theory'], 'dif': '2200'}
{'pro_id': '785C', 'name': 'Anton and Fairy Tale', 'tags': ['binary search', 'math'], 'dif': '1600'}
{'pro_id': '785B', 'name': 'Anton and Classes', 'tags': ['greedy', 'sortings'], 'dif': '1200'}
{'pro_id': '785A', 'name': 'Anton and Polyhedrons', 'tags': ['implementation', 'strings'], 'dif': '600'}
{'pro_id': '784G', 'name': 'BF Calculator', 'tags': ['*special problem'], 'dif': '2100'}
{'pro_id': '784F', 'name': 'Crunching Numbers Just for You', 'tags': ['*special problem', 'implementation'], 'dif': '2200'}
{'pro_id': '784E', 'name': 'Twisted Circuit', 'tags': ['*special problem', 'brute force', 'implementation'], 'dif': '2000'}
{'pro_id': '784D', 'name': 'Touchy-Feely Palindromes', 'tags': ['*special problem', 'implementation'], 'dif': '2500'}
{'pro_id': '784C', 'name': 'INTERCALC', 'tags': ['*special problem', 'implementation'], 'dif': '2300'}
{'pro_id': '784B', 'name': "Kids' Riddle", 'tags': ['*special problem'], 'dif': '2300'}
{'pro_id': '784A', 'name': 'Numbers Joke', 'tags': ['*special problem'], 'dif': '1700'}
{'pro_id': '780H', 'name': 'Intranet of Buses', 'tags': ['binary search', 'geometry', 'implementation', 'two pointers'], 'dif': '3000'}
{'pro_id': '780G', 'name': 'Andryusha and Nervous Barriers', 'tags': ['data structures', 'dp'], 'dif': '2700'}
{'pro_id': '780F', 'name': 'Axel and Marston in Bitland', 'tags': ['bitmasks', 'dp', 'graphs', 'matrices'], 'dif': '2800'}
{'pro_id': '780E', 'name': 'Underground Lab', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs'], 'dif': '2200'}
{'pro_id': '780D', 'name': 'Innokenty and a Football League', 'tags': ['2-sat', 'graphs', 'greedy', 'implementation', 'shortest paths', 'strings'], 'dif': '2000'}
{'pro_id': '780C', 'name': 'Andryusha and Colored Balloons', 'tags': ['dfs and similar', 'graphs', 'greedy', 'trees'], 'dif': '1500'}
{'pro_id': '780B', 'name': 'The Meeting Place Cannot Be Changed', 'tags': ['binary search'], 'dif': '1600'}
{'pro_id': '780A', 'name': 'Andryusha and Socks', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '779C', 'name': 'Dishonest Sellers', 'tags': ['constructive algorithms', 'greedy', 'sortings'], 'dif': '1200'}
{'pro_id': '779B', 'name': 'Weird Rounding', 'tags': ['brute force', 'greedy'], 'dif': '1100'}
{'pro_id': '779A', 'name': 'Pupils Redistribution', 'tags': ['constructive algorithms', 'math'], 'dif': '1100'}
{'pro_id': '778E', 'name': 'Selling Numbers', 'tags': ['dp', 'sortings'], 'dif': '2900'}
{'pro_id': '778D', 'name': 'Parquet Re-laying', 'tags': ['constructive algorithms'], 'dif': '2700'}
{'pro_id': '778C', 'name': 'Peterson Polyglot', 'tags': ['brute force', 'dfs and similar', 'dsu', 'hashing', 'strings', 'trees'], 'dif': '2600'}
{'pro_id': '778B', 'name': 'Bitwise Formula', 'tags': ['bitmasks', 'brute force', 'dfs and similar', 'expression parsing', 'implementation'], 'dif': '2000'}
{'pro_id': '778A', 'name': 'String Game', 'tags': ['binary search', 'greedy', 'strings'], 'dif': '1600'}
{'pro_id': '777E', 'name': 'Hanoi Factory', 'tags': ['brute force', 'data structures', 'dp', 'greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '777D', 'name': 'Cloud of Hashtags', 'tags': ['binary search', 'greedy', 'implementation', 'strings'], 'dif': '1800'}
{'pro_id': '777C', 'name': 'Alyona and Spreadsheet', 'tags': ['binary search', 'data structures', 'dp', 'greedy', 'implementation', 'two pointers'], 'dif': '1600'}
{'pro_id': '777B', 'name': 'Game of Credit Cards', 'tags': ['data structures', 'dp', 'greedy', 'sortings'], 'dif': '1300'}
{'pro_id': '777A', 'name': 'Shell Game', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '1100'}
{'pro_id': '776G', 'name': 'Sherlock and the Encrypted Data', 'tags': ['bitmasks', 'combinatorics', 'dp'], 'dif': '2800'}
{'pro_id': '776F', 'name': "Sherlock's bet to Moriarty", 'tags': ['constructive algorithms', 'data structures', 'divide and conquer', 'geometry', 'graphs', 'implementation', 'trees'], 'dif': '2700'}
{'pro_id': '776E', 'name': 'The Holmes Children', 'tags': ['math', 'number theory'], 'dif': '2100'}
{'pro_id': '776D', 'name': 'The Door Problem', 'tags': ['2-sat', 'dfs and similar', 'dsu', 'graphs'], 'dif': '2000'}
{'pro_id': '776C', 'name': "Molly's Chemicals", 'tags': ['binary search', 'brute force', 'data structures', 'implementation', 'math'], 'dif': '1800'}
{'pro_id': '776B', 'name': 'Sherlock and his girlfriend', 'tags': ['constructive algorithms', 'number theory'], 'dif': '1200'}
{'pro_id': '776A', 'name': 'A Serial Killer', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '900'}
{'pro_id': '775A', 'name': 'University Schedule', 'tags': ['*special problem'], 'dif': '2900'}
{'pro_id': '774L', 'name': 'Bars', 'tags': ['*special problem', 'binary search'], 'dif': '2200'}
{'pro_id': '774K', 'name': 'Stepan and Vowels', 'tags': ['*special problem', 'implementation', 'strings'], 'dif': '1600'}
{'pro_id': '774J', 'name': "Stepan's Series", 'tags': ['*special problem', 'dp'], 'dif': '2100'}
{'pro_id': '774I', 'name': 'Composing Of String', 'tags': ['*special problem', 'dp'], 'dif': '2500'}
{'pro_id': '774H', 'name': 'Repairing Of String', 'tags': ['*special problem', 'constructive algorithms'], 'dif': '2400'}
{'pro_id': '774G', 'name': 'Perfectionist Arkadiy', 'tags': ['*special problem', 'number theory'], 'dif': '2900'}
{'pro_id': '774F', 'name': 'Pens And Days Of Week', 'tags': ['*special problem', 'binary search', 'number theory'], 'dif': '2600'}
{'pro_id': '774E', 'name': 'Big Number and Remainder', 'tags': ['*special problem', 'math', 'number theory'], 'dif': '2400'}
{'pro_id': '774D', 'name': 'Lie or Truth', 'tags': ['*special problem', 'constructive algorithms', 'sortings'], 'dif': '1500'}
{'pro_id': '774C', 'name': 'Maximum Number', 'tags': ['*special problem', 'constructive algorithms', 'greedy'], 'dif': '1200'}
{'pro_id': '774B', 'name': 'Significant Cups', 'tags': ['*special problem', 'binary search', 'data structures', 'two pointers'], 'dif': '2300'}
{'pro_id': '774A', 'name': 'Amusement Park', 'tags': ['*special problem', 'ternary search'], 'dif': '2300'}
{'pro_id': '773F', 'name': 'Test Data Generation', 'tags': ['combinatorics', 'divide and conquer', 'dp', 'fft', 'math', 'number theory'], 'dif': '3400'}
{'pro_id': '773E', 'name': 'Blog Post Rating', 'tags': ['data structures', 'sortings'], 'dif': '2900'}
{'pro_id': '773D', 'name': 'Perishable Roads', 'tags': ['dp', 'graphs', 'shortest paths'], 'dif': '2700'}
{'pro_id': '773C', 'name': 'Prairie Partition', 'tags': ['binary search', 'constructive algorithms', 'greedy', 'math'], 'dif': '2300'}
{'pro_id': '773B', 'name': 'Dynamic Problem Scoring', 'tags': ['brute force', 'greedy'], 'dif': '2100'}
{'pro_id': '773A', 'name': 'Success Rate', 'tags': ['binary search', 'math'], 'dif': '1700'}
{'pro_id': '772E', 'name': 'Verifying Kingdom', 'tags': ['binary search', 'divide and conquer', 'interactive', 'trees'], 'dif': '3200'}
{'pro_id': '772D', 'name': 'Varying Kibibits', 'tags': ['bitmasks', 'dp'], 'dif': '2700'}
{'pro_id': '772C', 'name': 'Vulnerable Kerbals', 'tags': ['constructive algorithms', 'dp', 'graphs', 'math', 'number theory'], 'dif': '2400'}
{'pro_id': '772B', 'name': 'Volatile Kite', 'tags': ['geometry'], 'dif': '1800'}
{'pro_id': '772A', 'name': 'Voltage Keepsake', 'tags': ['binary search', 'math'], 'dif': '1800'}
{'pro_id': '771F', 'name': 'Bear and Isomorphic Points', 'tags': ['geometry', 'two pointers'], 'dif': '3200'}
{'pro_id': '771E', 'name': 'Bear and Rectangle Strips', 'tags': ['dp', 'greedy'], 'dif': '3000'}
{'pro_id': '771D', 'name': 'Bear and Company', 'tags': ['dp'], 'dif': '2800'}
{'pro_id': '771C', 'name': 'Bear and Tree Jumps', 'tags': ['dfs and similar', 'dp', 'trees'], 'dif': '2100'}
{'pro_id': '771B', 'name': 'Bear and Different Names', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1500'}
{'pro_id': '771A', 'name': 'Bear and Friendship Condition', 'tags': ['dfs and similar', 'dsu', 'graphs'], 'dif': '1500'}
{'pro_id': '770D', 'name': 'Draw Brackets!', 'tags': ['*special problem', 'implementation'], 'dif': '1900'}
{'pro_id': '770C', 'name': 'Online Courses In BSU', 'tags': ['*special problem', 'dfs and similar', 'graphs', 'implementation'], 'dif': '1900'}
{'pro_id': '770B', 'name': 'Maximize Sum of Digits', 'tags': ['*special problem', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '770A', 'name': 'New Password', 'tags': ['*special problem', 'implementation'], 'dif': '1500'}
{'pro_id': '769D', 'name': 'k-Interesting Pairs Of Integers', 'tags': ['*special problem', 'bitmasks', 'brute force', 'meet-in-the-middle'], 'dif': '1800'}
{'pro_id': '769C', 'name': 'Cycle In Maze', 'tags': ['*special problem', 'dfs and similar', 'graphs', 'greedy', 'shortest paths'], 'dif': '1800'}
{'pro_id': '769B', 'name': 'News About Credit', 'tags': ['*special problem', 'greedy', 'two pointers'], 'dif': '1600'}
{'pro_id': '769A', 'name': 'Year of University Entrance', 'tags': ['*special problem', 'implementation', 'sortings'], 'dif': '1500'}
{'pro_id': '768G', 'name': 'The Winds of Winter', 'tags': ['binary search', 'data structures'], 'dif': '3000'}
{'pro_id': '768F', 'name': 'Barrels and boxes', 'tags': ['brute force', 'combinatorics', 'math', 'number theory', 'probabilities'], 'dif': '2300'}
{'pro_id': '768E', 'name': 'Game of Stones', 'tags': ['bitmasks', 'dp', 'games'], 'dif': '2000'}
{'pro_id': '768D', 'name': 'Jon and Orbs', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2100'}
{'pro_id': '768C', 'name': 'Jon Snow and his Favourite Number', 'tags': ['brute force', 'dp', 'implementation', 'sortings'], 'dif': '1800'}
{'pro_id': '768B', 'name': 'Code For 1', 'tags': ['constructive algorithms', 'dfs and similar', 'divide and conquer'], 'dif': '1600'}
{'pro_id': '768A', 'name': "Oath of the Night's Watch", 'tags': ['constructive algorithms', 'sortings'], 'dif': '1000'}
{'pro_id': '767E', 'name': 'Change-free', 'tags': ['greedy'], 'dif': '2700'}
{'pro_id': '767D', 'name': 'Cartons of milk', 'tags': ['binary search', 'data structures', 'greedy', 'sortings', 'two pointers'], 'dif': '2000'}
{'pro_id': '767C', 'name': 'Garland', 'tags': ['dfs and similar', 'graphs', 'greedy', 'trees'], 'dif': '2000'}
{'pro_id': '767B', 'name': 'The Queue', 'tags': ['brute force', 'greedy'], 'dif': '2000'}
{'pro_id': '767A', 'name': 'Snacktower', 'tags': ['data structures', 'implementation'], 'dif': '1200'}
{'pro_id': '766E', 'name': 'Mahmoud and a xor trip', 'tags': ['bitmasks', 'constructive algorithms', 'data structures', 'dfs and similar', 'dp', 'math', 'trees'], 'dif': '2200'}
{'pro_id': '766D', 'name': 'Mahmoud and a Dictionary', 'tags': ['data structures', 'dfs and similar', 'dp', 'dsu', 'graphs'], 'dif': '2000'}
{'pro_id': '766C', 'name': 'Mahmoud and a Message', 'tags': ['brute force', 'dp', 'greedy', 'strings'], 'dif': '1700'}
{'pro_id': '766B', 'name': 'Mahmoud and a Triangle', 'tags': ['constructive algorithms', 'geometry', 'greedy', 'math', 'number theory', 'sortings'], 'dif': '1100'}
{'pro_id': '766A', 'name': 'Mahmoud and Longest Uncommon Subsequence', 'tags': ['constructive algorithms', 'strings'], 'dif': '1000'}
{'pro_id': '765G', 'name': 'Math, math everywhere', 'tags': ['brute force', 'dp', 'math', 'meet-in-the-middle', 'number theory'], 'dif': '2800'}
{'pro_id': '765F', 'name': 'Souvenirs', 'tags': ['data structures'], 'dif': '2500'}
{'pro_id': '765E', 'name': 'Tree Folding', 'tags': ['dfs and similar', 'dp', 'greedy', 'implementation', 'trees'], 'dif': '2200'}
{'pro_id': '765D', 'name': 'Artsem and Saunders', 'tags': ['constructive algorithms', 'dsu', 'math'], 'dif': '1700'}
{'pro_id': '765C', 'name': 'Table Tennis Game 2', 'tags': ['math'], 'dif': '1300'}
{'pro_id': '765B', 'name': 'Code obfuscation', 'tags': ['greedy', 'implementation', 'strings'], 'dif': '1100'}
{'pro_id': '765A', 'name': 'Neverending competitions', 'tags': ['implementation', 'math'], 'dif': '900'}
{'pro_id': '764B', 'name': 'Timofey and cubes', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1000'}
{'pro_id': '764A', 'name': 'Taymyr is calling you', 'tags': ['brute force', 'implementation', 'math'], 'dif': '800'}
{'pro_id': '763E', 'name': 'Timofey and our friends animals', 'tags': ['data structures', 'divide and conquer', 'dsu'], 'dif': '2800'}
{'pro_id': '763D', 'name': 'Timofey and a flat tree', 'tags': ['data structures', 'graphs', 'hashing', 'shortest paths', 'trees'], 'dif': '2800'}
{'pro_id': '763C', 'name': 'Timofey and remoduling', 'tags': ['brute force', 'implementation', 'math', 'number theory'], 'dif': '2500'}
{'pro_id': '763B', 'name': 'Timofey and rectangles', 'tags': ['constructive algorithms', 'geometry'], 'dif': '2200'}
{'pro_id': '763A', 'name': 'Timofey and a tree', 'tags': ['dfs and similar', 'dp', 'dsu', 'graphs', 'implementation', 'trees'], 'dif': '1600'}
{'pro_id': '762F', 'name': 'Tree nesting', 'tags': ['combinatorics', 'graphs', 'trees'], 'dif': '2900'}
{'pro_id': '762E', 'name': 'Radio stations', 'tags': ['binary search', 'data structures'], 'dif': '2400'}
{'pro_id': '762D', 'name': 'Maximum path', 'tags': ['dp', 'implementation'], 'dif': '2400'}
{'pro_id': '762C', 'name': 'Two strings', 'tags': ['binary search', 'hashing', 'strings', 'two pointers'], 'dif': '2100'}
{'pro_id': '762B', 'name': 'USB vs. PS/2', 'tags': ['greedy', 'implementation', 'sortings', 'two pointers'], 'dif': '1400'}
{'pro_id': '762A', 'name': 'k-th divisor', 'tags': ['math', 'number theory'], 'dif': '1500'}
{'pro_id': '761F', 'name': 'Dasha and Photos', 'tags': ['brute force', 'data structures', 'dp', 'implementation'], 'dif': '2900'}
{'pro_id': '761E', 'name': 'Dasha and Puzzle', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs', 'greedy', 'trees'], 'dif': '2000'}
{'pro_id': '761D', 'name': 'Dasha and Very Difficult Problem', 'tags': ['binary search', 'brute force', 'constructive algorithms', 'greedy', 'sortings'], 'dif': '1700'}
{'pro_id': '761C', 'name': 'Dasha and Password', 'tags': ['brute force', 'dp', 'implementation'], 'dif': '1600'}
{'pro_id': '761B', 'name': 'Dasha and friends', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1300'}
{'pro_id': '761A', 'name': 'Dasha and Stairs', 'tags': ['brute force', 'constructive algorithms', 'implementation', 'math'], 'dif': '1100'}
{'pro_id': '760B', 'name': 'Frodo and pillows', 'tags': ['binary search', 'greedy'], 'dif': '1500'}
{'pro_id': '760A', 'name': 'Petr and a calendar', 'tags': ['implementation', 'math'], 'dif': '900'}
{'pro_id': '758F', 'name': 'Geometrical Progression', 'tags': ['brute force', 'math', 'number theory'], 'dif': '2500'}
{'pro_id': '758E', 'name': 'Broken Tree', 'tags': ['dfs and similar', 'dp', 'graphs', 'greedy', 'trees'], 'dif': '2900'}
{'pro_id': '758D', 'name': 'Ability To Convert', 'tags': ['constructive algorithms', 'dp', 'greedy', 'math', 'strings'], 'dif': '1900'}
{'pro_id': '758C', 'name': 'Unfair Poll', 'tags': ['binary search', 'constructive algorithms', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '758B', 'name': 'Blown Garland', 'tags': ['brute force', 'implementation', 'number theory'], 'dif': '1200'}
{'pro_id': '758A', 'name': 'Holiday Of Equality', 'tags': ['implementation', 'math'], 'dif': '700'}
{'pro_id': '757G', 'name': 'Can Bash Save the Day?', 'tags': ['data structures', 'divide and conquer', 'graphs', 'trees'], 'dif': '2500'}
{'pro_id': '757F', 'name': 'Team Rocket Rises Again', 'tags': ['data structures', 'graphs', 'shortest paths'], 'dif': '2700'}
{'pro_id': '757E', 'name': 'Bash Plays with Functions', 'tags': ['brute force', 'combinatorics', 'dp', 'number theory'], 'dif': '2400'}
{'pro_id': '757D', 'name': "Felicity's Big Secret Revealed", 'tags': ['bitmasks', 'dp'], 'dif': '2200'}
{'pro_id': '757C', 'name': 'Felicity is Coming!', 'tags': ['data structures', 'hashing', 'sortings', 'strings'], 'dif': '1900'}
{'pro_id': '757B', 'name': "Bash's Big Day", 'tags': ['greedy', 'math', 'number theory'], 'dif': '1400'}
{'pro_id': '757A', 'name': "Gotta Catch Em' All!", 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '756F', 'name': 'Long number', 'tags': ['expression parsing', 'math', 'number theory'], 'dif': '3200'}
{'pro_id': '756E', 'name': 'Byteland coins', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '3200'}
{'pro_id': '756D', 'name': 'Bacterial Melee', 'tags': ['brute force', 'combinatorics', 'dp', 'string suffix structures'], 'dif': '2500'}
{'pro_id': '756C', 'name': 'Nikita and stack', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '756B', 'name': 'Travel Card', 'tags': ['binary search', 'dp'], 'dif': '1700'}
{'pro_id': '756A', 'name': 'Pavel and barbecue', 'tags': ['constructive algorithms', 'dfs and similar'], 'dif': '1600'}
{'pro_id': '755G', 'name': 'PolandBall and Many Other Balls', 'tags': ['combinatorics', 'divide and conquer', 'dp', 'fft', 'math', 'number theory'], 'dif': '3100'}
{'pro_id': '755F', 'name': 'PolandBall and Gifts', 'tags': ['bitmasks', 'dp', 'greedy'], 'dif': '2600'}
{'pro_id': '755E', 'name': 'PolandBall and White-Red graph', 'tags': ['constructive algorithms', 'graphs', 'shortest paths'], 'dif': '2400'}
{'pro_id': '755D', 'name': 'PolandBall and Polygon', 'tags': ['data structures'], 'dif': '2000'}
{'pro_id': '755C', 'name': 'PolandBall and Forest', 'tags': ['dfs and similar', 'dsu', 'graphs', 'interactive', 'trees'], 'dif': '1300'}
{'pro_id': '755B', 'name': 'PolandBall and Game', 'tags': ['binary search', 'data structures', 'games', 'greedy', 'sortings', 'strings'], 'dif': '1200'}
{'pro_id': '755A', 'name': 'PolandBall and Hypothesis', 'tags': ['brute force', 'graphs', 'math', 'number theory'], 'dif': '900'}
{'pro_id': '754E', 'name': 'Dasha and cyclic table', 'tags': ['bitmasks', 'brute force', 'fft', 'strings', 'trees'], 'dif': '2800'}
{'pro_id': '754D', 'name': 'Fedor and coupons', 'tags': ['binary search', 'data structures', 'greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '754C', 'name': 'Vladik and chat', 'tags': ['brute force', 'constructive algorithms', 'dp', 'implementation', 'strings'], 'dif': '2200'}
{'pro_id': '754B', 'name': 'Ilya and tic-tac-toe game', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '754A', 'name': 'Lesha and array splitting', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '753C', 'name': 'Interactive Bulls and Cows (Hard)', 'tags': ['brute force', 'constructive algorithms', 'interactive'], 'dif': '2400'}
{'pro_id': '753B', 'name': 'Interactive Bulls and Cows (Easy)', 'tags': ['brute force', 'constructive algorithms', 'implementation'], 'dif': '1600'}
{'pro_id': '753A', 'name': 'Santa Claus and Candies', 'tags': ['dp', 'greedy', 'math'], 'dif': '1100'}
{'pro_id': '750H', 'name': 'New Year and Snowy Grid', 'tags': ['dfs and similar', 'dsu', 'graphs', 'interactive'], 'dif': '3400'}
{'pro_id': '750G', 'name': 'New Year and Binary Tree Paths', 'tags': ['bitmasks', 'brute force', 'combinatorics', 'dp'], 'dif': '3100'}
{'pro_id': '750F', 'name': 'New Year and Finding Roots', 'tags': ['constructive algorithms', 'implementation', 'interactive', 'trees'], 'dif': '2700'}
{'pro_id': '750E', 'name': 'New Year and Old Subsequence', 'tags': ['data structures', 'divide and conquer', 'dp', 'matrices'], 'dif': '2600'}
{'pro_id': '750D', 'name': 'New Year and Fireworks', 'tags': ['brute force', 'data structures', 'dfs and similar', 'dp', 'implementation'], 'dif': '1900'}
{'pro_id': '750C', 'name': 'New Year and Rating', 'tags': ['binary search', 'greedy', 'math'], 'dif': '1600'}
{'pro_id': '750B', 'name': 'New Year and North Pole', 'tags': ['geometry', 'implementation'], 'dif': '1300'}
{'pro_id': '750A', 'name': 'New Year and Hurry', 'tags': ['binary search', 'brute force', 'implementation', 'math'], 'dif': '800'}
{'pro_id': '749E', 'name': 'Inversions After Shuffle', 'tags': ['data structures', 'probabilities'], 'dif': '2600'}
{'pro_id': '749D', 'name': 'Leaving Auction', 'tags': ['binary search', 'data structures'], 'dif': '2000'}
{'pro_id': '749C', 'name': 'Voting', 'tags': ['greedy', 'implementation', 'two pointers'], 'dif': '1600'}
{'pro_id': '749B', 'name': 'Parallelogram is Back', 'tags': ['brute force', 'constructive algorithms', 'geometry'], 'dif': '1300'}
{'pro_id': '749A', 'name': 'Bachgold Problem', 'tags': ['greedy', 'implementation', 'math', 'number theory'], 'dif': '700'}
{'pro_id': '748F', 'name': 'Santa Clauses and a Soccer Championship', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs', 'trees'], 'dif': '2500'}
{'pro_id': '748E', 'name': 'Santa Claus and Tangerines', 'tags': ['binary search', 'data structures', 'greedy', 'two pointers'], 'dif': '2000'}
{'pro_id': '748D', 'name': 'Santa Claus and a Palindrome', 'tags': ['constructive algorithms', 'data structures', 'greedy'], 'dif': '2000'}
{'pro_id': '748C', 'name': 'Santa Claus and Robot', 'tags': ['constructive algorithms', 'math'], 'dif': '1400'}
{'pro_id': '748B', 'name': 'Santa Claus and Keyboard Check', 'tags': ['implementation', 'strings'], 'dif': '1500'}
{'pro_id': '748A', 'name': 'Santa Claus and a Place in a Class', 'tags': ['implementation', 'math'], 'dif': '900'}
{'pro_id': '747F', 'name': 'Igor and Interesting Numbers', 'tags': ['brute force', 'combinatorics', 'dp', 'math'], 'dif': '2600'}
{'pro_id': '747E', 'name': 'Comments', 'tags': ['dfs and similar', 'expression parsing', 'implementation', 'strings'], 'dif': '1700'}
{'pro_id': '747D', 'name': 'Winter Is Coming', 'tags': ['dp', 'greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '747C', 'name': 'Servers', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '747B', 'name': "Mammoth's Genome Decoding", 'tags': ['implementation', 'strings'], 'dif': '1000'}
{'pro_id': '747A', 'name': 'Display Size', 'tags': ['brute force', 'math'], 'dif': '1000'}
{'pro_id': '746G', 'name': 'New Roads', 'tags': ['constructive algorithms', 'graphs', 'trees'], 'dif': '2100'}
{'pro_id': '746F', 'name': 'Music in Car', 'tags': ['data structures', 'greedy', 'two pointers'], 'dif': '2500'}
{'pro_id': '746E', 'name': 'Numbers Exchange', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1800'}
{'pro_id': '746D', 'name': 'Green and Black Tea', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '1500'}
{'pro_id': '746C', 'name': 'Tram', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '1600'}
{'pro_id': '746B', 'name': 'Decoding', 'tags': ['implementation', 'strings'], 'dif': '900'}
{'pro_id': '746A', 'name': 'Compote', 'tags': ['implementation', 'math'], 'dif': '800'}
{'pro_id': '745B', 'name': 'Hongcow Solves A Puzzle', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '745A', 'name': 'Hongcow Learns the Cyclic Shift', 'tags': ['implementation', 'strings'], 'dif': '900'}
{'pro_id': '744E', 'name': 'Hongcow Masters the Cyclic Shift', 'tags': ['strings', 'two pointers'], 'dif': '3100'}
{'pro_id': '744D', 'name': 'Hongcow Draws a Circle', 'tags': ['geometry'], 'dif': '3000'}
{'pro_id': '744C', 'name': 'Hongcow Buys a Deck of Cards', 'tags': ['bitmasks', 'brute force', 'dp'], 'dif': '2500'}
{'pro_id': '744B', 'name': "Hongcow's Game", 'tags': ['bitmasks', 'divide and conquer', 'interactive'], 'dif': '2000'}
{'pro_id': '744A', 'name': 'Hongcow Builds A Nation', 'tags': ['dfs and similar', 'graphs'], 'dif': '1500'}
{'pro_id': '743E', 'name': 'Vladik and cards', 'tags': ['binary search', 'bitmasks', 'brute force', 'dp'], 'dif': '2300'}
{'pro_id': '743D', 'name': 'Chloe and pleasant prizes', 'tags': ['dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '1800'}
{'pro_id': '743C', 'name': 'Vladik and fractions', 'tags': ['brute force', 'constructive algorithms', 'math', 'number theory'], 'dif': '1500'}
{'pro_id': '743B', 'name': 'Chloe and the sequence', 'tags': ['binary search', 'bitmasks', 'constructive algorithms', 'implementation'], 'dif': '1200'}
{'pro_id': '743A', 'name': 'Vladik and flights', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '742B', 'name': 'Arpa’s obvious problem and Mehrdad’s terrible solution', 'tags': ['brute force', 'math', 'number theory'], 'dif': '1500'}
{'pro_id': '742A', 'name': 'Arpa’s hard exam and Mehrdad’s naive cheat', 'tags': ['implementation', 'math', 'number theory'], 'dif': '1000'}
{'pro_id': '741E', 'name': 'Arpa’s abnormal DNA and Mehrdad’s deep interest', 'tags': ['data structures', 'string suffix structures'], 'dif': '3300'}
{'pro_id': '741D', 'name': 'Arpa’s letter-marked tree and Mehrdad’s Dokhtar-kosh paths', 'tags': ['data structures', 'dfs and similar', 'trees'], 'dif': '2700'}
{'pro_id': '741C', 'name': 'Arpa’s overnight party and Mehrdad’s silent entering', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs'], 'dif': '2600'}
{'pro_id': '741B', 'name': "Arpa's weak amphitheater and Mehrdad's valuable Hoses", 'tags': ['dfs and similar', 'dp', 'dsu'], 'dif': '1700'}
{'pro_id': '741A', 'name': "Arpa's loud Owf and Mehrdad's evil plan", 'tags': ['dfs and similar', 'math'], 'dif': '1600'}
{'pro_id': '740B', 'name': 'Alyona and flowers', 'tags': ['constructive algorithms'], 'dif': '1200'}
{'pro_id': '740A', 'name': 'Alyona and copybooks', 'tags': ['brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '739E', 'name': 'Gosha is hunting', 'tags': ['brute force', 'data structures', 'dp', 'flows', 'math', 'probabilities', 'sortings'], 'dif': '2900'}
{'pro_id': '739D', 'name': 'Recover a functional graph', 'tags': ['graph matchings'], 'dif': '3400'}
{'pro_id': '739C', 'name': 'Alyona and towers', 'tags': ['data structures'], 'dif': '2500'}
{'pro_id': '739B', 'name': 'Alyona and a tree', 'tags': ['binary search', 'data structures', 'dfs and similar', 'graphs', 'trees'], 'dif': '2000'}
{'pro_id': '739A', 'name': 'Alyona and mex', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1600'}
{'pro_id': '737F', 'name': 'Dirty plates', 'tags': ['constructive algorithms', 'math'], 'dif': '3300'}
{'pro_id': '737E', 'name': 'Tanya is 5!', 'tags': ['graph matchings', 'graphs', 'greedy', 'schedules'], 'dif': '3300'}
{'pro_id': '736E', 'name': 'Chess Championship', 'tags': ['constructive algorithms', 'flows', 'greedy', 'math'], 'dif': '2800'}
{'pro_id': '736D', 'name': 'Permutations', 'tags': ['math', 'matrices'], 'dif': '2700'}
{'pro_id': '735E', 'name': 'Ostap and Tree', 'tags': ['dp', 'trees'], 'dif': '2800'}
{'pro_id': '735D', 'name': 'Taxes', 'tags': ['math', 'number theory'], 'dif': '1600'}
{'pro_id': '735C', 'name': 'Tennis Championship', 'tags': ['combinatorics', 'constructive algorithms', 'greedy', 'math'], 'dif': '1700'}
{'pro_id': '735B', 'name': 'Urbanization', 'tags': ['greedy', 'number theory', 'sortings'], 'dif': '1200'}
{'pro_id': '735A', 'name': 'Ostap and Grasshopper', 'tags': ['implementation', 'strings'], 'dif': '1000'}
{'pro_id': '734F', 'name': 'Anton and School', 'tags': ['bitmasks', 'constructive algorithms', 'implementation', 'math'], 'dif': '2600'}
{'pro_id': '734E', 'name': 'Anton and Tree', 'tags': ['dfs and similar', 'dp', 'trees'], 'dif': '2100'}
{'pro_id': '734D', 'name': 'Anton and Chess', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '734C', 'name': 'Anton and Making Potions', 'tags': ['binary search', 'dp', 'greedy', 'two pointers'], 'dif': '1600'}
{'pro_id': '734B', 'name': 'Anton and Digits', 'tags': ['brute force', 'greedy', 'implementation', 'math'], 'dif': '800'}
{'pro_id': '734A', 'name': 'Anton and Danik', 'tags': ['implementation', 'strings'], 'dif': '700'}
{'pro_id': '733F', 'name': 'Drivers Dissatisfaction', 'tags': ['data structures', 'dsu', 'graphs', 'trees'], 'dif': '2500'}
{'pro_id': '733E', 'name': 'Sleep in Class', 'tags': ['constructive algorithms', 'data structures', 'math', 'two pointers'], 'dif': '2500'}
{'pro_id': '733D', 'name': 'Kostya the Sculptor', 'tags': ['data structures', 'hashing'], 'dif': '1600'}
{'pro_id': '733C', 'name': 'Epidemic in Monstropolis', 'tags': ['constructive algorithms', 'dp', 'greedy', 'two pointers'], 'dif': '1800'}
{'pro_id': '733B', 'name': 'Parade', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '733A', 'name': 'Grasshopper And the String', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '732F', 'name': 'Tourist Reform', 'tags': ['dfs and similar', 'graphs'], 'dif': '2400'}
{'pro_id': '732E', 'name': 'Sockets', 'tags': ['greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '732D', 'name': 'Exams', 'tags': ['binary search', 'greedy', 'sortings'], 'dif': '1700'}
{'pro_id': '732C', 'name': 'Sanatorium', 'tags': ['binary search', 'constructive algorithms', 'greedy', 'implementation', 'math'], 'dif': '1300'}
{'pro_id': '732B', 'name': 'Cormen --- The Best Friend Of a Man', 'tags': ['dp', 'greedy'], 'dif': '1100'}
{'pro_id': '732A', 'name': 'Buy a Shovel', 'tags': ['brute force', 'constructive algorithms', 'implementation', 'math'], 'dif': '800'}
{'pro_id': '731F', 'name': 'Video Cards', 'tags': ['brute force', 'data structures', 'implementation', 'math', 'number theory'], 'dif': '1900'}
{'pro_id': '731E', 'name': 'Funny Game', 'tags': ['dp', 'games'], 'dif': '2300'}
{'pro_id': '731D', 'name': '80-th Level Archeology', 'tags': ['brute force', 'data structures', 'greedy', 'sortings'], 'dif': '2200'}
{'pro_id': '731C', 'name': 'Socks', 'tags': ['dfs and similar', 'dsu', 'graphs', 'greedy'], 'dif': '1600'}
{'pro_id': '731B', 'name': 'Coupons and Discounts', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1200'}
{'pro_id': '731A', 'name': 'Night at the Museum', 'tags': ['implementation', 'strings'], 'dif': '800'}
{'pro_id': '730L', 'name': 'Expression Queries', 'tags': [], 'dif': '3300'}
{'pro_id': '730K', 'name': 'Roads Orientation Problem', 'tags': [], 'dif': '3300'}
{'pro_id': '730J', 'name': 'Bottles', 'tags': ['dp'], 'dif': '2000'}
{'pro_id': '730I', 'name': 'Olympiad in Programming and Sports', 'tags': ['dp', 'flows', 'greedy'], 'dif': '2200'}
{'pro_id': '730H', 'name': 'Delete Them', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '730G', 'name': 'Car Repair Shop', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '730F', 'name': 'Ber Patio', 'tags': [], 'dif': '3200'}
{'pro_id': '730E', 'name': 'Award Ceremony', 'tags': ['greedy'], 'dif': '2400'}
{'pro_id': '730D', 'name': 'Running Over The Bridges', 'tags': ['greedy', 'implementation'], 'dif': '2400'}
{'pro_id': '730C', 'name': 'Bulmart', 'tags': ['binary search', 'dfs and similar'], 'dif': '2200'}
{'pro_id': '730B', 'name': 'Minimum and Maximum', 'tags': ['constructive algorithms', 'interactive'], 'dif': '1900'}
{'pro_id': '730A', 'name': 'Toda 2', 'tags': ['greedy'], 'dif': '2000'}
{'pro_id': '729F', 'name': 'Financiers Game', 'tags': ['dp'], 'dif': '2600'}
{'pro_id': '729E', 'name': 'Subordinates', 'tags': ['constructive algorithms', 'data structures', 'graphs', 'greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '729D', 'name': 'Sea Battle', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '1700'}
{'pro_id': '729C', 'name': 'Road to Cinema', 'tags': ['binary search', 'greedy', 'sortings'], 'dif': '1700'}
{'pro_id': '729B', 'name': 'Spotlights', 'tags': ['dp', 'implementation'], 'dif': '1300'}
{'pro_id': '729A', 'name': 'Interview with Oleg', 'tags': ['implementation', 'strings'], 'dif': '1000'}
{'pro_id': '727F', 'name': "Polycarp's problems", 'tags': ['binary search', 'dp', 'greedy'], 'dif': '2300'}
{'pro_id': '727E', 'name': 'Games on a CD', 'tags': ['data structures', 'hashing', 'string suffix structures', 'strings'], 'dif': '2300'}
{'pro_id': '727D', 'name': 'T-shirts Distribution', 'tags': ['constructive algorithms', 'flows', 'greedy'], 'dif': '1800'}
{'pro_id': '727C', 'name': 'Guess the Array', 'tags': ['constructive algorithms', 'interactive', 'math'], 'dif': '1400'}
{'pro_id': '727B', 'name': 'Bill Total Value', 'tags': ['expression parsing', 'implementation', 'strings'], 'dif': '1600'}
{'pro_id': '727A', 'name': 'Transformation: from A to B', 'tags': ['brute force', 'dfs and similar', 'math'], 'dif': '1100'}
{'pro_id': '725G', 'name': 'Messages on a Tree', 'tags': [], 'dif': '3300'}
{'pro_id': '725F', 'name': 'Family Photos', 'tags': ['games', 'greedy'], 'dif': '2900'}
{'pro_id': '725E', 'name': 'Too Much Money', 'tags': ['brute force', 'greedy'], 'dif': '2500'}
{'pro_id': '725D', 'name': 'Contest Balloons', 'tags': ['data structures', 'greedy'], 'dif': '1800'}
{'pro_id': '725C', 'name': 'Hidden Word', 'tags': ['brute force', 'constructive algorithms', 'implementation', 'strings'], 'dif': '1600'}
{'pro_id': '725B', 'name': 'Food on the Plane', 'tags': ['implementation', 'math'], 'dif': '1200'}
{'pro_id': '725A', 'name': 'Jumping Ball', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '724G', 'name': 'Xor-matic Number of the Graph', 'tags': ['bitmasks', 'graphs', 'math', 'number theory', 'trees'], 'dif': '2600'}
{'pro_id': '724F', 'name': 'Uniformly Branched Trees', 'tags': ['combinatorics', 'dp', 'trees'], 'dif': '2800'}
{'pro_id': '724E', 'name': 'Goods transportation', 'tags': ['dp', 'flows', 'greedy'], 'dif': '2900'}
{'pro_id': '724D', 'name': 'Dense Subsequence', 'tags': ['data structures', 'greedy', 'strings'], 'dif': '1900'}
{'pro_id': '724C', 'name': 'Ray Tracing', 'tags': ['greedy', 'hashing', 'implementation', 'math', 'number theory', 'sortings'], 'dif': '1800'}
{'pro_id': '724B', 'name': 'Batch Sort', 'tags': ['brute force', 'greedy', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '724A', 'name': 'Checking the Calendar', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '723F', 'name': 'st-Spanning Tree', 'tags': ['dsu', 'graphs', 'greedy', 'implementation'], 'dif': '2200'}
{'pro_id': '723E', 'name': 'One-Way Reform', 'tags': ['constructive algorithms', 'dfs and similar', 'flows', 'graphs', 'greedy'], 'dif': '2300'}
{'pro_id': '723D', 'name': 'Lakes in Berland', 'tags': ['dfs and similar', 'dsu', 'graphs', 'greedy', 'implementation'], 'dif': '1600'}
{'pro_id': '723C', 'name': 'Polycarp at the Radio', 'tags': ['greedy'], 'dif': '1600'}
{'pro_id': '723B', 'name': 'Text Document Analysis', 'tags': ['expression parsing', 'implementation', 'strings'], 'dif': '1100'}
{'pro_id': '723A', 'name': 'The New Year: Meeting Friends', 'tags': ['implementation', 'math', 'sortings'], 'dif': '800'}
{'pro_id': '722F', 'name': 'Cyclic Cipher', 'tags': ['chinese remainder theorem', 'data structures', 'implementation', 'number theory', 'two pointers'], 'dif': '2800'}
{'pro_id': '722E', 'name': 'Research Rover', 'tags': ['combinatorics', 'dp'], 'dif': '2800'}
{'pro_id': '722D', 'name': 'Generating Sets', 'tags': ['binary search', 'data structures', 'dfs and similar', 'greedy', 'strings', 'trees'], 'dif': '1900'}
{'pro_id': '722C', 'name': 'Destroying Array', 'tags': ['data structures', 'dsu'], 'dif': '1600'}
{'pro_id': '722B', 'name': 'Verse Pattern', 'tags': ['implementation', 'strings'], 'dif': '1200'}
{'pro_id': '722A', 'name': 'Broken Clock', 'tags': ['brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '721E', 'name': 'Road to Home', 'tags': ['binary search', 'dp'], 'dif': '2800'}
{'pro_id': '721D', 'name': 'Maxim and Array', 'tags': ['constructive algorithms', 'data structures', 'greedy', 'math'], 'dif': '2000'}
{'pro_id': '721C', 'name': 'Journey', 'tags': ['dp', 'graphs'], 'dif': '1800'}
{'pro_id': '721B', 'name': 'Passwords', 'tags': ['implementation', 'math', 'sortings', 'strings'], 'dif': '1200'}
{'pro_id': '721A', 'name': 'One-dimensional Japanese Crossword', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '720F', 'name': 'Array Covering', 'tags': ['data structures'], 'dif': '3100'}
{'pro_id': '720E', 'name': 'Cipher', 'tags': ['implementation'], 'dif': '3100'}
{'pro_id': '720D', 'name': 'Slalom', 'tags': ['data structures', 'dp', 'sortings'], 'dif': '3100'}
{'pro_id': '720C', 'name': 'Homework', 'tags': ['constructive algorithms'], 'dif': '3100'}
{'pro_id': '720B', 'name': 'Cactusophobia', 'tags': ['dfs and similar', 'flows'], 'dif': '2300'}
{'pro_id': '720A', 'name': 'Closing ceremony', 'tags': ['greedy'], 'dif': '2000'}
{'pro_id': '719B', 'name': 'Anatoly and Cockroaches', 'tags': ['greedy'], 'dif': '1400'}
{'pro_id': '719A', 'name': 'Vitya in the Countryside', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '718E', 'name': "Matvey's Birthday", 'tags': ['bitmasks', 'graphs'], 'dif': '3400'}
{'pro_id': '718D', 'name': 'Andrew and Chemistry', 'tags': ['dp', 'hashing', 'trees'], 'dif': '2900'}
{'pro_id': '718C', 'name': 'Sasha and Array', 'tags': ['data structures', 'math', 'matrices'], 'dif': '2300'}
{'pro_id': '718A', 'name': 'Efim and Strange Grade', 'tags': ['dp', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '717I', 'name': 'Cowboy Beblop at his computer', 'tags': ['geometry'], 'dif': '3800'}
{'pro_id': '717H', 'name': 'Pokermon League challenge', 'tags': ['math', 'probabilities'], 'dif': '2400'}
{'pro_id': '717G', 'name': 'Underfail', 'tags': ['flows'], 'dif': '2400'}
{'pro_id': '717F', 'name': 'Heroes of Making Magic III', 'tags': ['data structures'], 'dif': '2700'}
{'pro_id': '717E', 'name': 'Paint it really, really dark gray', 'tags': ['dfs and similar'], 'dif': '1900'}
{'pro_id': '717D', 'name': 'Dexterina’s Lab', 'tags': ['games', 'matrices', 'probabilities'], 'dif': '1900'}
{'pro_id': '717C', 'name': 'Potions Homework', 'tags': ['implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '717B', 'name': 'R3D3’s Summer Adventure', 'tags': ['dp', 'greedy'], 'dif': '3200'}
{'pro_id': '717A', 'name': 'Festival Organization', 'tags': ['math', 'number theory'], 'dif': '3000'}
{'pro_id': '716B', 'name': 'Complete the Word', 'tags': ['greedy', 'two pointers'], 'dif': '1400'}
{'pro_id': '716A', 'name': 'Crazy Computer', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '715E', 'name': 'Complete the Permutations', 'tags': ['combinatorics', 'fft', 'graphs', 'math'], 'dif': '3400'}
{'pro_id': '715D', 'name': 'Create a Maze', 'tags': ['constructive algorithms'], 'dif': '3000'}
{'pro_id': '715C', 'name': 'Digit Tree', 'tags': ['dfs and similar', 'divide and conquer', 'dsu', 'trees'], 'dif': '2800'}
{'pro_id': '715B', 'name': 'Complete The Graph', 'tags': ['binary search', 'constructive algorithms', 'graphs', 'shortest paths'], 'dif': '2200'}
{'pro_id': '715A', 'name': 'Plus and Square Root', 'tags': ['constructive algorithms', 'math'], 'dif': '1600'}
{'pro_id': '714B', 'name': 'Filya and Homework', 'tags': ['implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '714A', 'name': 'Meeting of Old Friends', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '713E', 'name': 'Sonya Partymaker', 'tags': ['binary search', 'dp'], 'dif': '3100'}
{'pro_id': '713D', 'name': 'Animals and Puzzle', 'tags': ['binary search', 'data structures'], 'dif': '2700'}
{'pro_id': '713C', 'name': 'Sonya and Problem Wihtout a Legend', 'tags': ['dp', 'sortings'], 'dif': '2400'}
{'pro_id': '713B', 'name': 'Searching Rectangles', 'tags': ['binary search', 'constructive algorithms', 'interactive'], 'dif': '2200'}
{'pro_id': '713A', 'name': 'Sonya and Queries', 'tags': ['data structures', 'implementation'], 'dif': '1500'}
{'pro_id': '712E', 'name': 'Memory and Casinos', 'tags': ['data structures', 'math', 'probabilities'], 'dif': '2700'}
{'pro_id': '712D', 'name': 'Memory and Scores', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2100'}
{'pro_id': '712C', 'name': 'Memory and De-Evolution', 'tags': ['greedy', 'math'], 'dif': '1600'}
{'pro_id': '712B', 'name': 'Memory and Trident', 'tags': ['implementation', 'strings'], 'dif': '1200'}
{'pro_id': '712A', 'name': 'Memory and Crow', 'tags': ['implementation', 'math'], 'dif': '900'}
{'pro_id': '711E', 'name': 'ZS and The Birthday Paradox', 'tags': ['math', 'number theory', 'probabilities'], 'dif': '2400'}
{'pro_id': '711D', 'name': 'Directed Roads', 'tags': ['combinatorics', 'dfs and similar', 'graphs', 'math'], 'dif': '1900'}
{'pro_id': '711C', 'name': 'Coloring Trees', 'tags': ['dp'], 'dif': '1700'}
{'pro_id': '711B', 'name': 'Chris and Magic Square', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1400'}
{'pro_id': '711A', 'name': 'Bus to Udayland', 'tags': ['brute force', 'implementation'], 'dif': '700'}
{'pro_id': '710F', 'name': 'String Set Queries', 'tags': ['brute force', 'data structures', 'hashing', 'string suffix structures', 'strings'], 'dif': '2700'}
{'pro_id': '710E', 'name': 'Generate a String', 'tags': ['dfs and similar', 'dp'], 'dif': '2100'}
{'pro_id': '710D', 'name': 'Two Arithmetic Progressions', 'tags': ['math'], 'dif': '2500'}
{'pro_id': '710C', 'name': 'Magic Odd Square', 'tags': ['constructive algorithms'], 'dif': '1600'}
{'pro_id': '710B', 'name': 'Optimal Point on a Line', 'tags': ['brute force', 'sortings'], 'dif': '1400'}
{'pro_id': '710A', 'name': 'King Moves', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '709B', 'name': 'Checkpoints', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1500'}
{'pro_id': '709A', 'name': 'Juicer', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '708E', 'name': "Student's Camp", 'tags': ['dp', 'math'], 'dif': '3100'}
{'pro_id': '708D', 'name': 'Incorrect Flow', 'tags': ['flows'], 'dif': '2900'}
{'pro_id': '708C', 'name': 'Centroids', 'tags': ['data structures', 'dfs and similar', 'dp', 'graphs', 'greedy', 'trees'], 'dif': '2500'}
{'pro_id': '708B', 'name': 'Recover the String', 'tags': ['constructive algorithms', 'greedy', 'implementation', 'math'], 'dif': '1900'}
{'pro_id': '708A', 'name': 'Letters Cyclic Shift', 'tags': ['constructive algorithms', 'greedy', 'implementation', 'strings'], 'dif': '1200'}
{'pro_id': '707E', 'name': 'Garlands', 'tags': ['data structures'], 'dif': '2500'}
{'pro_id': '707D', 'name': 'Persistent Bookcase', 'tags': ['bitmasks', 'data structures', 'dfs and similar', 'implementation'], 'dif': '2100'}
{'pro_id': '707C', 'name': 'Pythagorean Triples', 'tags': ['math', 'number theory'], 'dif': '1500'}
{'pro_id': '707B', 'name': 'Bakery', 'tags': ['graphs'], 'dif': '1300'}
{'pro_id': '707A', 'name': "Brain's Photos", 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '706E', 'name': 'Working routine', 'tags': ['data structures', 'implementation'], 'dif': '2600'}
{'pro_id': '706D', 'name': "Vasiliy's Multiset", 'tags': ['binary search', 'bitmasks', 'data structures', 'trees'], 'dif': '1800'}
{'pro_id': '706C', 'name': 'Hard problem', 'tags': ['dp', 'strings'], 'dif': '1600'}
{'pro_id': '706B', 'name': 'Interesting drink', 'tags': ['binary search', 'dp', 'implementation'], 'dif': '1100'}
{'pro_id': '706A', 'name': 'Beru-taxi', 'tags': ['brute force', 'geometry', 'implementation'], 'dif': '1100'}
{'pro_id': '705B', 'name': 'Spider Man', 'tags': ['games', 'math'], 'dif': '1200'}
{'pro_id': '705A', 'name': 'Hulk', 'tags': ['implementation'], 'dif': '600'}
{'pro_id': '704E', 'name': 'Iron Man', 'tags': ['data structures', 'geometry', 'trees'], 'dif': '3500'}
{'pro_id': '704D', 'name': 'Captain America', 'tags': ['flows', 'greedy'], 'dif': '3000'}
{'pro_id': '704C', 'name': 'Black Widow', 'tags': ['dp', 'graphs', 'implementation', 'math'], 'dif': '2800'}
{'pro_id': '704B', 'name': 'Ant Man', 'tags': ['dp', 'graphs', 'greedy'], 'dif': '2700'}
{'pro_id': '704A', 'name': 'Thor', 'tags': ['brute force', 'data structures', 'implementation'], 'dif': '1600'}
{'pro_id': '703E', 'name': 'Mishka and Divisors', 'tags': ['dp', 'number theory'], 'dif': '2900'}
{'pro_id': '703D', 'name': 'Mishka and Interesting sum', 'tags': ['data structures'], 'dif': '2100'}
{'pro_id': '703C', 'name': 'Chris and Road', 'tags': ['geometry', 'implementation'], 'dif': '2100'}
{'pro_id': '703B', 'name': 'Mishka and trip', 'tags': ['implementation', 'math'], 'dif': '1400'}
{'pro_id': '703A', 'name': 'Mishka and Game', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '702F', 'name': 'T-Shirts', 'tags': ['data structures'], 'dif': '2800'}
{'pro_id': '702E', 'name': 'Analysis of Pathes in Functional Graph', 'tags': ['data structures', 'graphs'], 'dif': '2100'}
{'pro_id': '702D', 'name': 'Road to Post Office', 'tags': ['math'], 'dif': '1900'}
{'pro_id': '702C', 'name': 'Cellular Network', 'tags': ['binary search', 'implementation', 'two pointers'], 'dif': '1500'}
{'pro_id': '702B', 'name': 'Powers of Two', 'tags': ['brute force', 'data structures', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '702A', 'name': 'Maximum Increase', 'tags': ['dp', 'greedy', 'implementation'], 'dif': '900'}
{'pro_id': '701C', 'name': 'They Are Everywhere', 'tags': ['binary search', 'strings', 'two pointers'], 'dif': '1500'}
{'pro_id': '701B', 'name': 'Cells Not Under Attack', 'tags': ['data structures', 'math'], 'dif': '1200'}
{'pro_id': '701A', 'name': 'Cards', 'tags': ['greedy', 'implementation'], 'dif': '800'}
{'pro_id': '700E', 'name': 'Cool Slogans', 'tags': ['string suffix structures', 'strings'], 'dif': '3300'}
{'pro_id': '700D', 'name': 'Huffman Coding on Segment', 'tags': ['data structures', 'greedy'], 'dif': '3000'}
{'pro_id': '700C', 'name': 'Break Up', 'tags': ['dfs and similar', 'graphs'], 'dif': '2700'}
{'pro_id': '700B', 'name': 'Connecting Universities', 'tags': ['dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '2100'}
{'pro_id': '700A', 'name': 'As Fast As Possible', 'tags': ['binary search', 'math'], 'dif': '1900'}
{'pro_id': '699B', 'name': 'One Bomb', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '699A', 'name': 'Launch of Collider', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '698F', 'name': 'Coprime Permutation', 'tags': ['combinatorics', 'number theory'], 'dif': '3000'}
{'pro_id': '698E', 'name': 'Cron', 'tags': [], 'dif': '2800'}
{'pro_id': '698D', 'name': 'Limak and Shooting Points', 'tags': ['brute force', 'geometry'], 'dif': '2800'}
{'pro_id': '698C', 'name': 'LRU', 'tags': ['bitmasks', 'dp', 'math', 'probabilities'], 'dif': '2700'}
{'pro_id': '698B', 'name': 'Fix a Tree', 'tags': ['constructive algorithms', 'dfs and similar', 'dsu', 'graphs', 'trees'], 'dif': '1700'}
{'pro_id': '698A', 'name': 'Vacations', 'tags': ['dp'], 'dif': '1400'}
{'pro_id': '697B', 'name': 'Barnicle', 'tags': ['brute force', 'implementation', 'math', 'strings'], 'dif': '1400'}
{'pro_id': '697A', 'name': 'Pineapple Incident', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '696F', 'name': '...Dary!', 'tags': ['binary search', 'geometry', 'two pointers'], 'dif': '3200'}
{'pro_id': '696E', 'name': '...Wait for it...', 'tags': ['data structures', 'dsu', 'trees'], 'dif': '2900'}
{'pro_id': '696D', 'name': 'Legen...', 'tags': ['data structures', 'dp', 'matrices', 'strings'], 'dif': '2700'}
{'pro_id': '696C', 'name': 'PLEASE', 'tags': ['combinatorics', 'dp', 'implementation', 'math', 'matrices'], 'dif': '2200'}
{'pro_id': '696B', 'name': 'Puzzles', 'tags': ['dfs and similar', 'math', 'probabilities', 'trees'], 'dif': '1800'}
{'pro_id': '696A', 'name': 'Lorenzo Von Matterhorn', 'tags': ['brute force', 'data structures', 'implementation', 'trees'], 'dif': '1500'}
{'pro_id': '691F', 'name': 'Couple Cover', 'tags': ['brute force', 'dp', 'number theory'], 'dif': '2300'}
{'pro_id': '691E', 'name': 'Xor-sequences', 'tags': ['matrices'], 'dif': '2000'}
{'pro_id': '691D', 'name': 'Swaps in Permutation', 'tags': ['dfs and similar', 'dsu', 'math'], 'dif': '1700'}
{'pro_id': '691C', 'name': 'Exponential notation', 'tags': ['implementation'], 'dif': '1900'}
{'pro_id': '691B', 'name': 's-palindrome', 'tags': ['implementation', 'strings'], 'dif': '1600'}
{'pro_id': '691A', 'name': 'Fashion in Berland', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '690F3', 'name': 'Tree of Life (hard)', 'tags': ['trees'], 'dif': '3200'}
{'pro_id': '690F2', 'name': 'Tree of Life (medium)', 'tags': ['constructive algorithms', 'hashing', 'trees'], 'dif': '3000'}
{'pro_id': '690F1', 'name': 'Tree of Life (easy)', 'tags': [], 'dif': '1400'}
{'pro_id': '690E2', 'name': 'Photographs (II)', 'tags': [], 'dif': '2700'}
{'pro_id': '690E1', 'name': 'Photographs (I)', 'tags': [], 'dif': '1900'}
{'pro_id': '690D3', 'name': 'The Wall (hard)', 'tags': [], 'dif': '2100'}
{'pro_id': '690D2', 'name': 'The Wall (medium)', 'tags': ['combinatorics'], 'dif': '1800'}
{'pro_id': '690D1', 'name': 'The Wall (easy)', 'tags': [], 'dif': '1300'}
{'pro_id': '690C3', 'name': 'Brain Network (hard)', 'tags': ['trees'], 'dif': '2200'}
{'pro_id': '690C2', 'name': 'Brain Network (medium)', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '1600'}
{'pro_id': '690C1', 'name': 'Brain Network (easy)', 'tags': [], 'dif': '1400'}
{'pro_id': '690B3', 'name': 'Recover Polygon (hard)', 'tags': [], 'dif': '2800'}
{'pro_id': '690B2', 'name': 'Recover Polygon (medium)', 'tags': ['geometry'], 'dif': '2700'}
{'pro_id': '690B1', 'name': 'Recover Polygon (easy)', 'tags': [], 'dif': '1800'}
{'pro_id': '690A3', 'name': 'Collective Mindsets (hard)', 'tags': [], 'dif': '2500'}
{'pro_id': '690A2', 'name': 'Collective Mindsets (medium)', 'tags': [], 'dif': '2400'}
{'pro_id': '690A1', 'name': 'Collective Mindsets (easy)', 'tags': [], 'dif': '1200'}
{'pro_id': '689E', 'name': 'Mike and Geometry Problem', 'tags': ['combinatorics', 'data structures', 'dp', 'geometry', 'implementation'], 'dif': '2300'}
{'pro_id': '689D', 'name': 'Friends and Subsequences', 'tags': ['binary search', 'data structures'], 'dif': '2200'}
{'pro_id': '689C', 'name': 'Mike and Chocolate Thieves', 'tags': ['binary search', 'combinatorics', 'math'], 'dif': '1700'}
{'pro_id': '689B', 'name': 'Mike and Shortcuts', 'tags': ['dfs and similar', 'graphs', 'greedy', 'shortest paths'], 'dif': '1600'}
{'pro_id': '689A', 'name': 'Mike and Cellphone', 'tags': ['brute force', 'constructive algorithms', 'implementation'], 'dif': '1400'}
{'pro_id': '688B', 'name': 'Lovely Palindromes', 'tags': ['constructive algorithms', 'math'], 'dif': '1000'}
{'pro_id': '688A', 'name': 'Opponents', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '687E', 'name': 'TOF', 'tags': ['dfs and similar', 'graphs'], 'dif': '2800'}
{'pro_id': '687D', 'name': 'Dividing Kingdom II', 'tags': ['brute force', 'data structures', 'dsu', 'graphs', 'sortings'], 'dif': '2500'}
{'pro_id': '687C', 'name': 'The Values You Can Make', 'tags': ['dp'], 'dif': '2000'}
{'pro_id': '687B', 'name': 'Remainders Game', 'tags': ['chinese remainder theorem', 'math', 'number theory'], 'dif': '1900'}
{'pro_id': '687A', 'name': 'NP-Hard Problem', 'tags': ['dfs and similar', 'graphs'], 'dif': '1500'}
{'pro_id': '686B', 'name': "Little Robber Girl's Zoo", 'tags': ['constructive algorithms', 'implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '686A', 'name': 'Free Ice Cream', 'tags': ['constructive algorithms', 'implementation'], 'dif': '800'}
{'pro_id': '685E', 'name': "Travelling Through the Snow Queen's Kingdom", 'tags': ['bitmasks', 'brute force', 'divide and conquer', 'graphs'], 'dif': '2700'}
{'pro_id': '685D', 'name': 'Kay and Eternity', 'tags': ['brute force', 'implementation', 'sortings'], 'dif': '2600'}
{'pro_id': '685C', 'name': 'Optimal Point', 'tags': ['binary search', 'math'], 'dif': '2800'}
{'pro_id': '685B', 'name': 'Kay and Snowflake', 'tags': ['data structures', 'dfs and similar', 'dp', 'trees'], 'dif': '2000'}
{'pro_id': '685A', 'name': "Robbers' watch", 'tags': ['brute force', 'combinatorics', 'dp', 'math'], 'dif': '1700'}
{'pro_id': '683J', 'name': 'The Hero with Bombs', 'tags': ['*special problem'], 'dif': '2900'}
{'pro_id': '683I', 'name': 'Loader', 'tags': ['*special problem'], 'dif': '2600'}
{'pro_id': '683H', 'name': 'Exchange of Books', 'tags': ['*special problem'], 'dif': '2100'}
{'pro_id': '683G', 'name': 'The Fraction', 'tags': ['*special problem'], 'dif': '2100'}
{'pro_id': '683F', 'name': 'Reformat the String', 'tags': ['*special problem'], 'dif': '2000'}
{'pro_id': '683E', 'name': 'Hammer throwing', 'tags': ['*special problem'], 'dif': '1900'}
{'pro_id': '683D', 'name': 'Chocolate Bar', 'tags': ['*special problem', 'math'], 'dif': '1700'}
{'pro_id': '683C', 'name': 'Symmetric Difference', 'tags': ['*special problem'], 'dif': '1600'}
{'pro_id': '683B', 'name': 'The Teacher of Physical Education', 'tags': ['*special problem'], 'dif': '1600'}
{'pro_id': '683A', 'name': 'The Check of the Point', 'tags': ['*special problem', 'geometry'], 'dif': '1200'}
{'pro_id': '682E', 'name': 'Alyona and Triangles', 'tags': ['geometry', 'two pointers'], 'dif': '2600'}
{'pro_id': '682D', 'name': 'Alyona and Strings', 'tags': ['dp', 'strings'], 'dif': '1900'}
{'pro_id': '682C', 'name': 'Alyona and the Tree', 'tags': ['dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '1700'}
{'pro_id': '682B', 'name': 'Alyona and Mex', 'tags': ['sortings'], 'dif': '1200'}
{'pro_id': '682A', 'name': 'Alyona and Numbers', 'tags': ['constructive algorithms', 'math', 'number theory'], 'dif': '1200'}
{'pro_id': '681E', 'name': 'Runaway to a Shadow', 'tags': ['geometry', 'sortings'], 'dif': '2900'}
{'pro_id': '681D', 'name': 'Gifts by the List', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs', 'trees'], 'dif': '2100'}
{'pro_id': '681C', 'name': 'Heap Operations', 'tags': ['constructive algorithms', 'data structures', 'greedy'], 'dif': '1600'}
{'pro_id': '681B', 'name': 'Economy Game', 'tags': ['brute force'], 'dif': '1300'}
{'pro_id': '681A', 'name': 'A Good Contest', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '680B', 'name': 'Bear and Finding Criminals', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1000'}
{'pro_id': '680A', 'name': 'Bear and Five Cards', 'tags': ['constructive algorithms', 'implementation'], 'dif': '900'}
{'pro_id': '679E', 'name': 'Bear and Bad Powers of 42', 'tags': ['data structures'], 'dif': '3100'}
{'pro_id': '679D', 'name': 'Bear and Chase', 'tags': ['brute force', 'dfs and similar', 'graphs', 'implementation', 'math', 'probabilities'], 'dif': '2900'}
{'pro_id': '679C', 'name': 'Bear and Square Grid', 'tags': ['dfs and similar', 'dsu', 'implementation'], 'dif': '2500'}
{'pro_id': '679B', 'name': 'Bear and Tower of Cubes', 'tags': ['binary search', 'dp', 'greedy'], 'dif': '2300'}
{'pro_id': '679A', 'name': 'Bear and Prime 100', 'tags': ['constructive algorithms', 'interactive', 'math'], 'dif': '1400'}
{'pro_id': '678F', 'name': 'Lena and Queries', 'tags': ['data structures', 'divide and conquer', 'geometry'], 'dif': '2600'}
{'pro_id': '678E', 'name': 'Another Sith Tournament', 'tags': ['bitmasks', 'dp'], 'dif': '2200'}
{'pro_id': '678D', 'name': 'Iterated Linear Function', 'tags': ['math', 'number theory'], 'dif': '1800'}
{'pro_id': '678C', 'name': 'Joty and Chocolate', 'tags': ['implementation', 'math', 'number theory'], 'dif': '1600'}
{'pro_id': '678B', 'name': 'The Same Calendar', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '678A', 'name': 'Johny Likes Numbers', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '677E', 'name': 'Vanya and Balloons', 'tags': ['binary search', 'brute force', 'dp', 'implementation'], 'dif': '2600'}
{'pro_id': '677D', 'name': 'Vanya and Treasure', 'tags': ['data structures', 'dp', 'graphs', 'shortest paths'], 'dif': '2300'}
{'pro_id': '677C', 'name': 'Vanya and Label', 'tags': ['bitmasks', 'combinatorics', 'implementation', 'strings'], 'dif': '1500'}
{'pro_id': '677B', 'name': 'Vanya and Food Processor', 'tags': ['implementation', 'math'], 'dif': '1400'}
{'pro_id': '677A', 'name': 'Vanya and Fence', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '676E', 'name': 'The Last Fight Between Human and AI', 'tags': ['math'], 'dif': '2300'}
{'pro_id': '676D', 'name': 'Theseus and labyrinth', 'tags': ['graphs', 'implementation', 'shortest paths'], 'dif': '2000'}
{'pro_id': '676C', 'name': 'Vasya and String', 'tags': ['binary search', 'dp', 'strings', 'two pointers'], 'dif': '1500'}
{'pro_id': '676B', 'name': 'Pyramid of Glasses', 'tags': ['implementation', 'math'], 'dif': '1500'}
{'pro_id': '676A', 'name': 'Nicholas and Permutation', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1000'}
{'pro_id': '675E', 'name': 'Trains and Statistic', 'tags': ['data structures', 'dp', 'greedy'], 'dif': '2500'}
{'pro_id': '675D', 'name': 'Дерево', 'tags': ['data structures', 'trees'], 'dif': '1800'}
{'pro_id': '675C', 'name': 'Money Transfers', 'tags': ['constructive algorithms', 'data structures', 'greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '675B', 'name': 'Restoring Painting', 'tags': ['brute force', 'constructive algorithms', 'math'], 'dif': '1400'}
{'pro_id': '675A', 'name': 'Infinite Sequence', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '673B', 'name': 'Problems for Round', 'tags': ['greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '673A', 'name': 'Bear and Game', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '672B', 'name': 'Different is Good', 'tags': ['constructive algorithms', 'implementation', 'strings'], 'dif': '1000'}
{'pro_id': '672A', 'name': 'Summer Camp', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '671E', 'name': 'Organizing a Race', 'tags': ['data structures', 'greedy'], 'dif': '3300'}
{'pro_id': '671D', 'name': 'Roads in Yusland', 'tags': ['data structures', 'dp', 'greedy'], 'dif': '2800'}
{'pro_id': '671C', 'name': 'Ultimate Weirdness of an Array', 'tags': ['data structures', 'number theory'], 'dif': '2700'}
{'pro_id': '671B', 'name': 'Robin Hood', 'tags': ['binary search', 'greedy'], 'dif': '2000'}
{'pro_id': '671A', 'name': 'Recycling Bottles', 'tags': ['dp', 'geometry', 'greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '670F', 'name': 'Restore a Number', 'tags': ['brute force', 'constructive algorithms', 'strings'], 'dif': '2200'}
{'pro_id': '670E', 'name': 'Correct Bracket Sequence Editor', 'tags': ['data structures', 'dsu', 'strings'], 'dif': '1700'}
{'pro_id': '670D2', 'name': 'Magic Powder - 2', 'tags': ['binary search', 'implementation'], 'dif': '1500'}
{'pro_id': '670D1', 'name': 'Magic Powder - 1', 'tags': ['binary search', 'brute force', 'implementation'], 'dif': '1400'}
{'pro_id': '670C', 'name': 'Cinema', 'tags': ['implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '670B', 'name': 'Game of Robots', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '670A', 'name': 'Holidays', 'tags': ['brute force', 'constructive algorithms', 'greedy', 'math'], 'dif': '1000'}
{'pro_id': '669A', 'name': 'Little Artem and Presents', 'tags': ['math'], 'dif': '800'}
{'pro_id': '667B', 'name': 'Coat of Anticubism', 'tags': ['constructive algorithms', 'geometry'], 'dif': '1100'}
{'pro_id': '667A', 'name': 'Pouring Rain', 'tags': ['geometry', 'math'], 'dif': '1100'}
{'pro_id': '666E', 'name': 'Forensic Examination', 'tags': ['data structures', 'string suffix structures'], 'dif': '3100'}
{'pro_id': '666D', 'name': 'Chain Reaction', 'tags': ['brute force', 'geometry'], 'dif': '3000'}
{'pro_id': '666C', 'name': 'Codeword', 'tags': ['combinatorics', 'strings'], 'dif': '2400'}
{'pro_id': '666B', 'name': 'World Tour', 'tags': ['graphs', 'shortest paths'], 'dif': '2100'}
{'pro_id': '666A', 'name': 'Reberland Linguistics', 'tags': ['dp', 'implementation', 'strings'], 'dif': '1800'}
{'pro_id': '665F', 'name': 'Four Divisors', 'tags': ['dp', 'math', 'number theory'], 'dif': '2600'}
{'pro_id': '665E', 'name': 'Beautiful Subarrays', 'tags': ['data structures', 'divide and conquer'], 'dif': '2200'}
{'pro_id': '665D', 'name': 'Simple Subset', 'tags': ['constructive algorithms', 'greedy', 'number theory'], 'dif': '2000'}
{'pro_id': '665C', 'name': 'Simple Strings', 'tags': ['dp', 'greedy', 'strings'], 'dif': '1200'}
{'pro_id': '665B', 'name': 'Shopping', 'tags': ['brute force'], 'dif': '1400'}
{'pro_id': '665A', 'name': 'Buses Between Cities', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '664A', 'name': 'Complicated GCD', 'tags': ['math', 'number theory'], 'dif': '900'}
{'pro_id': '663A', 'name': 'Rebus', 'tags': ['constructive algorithms', 'expression parsing', 'greedy', 'math'], 'dif': '1800'}
{'pro_id': '662E', 'name': 'To Hack or not to Hack', 'tags': ['brute force', 'dp', 'greedy'], 'dif': '2800'}
{'pro_id': '662D', 'name': 'International Olympiad', 'tags': ['constructive algorithms', 'greedy', 'implementation', 'math'], 'dif': '2000'}
{'pro_id': '662C', 'name': 'Binary Table', 'tags': ['bitmasks', 'brute force', 'divide and conquer', 'dp', 'fft', 'math'], 'dif': '2800'}
{'pro_id': '662B', 'name': 'Graph Coloring', 'tags': ['dfs and similar', 'graphs'], 'dif': '2300'}
{'pro_id': '662A', 'name': 'Gambling Nim', 'tags': ['bitmasks', 'math', 'matrices', 'probabilities'], 'dif': '2400'}
{'pro_id': '661H', 'name': 'Rotate Matrix', 'tags': ['*special problem'], 'dif': '2600'}
{'pro_id': '661G', 'name': 'Hungarian Notation', 'tags': ['*special problem'], 'dif': '2500'}
{'pro_id': '661F', 'name': 'Primes in Interval', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '661E', 'name': 'Divisibility Check', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '661D', 'name': 'Maximal Difference', 'tags': ['*special problem'], 'dif': '2100'}
{'pro_id': '661C', 'name': 'Array Sum', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '661B', 'name': 'Seasons', 'tags': ['*special problem'], 'dif': '1900'}
{'pro_id': '661A', 'name': 'Lazy Caterer Sequence', 'tags': ['*special problem'], 'dif': '1400'}
{'pro_id': '660F', 'name': 'Bear and Bowling 4', 'tags': ['binary search', 'data structures', 'geometry', 'ternary search'], 'dif': '2500'}
{'pro_id': '660E', 'name': 'Different Subsets For All Tuples', 'tags': ['combinatorics'], 'dif': '2300'}
{'pro_id': '660D', 'name': 'Number of Parallelograms', 'tags': ['geometry'], 'dif': '1900'}
{'pro_id': '660C', 'name': 'Hard Process', 'tags': ['binary search', 'dp', 'two pointers'], 'dif': '1600'}
{'pro_id': '660B', 'name': 'Seating On Bus', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '660A', 'name': 'Co-prime Array', 'tags': ['greedy', 'implementation', 'math', 'number theory'], 'dif': '1300'}
{'pro_id': '659G', 'name': 'Fence Divercity', 'tags': ['combinatorics', 'dp', 'number theory'], 'dif': '2500'}
{'pro_id': '659F', 'name': 'Polycarp and Hay', 'tags': ['dfs and similar', 'dsu', 'graphs', 'greedy', 'sortings'], 'dif': '2100'}
{'pro_id': '659E', 'name': 'New Reform', 'tags': ['data structures', 'dfs and similar', 'dsu', 'graphs', 'greedy'], 'dif': '1600'}
{'pro_id': '659D', 'name': 'Bicycle Race', 'tags': ['geometry', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '659C', 'name': 'Tanya and Toys', 'tags': ['greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '659B', 'name': 'Qualifying Contest', 'tags': ['constructive algorithms', 'sortings'], 'dif': '1400'}
{'pro_id': '659A', 'name': 'Round House', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '658A', 'name': 'Bear and Reverse Radewoosh', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '656G', 'name': "You're a Professional", 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '656F', 'name': 'Ace It!', 'tags': ['*special problem'], 'dif': '2100'}
{'pro_id': '656E', 'name': 'Out of Controls', 'tags': ['*special problem'], 'dif': '2100'}
{'pro_id': '656D', 'name': 'Rosetta Problem', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '656C', 'name': 'Without Text', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '656B', 'name': 'Scrambled', 'tags': ['*special problem', 'implementation'], 'dif': '1700'}
{'pro_id': '656A', 'name': 'Da Vinci Powers', 'tags': ['*special problem'], 'dif': '1900'}
{'pro_id': '653G', 'name': 'Move by Prime', 'tags': ['combinatorics', 'math', 'number theory'], 'dif': '3000'}
{'pro_id': '653F', 'name': 'Paper task', 'tags': ['data structures', 'string suffix structures', 'strings'], 'dif': '2500'}
{'pro_id': '653E', 'name': 'Bear and Forgotten Tree 2', 'tags': ['dfs and similar', 'dsu', 'graphs', 'trees'], 'dif': '2400'}
{'pro_id': '653D', 'name': 'Delivery Bears', 'tags': ['binary search', 'flows', 'graphs'], 'dif': '2100'}
{'pro_id': '653C', 'name': 'Bear and Up-Down', 'tags': ['brute force', 'implementation'], 'dif': '1900'}
{'pro_id': '653B', 'name': 'Bear and Compressing', 'tags': ['brute force', 'dfs and similar', 'dp', 'strings'], 'dif': '1300'}
{'pro_id': '653A', 'name': 'Bear and Three Balls', 'tags': ['brute force', 'implementation', 'sortings'], 'dif': '1000'}
{'pro_id': '652F', 'name': 'Ants on a Circle', 'tags': ['constructive algorithms', 'math'], 'dif': '2800'}
{'pro_id': '652E', 'name': 'Pursuit For Artifacts', 'tags': ['dfs and similar', 'dsu', 'graphs', 'trees'], 'dif': '2300'}
{'pro_id': '652D', 'name': 'Nested Segments', 'tags': ['data structures', 'sortings'], 'dif': '1900'}
{'pro_id': '652C', 'name': 'Foe Pairs', 'tags': ['combinatorics', 'sortings', 'two pointers'], 'dif': '1800'}
{'pro_id': '652B', 'name': 'z-sort', 'tags': ['sortings'], 'dif': '1100'}
{'pro_id': '652A', 'name': 'Gabriel and Caterpillar', 'tags': ['implementation', 'math'], 'dif': '1400'}
{'pro_id': '651B', 'name': 'Beautiful Paintings', 'tags': ['greedy', 'sortings'], 'dif': '1200'}
{'pro_id': '651A', 'name': 'Joysticks', 'tags': ['dp', 'greedy', 'implementation', 'math'], 'dif': '1100'}
{'pro_id': '650E', 'name': 'Clockwork Bomb', 'tags': ['data structures', 'dfs and similar', 'dsu', 'greedy', 'trees'], 'dif': '3100'}
{'pro_id': '650D', 'name': 'Zip-line', 'tags': ['binary search', 'data structures', 'dp', 'hashing'], 'dif': '2600'}
{'pro_id': '650C', 'name': 'Table Compression', 'tags': ['dfs and similar', 'dp', 'dsu', 'graphs', 'greedy'], 'dif': '2300'}
{'pro_id': '650B', 'name': 'Image Preview', 'tags': ['binary search', 'brute force', 'dp', 'two pointers'], 'dif': '1900'}
{'pro_id': '650A', 'name': 'Watchmen', 'tags': ['data structures', 'geometry', 'math'], 'dif': '1500'}
{'pro_id': '645G', 'name': 'Armistice Area Apportionment', 'tags': ['binary search', 'geometry'], 'dif': '2600'}
{'pro_id': '645F', 'name': 'Cowslip Collections', 'tags': ['combinatorics', 'math', 'number theory'], 'dif': '2500'}
{'pro_id': '645E', 'name': 'Intellectual Inquiry', 'tags': ['dp', 'greedy', 'strings'], 'dif': '2100'}
{'pro_id': '645D', 'name': 'Robot Rapping Results Report', 'tags': ['binary search', 'dp', 'graphs'], 'dif': '1800'}
{'pro_id': '645C', 'name': 'Enduring Exodus', 'tags': ['binary search', 'two pointers'], 'dif': '1600'}
{'pro_id': '645B', 'name': 'Mischievous Mess Makers', 'tags': ['greedy', 'math'], 'dif': '1300'}
{'pro_id': '645A', 'name': 'Amity Assessment', 'tags': ['brute force', 'constructive algorithms', 'implementation'], 'dif': '1200'}
{'pro_id': '644C', 'name': 'Hostname Aliases', 'tags': ['*special problem', 'binary search', 'data structures', 'implementation', 'sortings', 'strings'], 'dif': '2300'}
{'pro_id': '644B', 'name': 'Processing Queries', 'tags': ['*special problem', 'constructive algorithms', 'data structures', 'two pointers'], 'dif': '2200'}
{'pro_id': '644A', 'name': 'Parliament of Berland', 'tags': ['*special problem', 'constructive algorithms'], 'dif': '1700'}
{'pro_id': '643G', 'name': 'Choosing Ads', 'tags': ['data structures'], 'dif': '3100'}
{'pro_id': '643F', 'name': 'Bears and Juice', 'tags': ['dp', 'math', 'meet-in-the-middle'], 'dif': '2900'}
{'pro_id': '643E', 'name': 'Bear and Destroying Subtrees', 'tags': ['dp', 'math', 'probabilities', 'trees'], 'dif': '2600'}
{'pro_id': '643D', 'name': 'Bearish Fanpages', 'tags': [], 'dif': '2900'}
{'pro_id': '643C', 'name': 'Levels and Regions', 'tags': ['dp'], 'dif': '2500'}
{'pro_id': '643B', 'name': 'Bear and Two Paths', 'tags': ['constructive algorithms', 'graphs'], 'dif': '1600'}
{'pro_id': '643A', 'name': 'Bear and Colors', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '642A', 'name': 'Scheduler for Invokers', 'tags': ['*special problem'], 'dif': '2900'}
{'pro_id': '641G', 'name': 'Little Artem and Graph', 'tags': [], 'dif': '3300'}
{'pro_id': '641F', 'name': 'Little Artem and 2-SAT', 'tags': [], 'dif': '2900'}
{'pro_id': '641E', 'name': 'Little Artem and Time Machine', 'tags': ['data structures'], 'dif': '2000'}
{'pro_id': '641D', 'name': 'Little Artem and Random Variable', 'tags': ['dp', 'implementation', 'math', 'probabilities'], 'dif': '2300'}
{'pro_id': '641C', 'name': 'Little Artem and Dance', 'tags': ['brute force', 'constructive algorithms', 'implementation'], 'dif': '1800'}
{'pro_id': '641B', 'name': 'Little Artem and Matrix', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '641A', 'name': 'Little Artem and Grasshopper', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '639F', 'name': 'Bear and Chemistry', 'tags': ['data structures', 'dfs and similar', 'graphs', 'trees'], 'dif': '3300'}
{'pro_id': '639E', 'name': 'Bear and Paradox', 'tags': ['greedy', 'math', 'sortings'], 'dif': '2800'}
{'pro_id': '639D', 'name': 'Bear and Contribution', 'tags': ['data structures', 'greedy', 'sortings'], 'dif': '2500'}
{'pro_id': '639C', 'name': 'Bear and Polynomials', 'tags': ['hashing', 'implementation', 'math'], 'dif': '2200'}
{'pro_id': '639B', 'name': 'Bear and Forgotten Tree 3', 'tags': ['constructive algorithms', 'graphs', 'trees'], 'dif': '1600'}
{'pro_id': '639A', 'name': 'Bear and Displayed Friends', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '638D', 'name': 'Three-dimensional Turtle Super Computer', 'tags': ['brute force', 'dfs and similar', 'graphs'], 'dif': '2200'}
{'pro_id': '638C', 'name': 'Road Improvement', 'tags': ['*special problem', 'dfs and similar', 'graphs', 'greedy', 'trees'], 'dif': '2100'}
{'pro_id': '638B', 'name': 'Making Genome in Berland', 'tags': ['*special problem', 'dfs and similar', 'strings'], 'dif': '1800'}
{'pro_id': '638A', 'name': 'Home Numbers', 'tags': ['*special problem', 'constructive algorithms', 'math'], 'dif': '1500'}
{'pro_id': '637D', 'name': 'Running with Obstacles', 'tags': ['*special problem', 'data structures', 'dp', 'greedy'], 'dif': '2000'}
{'pro_id': '637C', 'name': 'Promocodes with Mistakes', 'tags': ['*special problem', 'brute force', 'constructive algorithms', 'implementation'], 'dif': '1800'}
{'pro_id': '637B', 'name': 'Chat Order', 'tags': ['*special problem', 'binary search', 'constructive algorithms', 'data structures', 'sortings'], 'dif': '1500'}
{'pro_id': '637A', 'name': 'Voting for Photos', 'tags': ['*special problem', 'constructive algorithms', 'implementation'], 'dif': '1500'}
{'pro_id': '635A', 'name': 'Orchestra', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '634A', 'name': 'Island Puzzle', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1400'}
{'pro_id': '633H', 'name': 'Fibonacci-ish II', 'tags': ['data structures', 'implementation'], 'dif': '2800'}
{'pro_id': '633G', 'name': 'Yash And Trees', 'tags': ['bitmasks', 'data structures', 'dfs and similar', 'math', 'number theory'], 'dif': '2700'}
{'pro_id': '633F', 'name': 'The Chocolate Spree', 'tags': ['dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '2500'}
{'pro_id': '633E', 'name': 'Startup Funding', 'tags': ['binary search', 'constructive algorithms', 'data structures', 'probabilities', 'two pointers'], 'dif': '2400'}
{'pro_id': '633D', 'name': 'Fibonacci-ish', 'tags': ['brute force', 'dp', 'hashing', 'implementation', 'math'], 'dif': '2000'}
{'pro_id': '633C', 'name': 'Spy Syndrome 2', 'tags': ['data structures', 'dp', 'hashing', 'implementation', 'sortings', 'string suffix structures', 'strings'], 'dif': '1900'}
{'pro_id': '633B', 'name': 'A Trivial Problem', 'tags': ['brute force', 'constructive algorithms', 'math', 'number theory'], 'dif': '1300'}
{'pro_id': '633A', 'name': 'Ebony and Ivory', 'tags': ['brute force', 'math', 'number theory'], 'dif': '1200'}
{'pro_id': '632F', 'name': 'Magic Matrix', 'tags': ['brute force', 'divide and conquer', 'graphs', 'matrices', 'trees'], 'dif': '2400'}
{'pro_id': '632E', 'name': 'Thief in a Shop', 'tags': ['divide and conquer', 'dp', 'fft', 'math'], 'dif': '2500'}
{'pro_id': '632D', 'name': 'Longest Subsequence', 'tags': ['brute force', 'math', 'number theory'], 'dif': '2200'}
{'pro_id': '632C', 'name': 'The Smallest String Concatenation', 'tags': ['sortings', 'strings'], 'dif': '1800'}
{'pro_id': '632B', 'name': 'Alice, Bob, Two Teams', 'tags': ['brute force', 'constructive algorithms'], 'dif': '1400'}
{'pro_id': '632A', 'name': 'Grandma Laura and Apples', 'tags': [], 'dif': '1200'}
{'pro_id': '631E', 'name': 'Product Sum', 'tags': ['data structures', 'dp', 'geometry'], 'dif': '2500'}
{'pro_id': '631D', 'name': 'Messenger', 'tags': ['data structures', 'hashing', 'implementation', 'string suffix structures', 'strings'], 'dif': '2100'}
{'pro_id': '631C', 'name': 'Report', 'tags': ['data structures', 'sortings'], 'dif': '1700'}
{'pro_id': '631B', 'name': 'Print Check', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1300'}
{'pro_id': '631A', 'name': 'Interview', 'tags': ['brute force', 'implementation'], 'dif': '1000'}
{'pro_id': '630R', 'name': 'Game', 'tags': ['games'], 'dif': '1300'}
{'pro_id': '630Q', 'name': 'Pyramids', 'tags': ['geometry'], 'dif': '2100'}
{'pro_id': '630P', 'name': 'Area of a Star', 'tags': ['geometry'], 'dif': '2400'}
{'pro_id': '630O', 'name': 'Arrow', 'tags': ['geometry'], 'dif': '2300'}
{'pro_id': '630N', 'name': 'Forecast', 'tags': ['math'], 'dif': '1500'}
{'pro_id': '630M', 'name': 'Turn', 'tags': ['geometry', 'math'], 'dif': '2000'}
{'pro_id': '630L', 'name': 'Cracking the Code', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '630K', 'name': 'Indivisibility', 'tags': ['math'], 'dif': '1700'}
{'pro_id': '630J', 'name': 'Divisibility', 'tags': ['math', 'number theory'], 'dif': '1200'}
{'pro_id': '630I', 'name': 'Parking Lot', 'tags': ['combinatorics'], 'dif': '1900'}
{'pro_id': '630H', 'name': 'Benches', 'tags': ['combinatorics', 'math'], 'dif': '1700'}
{'pro_id': '630G', 'name': 'Challenge Pennants', 'tags': ['combinatorics'], 'dif': '1800'}
{'pro_id': '630F', 'name': 'Selection of Personnel', 'tags': ['combinatorics', 'math'], 'dif': '1500'}
{'pro_id': '630E', 'name': 'A rectangle', 'tags': ['math'], 'dif': '2100'}
{'pro_id': '630D', 'name': 'Hexagons!', 'tags': ['math'], 'dif': '1200'}
{'pro_id': '630C', 'name': 'Lucky Numbers', 'tags': ['combinatorics', 'math'], 'dif': '1100'}
{'pro_id': '630B', 'name': "Moore's Law", 'tags': ['math'], 'dif': '1400'}
{'pro_id': '630A', 'name': 'Again Twenty Five!', 'tags': ['number theory'], 'dif': '800'}
{'pro_id': '629E', 'name': 'Famil Door and Roads', 'tags': ['combinatorics', 'data structures', 'dfs and similar', 'dp', 'probabilities', 'trees'], 'dif': '2400'}
{'pro_id': '629D', 'name': 'Babaei and Birthday Cake', 'tags': ['data structures', 'dp'], 'dif': '1900'}
{'pro_id': '629C', 'name': 'Famil Door and Brackets', 'tags': ['dp', 'strings'], 'dif': '2000'}
{'pro_id': '629B', 'name': 'Far Relative’s Problem', 'tags': ['brute force'], 'dif': '1200'}
{'pro_id': '629A', 'name': 'Far Relative’s Birthday Cake', 'tags': ['brute force', 'combinatorics', 'constructive algorithms', 'implementation'], 'dif': '800'}
{'pro_id': '628F', 'name': 'Bear and Fair Set', 'tags': ['flows'], 'dif': '2500'}
{'pro_id': '628E', 'name': 'Zbazi in Zeydabad', 'tags': ['data structures', 'implementation'], 'dif': '2300'}
{'pro_id': '628D', 'name': 'Magic Numbers', 'tags': ['dp'], 'dif': '2200'}
{'pro_id': '628C', 'name': 'Bear and String Distance', 'tags': ['greedy'], 'dif': '1400'}
{'pro_id': '628B', 'name': 'New Skateboard', 'tags': ['dp'], 'dif': '1300'}
{'pro_id': '628A', 'name': 'Tennis Tournament', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '627F', 'name': 'Island Puzzle', 'tags': ['dfs and similar', 'dsu', 'graphs', 'trees'], 'dif': '3400'}
{'pro_id': '627E', 'name': 'Orchestra', 'tags': ['two pointers'], 'dif': '3000'}
{'pro_id': '627D', 'name': 'Preorder Test', 'tags': ['binary search', 'dfs and similar', 'dp', 'graphs', 'greedy', 'trees'], 'dif': '2600'}
{'pro_id': '627C', 'name': 'Package Delivery', 'tags': ['data structures', 'divide and conquer', 'greedy'], 'dif': '2300'}
{'pro_id': '627B', 'name': 'Factory Repairs', 'tags': ['data structures'], 'dif': '1700'}
{'pro_id': '627A', 'name': 'XOR Equation', 'tags': ['dp', 'math'], 'dif': '1800'}
{'pro_id': '626G', 'name': 'Raffles', 'tags': ['data structures', 'dp', 'greedy', 'math'], 'dif': '3000'}
{'pro_id': '626F', 'name': 'Group Projects', 'tags': ['dp'], 'dif': '2400'}
{'pro_id': '626E', 'name': 'Simple Skewness', 'tags': ['binary search', 'math', 'ternary search'], 'dif': '2400'}
{'pro_id': '626D', 'name': "Jerry's Protest", 'tags': ['brute force', 'combinatorics', 'dp', 'probabilities'], 'dif': '1800'}
{'pro_id': '626C', 'name': 'Block Towers', 'tags': ['brute force', 'greedy', 'math', 'number theory'], 'dif': '1600'}
{'pro_id': '626B', 'name': 'Cards', 'tags': ['constructive algorithms', 'dp', 'math'], 'dif': '1300'}
{'pro_id': '626A', 'name': 'Robot Sequence', 'tags': ['brute force', 'implementation'], 'dif': '1000'}
{'pro_id': '625E', 'name': 'Frog Fights', 'tags': ['data structures', 'greedy'], 'dif': '2900'}
{'pro_id': '625D', 'name': 'Finals in arithmetic', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '2400'}
{'pro_id': '625C', 'name': 'K-special Tables', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1300'}
{'pro_id': '625B', 'name': 'War of the Corporations', 'tags': ['constructive algorithms', 'greedy', 'strings'], 'dif': '1300'}
{'pro_id': '625A', 'name': 'Guest From the Past', 'tags': ['implementation', 'math'], 'dif': '1700'}
{'pro_id': '624B', 'name': 'Making a String', 'tags': ['greedy', 'sortings'], 'dif': '1200'}
{'pro_id': '624A', 'name': 'Save Luke', 'tags': ['math'], 'dif': '900'}
{'pro_id': '623E', 'name': 'Transforming Sequence', 'tags': ['combinatorics', 'dp', 'fft', 'math'], 'dif': '3300'}
{'pro_id': '623D', 'name': 'Birthday', 'tags': ['greedy', 'math', 'probabilities'], 'dif': '2600'}
{'pro_id': '623C', 'name': 'Electric Charges', 'tags': ['binary search', 'dp'], 'dif': '2800'}
{'pro_id': '623B', 'name': 'Array GCD', 'tags': ['dp', 'greedy', 'number theory'], 'dif': '2400'}
{'pro_id': '623A', 'name': 'Graph and String', 'tags': ['constructive algorithms', 'graphs'], 'dif': '1800'}
{'pro_id': '622F', 'name': 'The Sum of the k-th Powers', 'tags': ['math'], 'dif': '2600'}
{'pro_id': '622E', 'name': 'Ants in Leaves', 'tags': ['dfs and similar', 'greedy', 'sortings', 'trees'], 'dif': '2300'}
{'pro_id': '622D', 'name': 'Optimal Number Permutation', 'tags': ['constructive algorithms'], 'dif': '1900'}
{'pro_id': '622C', 'name': 'Not Equal on a Segment', 'tags': ['data structures', 'implementation'], 'dif': '1700'}
{'pro_id': '622B', 'name': 'The Time', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '622A', 'name': 'Infinite Sequence', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '621E', 'name': 'Wet Shark and Blocks', 'tags': ['dp', 'matrices'], 'dif': '2100'}
{'pro_id': '621D', 'name': 'Rat Kwesh and Cheese', 'tags': ['brute force', 'constructive algorithms', 'math'], 'dif': '2200'}
{'pro_id': '621C', 'name': 'Wet Shark and Flowers', 'tags': ['combinatorics', 'math', 'number theory', 'probabilities'], 'dif': '1700'}
{'pro_id': '621B', 'name': 'Wet Shark and Bishops', 'tags': ['combinatorics', 'implementation'], 'dif': '1300'}
{'pro_id': '621A', 'name': 'Wet Shark and Odd and Even', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '620F', 'name': 'Xors on Segments', 'tags': ['data structures'], 'dif': '2700'}
{'pro_id': '620E', 'name': 'New Year Tree', 'tags': ['bitmasks', 'data structures', 'trees'], 'dif': '2100'}
{'pro_id': '620D', 'name': 'Professor GukiZ and Two Arrays', 'tags': ['binary search', 'two pointers'], 'dif': '2200'}
{'pro_id': '620C', 'name': 'Pearls in a Row', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '620B', 'name': 'Grandfather Dovlet’s calculator', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '620A', 'name': "Professor GukiZ's Robot", 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '618G', 'name': 'Combining Slimes', 'tags': ['dp', 'math', 'matrices', 'probabilities'], 'dif': '3300'}
{'pro_id': '618F', 'name': 'Double Knapsack', 'tags': ['constructive algorithms', 'two pointers'], 'dif': '2900'}
{'pro_id': '618E', 'name': 'Robot Arm', 'tags': ['data structures', 'geometry'], 'dif': '2500'}
{'pro_id': '618D', 'name': 'Hamiltonian Spanning Tree', 'tags': ['dfs and similar', 'dp', 'graph matchings', 'greedy', 'trees'], 'dif': '2200'}
{'pro_id': '618C', 'name': 'Constellation', 'tags': ['geometry', 'implementation'], 'dif': '1600'}
{'pro_id': '618B', 'name': 'Guess the Permutation', 'tags': ['constructive algorithms'], 'dif': '1200'}
{'pro_id': '618A', 'name': 'Slime Combining', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '617E', 'name': 'XOR and Favorite Number', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '617D', 'name': 'Polyline', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1700'}
{'pro_id': '617C', 'name': 'Watering Flowers', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '617B', 'name': 'Chocolate', 'tags': ['combinatorics'], 'dif': '1300'}
{'pro_id': '617A', 'name': 'Elephant', 'tags': ['math'], 'dif': '700'}
{'pro_id': '616F', 'name': 'Expensive Strings', 'tags': ['string suffix structures', 'strings'], 'dif': '2700'}
{'pro_id': '616E', 'name': 'Sum of Remainders', 'tags': ['implementation', 'math', 'number theory'], 'dif': '2200'}
{'pro_id': '616D', 'name': 'Longest k-Good Segment', 'tags': ['binary search', 'data structures', 'two pointers'], 'dif': '1700'}
{'pro_id': '616C', 'name': 'The Labyrinth', 'tags': ['dfs and similar'], 'dif': '1600'}
{'pro_id': '616B', 'name': 'Dinner with Emma', 'tags': ['games', 'greedy'], 'dif': '1100'}
{'pro_id': '616A', 'name': 'Comparing Two Long Integers', 'tags': ['implementation', 'strings'], 'dif': '1200'}
{'pro_id': '615E', 'name': 'Hexagons', 'tags': ['binary search', 'implementation', 'math'], 'dif': '2200'}
{'pro_id': '615D', 'name': 'Multipliers', 'tags': ['math', 'number theory'], 'dif': '1900'}
{'pro_id': '615C', 'name': 'Running Track', 'tags': ['dp', 'greedy', 'strings', 'trees'], 'dif': '1900'}
{'pro_id': '615B', 'name': 'Longtail Hedgehog', 'tags': ['dp', 'graphs'], 'dif': '1600'}
{'pro_id': '615A', 'name': 'Bulbs', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '614B', 'name': "Gena's Code", 'tags': ['implementation', 'math'], 'dif': '1400'}
{'pro_id': '614A', 'name': 'Link/Cut Tree', 'tags': ['brute force', 'implementation'], 'dif': '1500'}
{'pro_id': '613E', 'name': 'Puzzle Lover', 'tags': ['dp', 'hashing', 'strings'], 'dif': '3200'}
{'pro_id': '613D', 'name': 'Kingdom and its Cities', 'tags': ['dfs and similar', 'divide and conquer', 'dp', 'graphs', 'sortings', 'trees'], 'dif': '2800'}
{'pro_id': '613C', 'name': 'Necklace', 'tags': ['constructive algorithms', 'math'], 'dif': '2800'}
{'pro_id': '613B', 'name': 'Skills', 'tags': ['binary search', 'brute force', 'dp', 'greedy', 'sortings', 'two pointers'], 'dif': '2200'}
{'pro_id': '613A', 'name': 'Peter and Snow Blower', 'tags': ['binary search', 'geometry', 'ternary search'], 'dif': '1900'}
{'pro_id': '612F', 'name': 'Simba on the Circle', 'tags': ['dp'], 'dif': '2600'}
{'pro_id': '612E', 'name': 'Square Root of Permutation', 'tags': ['combinatorics', 'constructive algorithms', 'dfs and similar', 'graphs', 'math'], 'dif': '2200'}
{'pro_id': '612D', 'name': 'The Union of k-Segments', 'tags': ['greedy', 'sortings'], 'dif': '1900'}
{'pro_id': '612C', 'name': 'Replace To Make Regular Bracket Sequence', 'tags': ['data structures', 'expression parsing', 'math'], 'dif': '1500'}
{'pro_id': '612B', 'name': 'HDD is Outdated Technology', 'tags': ['implementation', 'math'], 'dif': '1200'}
{'pro_id': '612A', 'name': 'The Text Splitting', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1300'}
{'pro_id': '611H', 'name': 'New Year  and Forgotten Tree', 'tags': ['constructive algorithms', 'flows', 'graphs'], 'dif': '3000'}
{'pro_id': '611G', 'name': 'New Year and Cake', 'tags': ['geometry', 'two pointers'], 'dif': '2900'}
{'pro_id': '611F', 'name': 'New Year and Cleaning', 'tags': ['binary search', 'implementation'], 'dif': '2500'}
{'pro_id': '611E', 'name': 'New Year and Three Musketeers', 'tags': ['data structures', 'greedy', 'sortings'], 'dif': '2300'}
{'pro_id': '611D', 'name': 'New Year and Ancient Prophecy', 'tags': ['dp', 'hashing', 'strings'], 'dif': '1900'}
{'pro_id': '611C', 'name': 'New Year and Domino', 'tags': ['dp', 'implementation'], 'dif': '1500'}
{'pro_id': '611B', 'name': 'New Year and Old Property', 'tags': ['bitmasks', 'brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '611A', 'name': 'New Year and Days', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '610E', 'name': 'Alphabet Permutations', 'tags': ['data structures', 'strings'], 'dif': '2700'}
{'pro_id': '610D', 'name': 'Vika and Segments', 'tags': ['constructive algorithms', 'data structures', 'geometry', 'two pointers'], 'dif': '2300'}
{'pro_id': '610C', 'name': 'Harmony Analysis', 'tags': ['constructive algorithms'], 'dif': '1800'}
{'pro_id': '610B', 'name': 'Vika and Squares', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1300'}
{'pro_id': '610A', 'name': 'Pasha and Stick', 'tags': ['combinatorics', 'math'], 'dif': '1000'}
{'pro_id': '609F', 'name': 'Frogs and mosquitoes', 'tags': ['data structures', 'greedy'], 'dif': '2500'}
{'pro_id': '609E', 'name': 'Minimum spanning tree for each edge', 'tags': ['data structures', 'dfs and similar', 'dsu', 'graphs', 'trees'], 'dif': '2100'}
{'pro_id': '609D', 'name': 'Gadgets for dollars and pounds', 'tags': ['binary search', 'greedy', 'two pointers'], 'dif': '2000'}
{'pro_id': '609C', 'name': 'Load Balancing', 'tags': ['implementation', 'math'], 'dif': '1500'}
{'pro_id': '609B', 'name': 'Книга - лучший подарок', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1100'}
{'pro_id': '609A', 'name': 'Флеш-карты', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '800'}
{'pro_id': '608B', 'name': 'Hamming Distance Sum', 'tags': ['combinatorics', 'strings'], 'dif': '1500'}
{'pro_id': '608A', 'name': 'Saitama Destroys Hotel', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '607E', 'name': 'Cross Sum', 'tags': ['binary search', 'geometry'], 'dif': '3300'}
{'pro_id': '607D', 'name': 'Power Tree', 'tags': ['data structures', 'trees'], 'dif': '2600'}
{'pro_id': '607C', 'name': 'Marbles', 'tags': ['hashing', 'strings'], 'dif': '2600'}
{'pro_id': '607B', 'name': 'Zuma', 'tags': ['dp'], 'dif': '2000'}
{'pro_id': '607A', 'name': 'Chain Reaction', 'tags': ['binary search', 'dp'], 'dif': '1600'}
{'pro_id': '606B', 'name': 'Testing Robots', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '606A', 'name': 'Magic Spheres', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '605E', 'name': 'Intergalaxy Trips', 'tags': ['probabilities', 'shortest paths'], 'dif': '2600'}
{'pro_id': '605D', 'name': 'Board Game', 'tags': ['data structures', 'dfs and similar'], 'dif': '2400'}
{'pro_id': '605C', 'name': "Freelancer's Dreams", 'tags': ['geometry'], 'dif': '2500'}
{'pro_id': '605B', 'name': 'Lazy Student', 'tags': ['constructive algorithms', 'data structures', 'graphs'], 'dif': '1800'}
{'pro_id': '605A', 'name': 'Sorting Railway Cars', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1600'}
{'pro_id': '604B', 'name': 'More Cowbell', 'tags': ['binary search', 'greedy'], 'dif': '1400'}
{'pro_id': '604A', 'name': 'Uncowed Forces', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '603E', 'name': 'Pastoral Oddities', 'tags': ['data structures', 'divide and conquer', 'dsu', 'math', 'trees'], 'dif': '2900'}
{'pro_id': '603D', 'name': 'Ruminations on Ruminants', 'tags': ['geometry', 'math'], 'dif': '2900'}
{'pro_id': '603C', 'name': 'Lieges of Legendre', 'tags': ['games', 'math'], 'dif': '2300'}
{'pro_id': '603B', 'name': 'Moodular Arithmetic', 'tags': ['combinatorics', 'dfs and similar', 'dsu', 'math', 'number theory'], 'dif': '2000'}
{'pro_id': '603A', 'name': 'Alternative Thinking', 'tags': ['dp', 'greedy', 'math'], 'dif': '1600'}
{'pro_id': '602B', 'name': 'Approximating a Constant Range', 'tags': ['dp', 'implementation', 'two pointers'], 'dif': '1400'}
{'pro_id': '602A', 'name': 'Two Bases', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '601E', 'name': 'A Museum Robbery', 'tags': ['data structures', 'dp'], 'dif': '2800'}
{'pro_id': '601D', 'name': 'Acyclic Organic Compounds', 'tags': ['data structures', 'dfs and similar', 'dsu', 'hashing', 'strings', 'trees'], 'dif': '2400'}
{'pro_id': '601C', 'name': 'Kleofáš and the n-thlon', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2400'}
{'pro_id': '601B', 'name': 'Lipshitz Sequence', 'tags': ['data structures', 'math'], 'dif': '2200'}
{'pro_id': '601A', 'name': 'The Two Routes', 'tags': ['graphs', 'shortest paths'], 'dif': '1600'}
{'pro_id': '600F', 'name': 'Edge coloring of bipartite graph', 'tags': ['graphs'], 'dif': '2900'}
{'pro_id': '600E', 'name': 'Lomsat gelral', 'tags': ['data structures', 'dfs and similar', 'dsu', 'trees'], 'dif': '2300'}
{'pro_id': '600D', 'name': "Area of Two Circles' Intersection", 'tags': ['geometry'], 'dif': '2000'}
{'pro_id': '600C', 'name': 'Make Palindrome', 'tags': ['constructive algorithms', 'greedy', 'strings'], 'dif': '1800'}
{'pro_id': '600B', 'name': 'Queries about less or equal elements', 'tags': ['binary search', 'data structures', 'sortings', 'two pointers'], 'dif': '1300'}
{'pro_id': '600A', 'name': 'Extract Numbers', 'tags': ['implementation', 'strings'], 'dif': '1600'}
{'pro_id': '599E', 'name': 'Sandy and Nuts', 'tags': ['bitmasks', 'dp', 'trees'], 'dif': '2100'}
{'pro_id': '599D', 'name': 'Spongebob and Squares', 'tags': ['brute force', 'math'], 'dif': '1800'}
{'pro_id': '599C', 'name': 'Day at the Beach', 'tags': ['sortings'], 'dif': '1600'}
{'pro_id': '599B', 'name': 'Spongebob and Joke', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '599A', 'name': 'Patrick and Shopping', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '598F', 'name': 'Cut Length', 'tags': ['geometry'], 'dif': '2900'}
{'pro_id': '598E', 'name': 'Chocolate Bar', 'tags': ['brute force', 'dp'], 'dif': '2000'}
{'pro_id': '598D', 'name': 'Igor In the Museum', 'tags': ['dfs and similar', 'graphs', 'shortest paths'], 'dif': '1700'}
{'pro_id': '598C', 'name': 'Nearest vectors', 'tags': ['geometry', 'sortings'], 'dif': '2200'}
{'pro_id': '598B', 'name': 'Queries on a String', 'tags': ['implementation', 'strings'], 'dif': '1400'}
{'pro_id': '598A', 'name': 'Tricky Sum', 'tags': ['math'], 'dif': '1000'}
{'pro_id': '597C', 'name': 'Subsequences', 'tags': ['data structures', 'dp'], 'dif': '1900'}
{'pro_id': '597B', 'name': 'Restaurant', 'tags': ['dp', 'greedy', 'sortings'], 'dif': '1600'}
{'pro_id': '597A', 'name': 'Divisibility', 'tags': ['math'], 'dif': '1600'}
{'pro_id': '596E', 'name': 'Wilbur and Strings', 'tags': ['dfs and similar', 'dp', 'graphs', 'strings'], 'dif': '2900'}
{'pro_id': '596D', 'name': 'Wilbur and Trees', 'tags': ['dp', 'math', 'probabilities', 'sortings'], 'dif': '2500'}
{'pro_id': '596C', 'name': 'Wilbur and Points', 'tags': ['combinatorics', 'greedy', 'sortings'], 'dif': '1700'}
{'pro_id': '596B', 'name': 'Wilbur and Array', 'tags': ['greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '596A', 'name': 'Wilbur and Swimming Pool', 'tags': ['geometry', 'implementation'], 'dif': '1200'}
{'pro_id': '595B', 'name': 'Pasha and Phone', 'tags': ['binary search', 'math'], 'dif': '1600'}
{'pro_id': '595A', 'name': 'Vitaly and Night', 'tags': ['constructive algorithms', 'implementation'], 'dif': '700'}
{'pro_id': '594E', 'name': 'Cutting the Line', 'tags': ['string suffix structures', 'strings'], 'dif': '3200'}
{'pro_id': '594D', 'name': 'REQ', 'tags': ['data structures', 'number theory'], 'dif': '2500'}
{'pro_id': '594C', 'name': 'Edo and Magnets', 'tags': ['brute force', 'two pointers'], 'dif': '2700'}
{'pro_id': '594B', 'name': 'Max and Bike', 'tags': ['binary search', 'geometry'], 'dif': '2400'}
{'pro_id': '594A', 'name': 'Warrior and Archer', 'tags': ['games'], 'dif': '2900'}
{'pro_id': '593E', 'name': 'Strange Calculation and Cats', 'tags': ['dp', 'matrices'], 'dif': '2600'}
{'pro_id': '593D', 'name': 'Happy Tree Party', 'tags': ['data structures', 'dfs and similar', 'graphs', 'math', 'trees'], 'dif': '2300'}
{'pro_id': '593C', 'name': 'Beautiful Function', 'tags': ['constructive algorithms', 'math'], 'dif': '2700'}
{'pro_id': '593B', 'name': 'Anton and Lines', 'tags': ['geometry', 'sortings'], 'dif': '1600'}
{'pro_id': '593A', 'name': '2Char', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '592E', 'name': 'BCPC', 'tags': ['binary search', 'geometry', 'two pointers'], 'dif': '2800'}
{'pro_id': '592D', 'name': 'Super M', 'tags': ['dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '2200'}
{'pro_id': '592C', 'name': 'The Big Race', 'tags': ['math'], 'dif': '1700'}
{'pro_id': '592B', 'name': 'The Monster and the Squirrel', 'tags': ['math'], 'dif': '1200'}
{'pro_id': '592A', 'name': 'PawnChess', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '591B', 'name': 'Rebranding', 'tags': ['implementation', 'strings'], 'dif': '1200'}
{'pro_id': '591A', 'name': "Wizards' Duel", 'tags': ['implementation', 'math'], 'dif': '900'}
{'pro_id': '590E', 'name': 'Birthday', 'tags': ['graph matchings', 'strings'], 'dif': '3100'}
{'pro_id': '590D', 'name': 'Top Secret Task', 'tags': ['dp'], 'dif': '2300'}
{'pro_id': '590C', 'name': 'Three States', 'tags': ['dfs and similar', 'graphs', 'shortest paths'], 'dif': '2200'}
{'pro_id': '590B', 'name': "Chip 'n Dale Rescue Rangers", 'tags': ['binary search', 'geometry', 'math'], 'dif': '2100'}
{'pro_id': '590A', 'name': 'Median Smoothing', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '588B', 'name': 'Duff in Love', 'tags': ['math'], 'dif': '1400'}
{'pro_id': '588A', 'name': 'Duff and Meat', 'tags': ['greedy'], 'dif': '1000'}
{'pro_id': '587F', 'name': 'Duff is Mad', 'tags': ['data structures', 'strings'], 'dif': '3000'}
{'pro_id': '587E', 'name': 'Duff as a Queen', 'tags': ['data structures'], 'dif': '2800'}
{'pro_id': '587D', 'name': 'Duff in Mafia', 'tags': ['2-sat', 'binary search'], 'dif': '2900'}
{'pro_id': '587C', 'name': 'Duff in the Army', 'tags': ['data structures', 'trees'], 'dif': '2200'}
{'pro_id': '587B', 'name': 'Duff in Beach', 'tags': ['dp'], 'dif': '2300'}
{'pro_id': '587A', 'name': 'Duff and Weight Lifting', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '586B', 'name': 'Laurenty and Shop', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '586A', 'name': "Alena's Schedule", 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '585F', 'name': 'Digits of Number Pi', 'tags': ['dp', 'implementation', 'strings'], 'dif': '3200'}
{'pro_id': '585E', 'name': 'Present for Vitalik the Philatelist', 'tags': ['combinatorics', 'math', 'number theory'], 'dif': '2800'}
{'pro_id': '585D', 'name': 'Lizard Era: Beginning', 'tags': ['meet-in-the-middle'], 'dif': '2500'}
{'pro_id': '585C', 'name': 'Alice, Bob, Oranges and Apples', 'tags': ['number theory'], 'dif': '2400'}
{'pro_id': '585B', 'name': 'Phillip and Trains', 'tags': ['dfs and similar', 'graphs', 'shortest paths'], 'dif': '1800'}
{'pro_id': '585A', 'name': 'Gennady the Dentist', 'tags': ['brute force', 'implementation'], 'dif': '1800'}
{'pro_id': '584E', 'name': 'Anton and Ira', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '2400'}
{'pro_id': '584D', 'name': 'Dima and Lisa', 'tags': ['brute force', 'math', 'number theory'], 'dif': '1700'}
{'pro_id': '584C', 'name': 'Marina and Vasya', 'tags': ['constructive algorithms', 'greedy', 'strings'], 'dif': '1700'}
{'pro_id': '584B', 'name': 'Kolya and Tanya', 'tags': ['combinatorics'], 'dif': '1500'}
{'pro_id': '584A', 'name': 'Olesya and Rodion', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '583B', 'name': "Robot's Task", 'tags': ['greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '583A', 'name': 'Asphalting Roads', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '582E', 'name': 'Boolean Function', 'tags': ['bitmasks', 'dp', 'expression parsing'], 'dif': '2900'}
{'pro_id': '582D', 'name': 'Number of Binominal Coefficients', 'tags': ['dp', 'math', 'number theory'], 'dif': '3100'}
{'pro_id': '582C', 'name': 'Superior Periodic Subarrays', 'tags': ['number theory'], 'dif': '2900'}
{'pro_id': '582B', 'name': 'Once Again...', 'tags': ['constructive algorithms', 'dp', 'matrices'], 'dif': '2000'}
{'pro_id': '582A', 'name': 'GCD Table', 'tags': ['constructive algorithms', 'greedy', 'number theory'], 'dif': '1700'}
{'pro_id': '581F', 'name': 'Zublicanes and Mumocrates', 'tags': ['dp', 'trees', 'two pointers'], 'dif': '2600'}
{'pro_id': '581E', 'name': 'Kojiro and Furrari', 'tags': ['dp', 'greedy'], 'dif': '2600'}
{'pro_id': '581D', 'name': 'Three Logos', 'tags': ['bitmasks', 'brute force', 'constructive algorithms', 'geometry', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '581C', 'name': 'Developing Skills', 'tags': ['implementation', 'math', 'sortings'], 'dif': '1400'}
{'pro_id': '581B', 'name': 'Luxurious Houses', 'tags': ['implementation', 'math'], 'dif': '1200'}
{'pro_id': '581A', 'name': 'Vasya the Hipster', 'tags': ['implementation', 'math'], 'dif': '700'}
{'pro_id': '580E', 'name': 'Kefa and Watch', 'tags': ['data structures', 'hashing', 'strings'], 'dif': '2700'}
{'pro_id': '580D', 'name': 'Kefa and Dishes', 'tags': ['bitmasks', 'dp'], 'dif': '1900'}
{'pro_id': '580C', 'name': 'Kefa and Park', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '1500'}
{'pro_id': '580B', 'name': 'Kefa and Company', 'tags': ['binary search', 'sortings', 'two pointers'], 'dif': '1500'}
{'pro_id': '580A', 'name': 'Kefa and First Steps', 'tags': ['brute force', 'dp', 'implementation'], 'dif': '1000'}
{'pro_id': '579B', 'name': 'Finding Team Member', 'tags': ['brute force', 'implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '579A', 'name': 'Raising Bacteria', 'tags': ['bitmasks'], 'dif': '1000'}
{'pro_id': '578F', 'name': 'Mirror Box', 'tags': ['matrices', 'trees'], 'dif': '3400'}
{'pro_id': '578E', 'name': 'Walking!', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2500'}
{'pro_id': '578D', 'name': 'LCS Again', 'tags': ['dp', 'greedy'], 'dif': '2800'}
{'pro_id': '578C', 'name': 'Weakness and Poorness', 'tags': ['ternary search'], 'dif': '2100'}
{'pro_id': '578B', 'name': '"Or" Game', 'tags': ['brute force', 'greedy'], 'dif': '1800'}
{'pro_id': '578A', 'name': 'A Problem about Polyline', 'tags': ['geometry', 'math'], 'dif': '1700'}
{'pro_id': '577B', 'name': 'Modulo Sum', 'tags': ['combinatorics', 'data structures', 'dp', 'two pointers'], 'dif': '1800'}
{'pro_id': '577A', 'name': 'Multiplication Table', 'tags': ['implementation', 'number theory'], 'dif': '1100'}
{'pro_id': '576E', 'name': 'Painting Edges', 'tags': ['binary search', 'data structures'], 'dif': '3200'}
{'pro_id': '576D', 'name': 'Flights for Regular Customers', 'tags': ['dp', 'matrices'], 'dif': '2600'}
{'pro_id': '576C', 'name': 'Points on Plane', 'tags': ['constructive algorithms', 'divide and conquer', 'geometry', 'greedy', 'sortings'], 'dif': '2300'}
{'pro_id': '576B', 'name': 'Invariance of Tree', 'tags': ['constructive algorithms', 'dfs and similar', 'greedy', 'trees'], 'dif': '2300'}
{'pro_id': '576A', 'name': "Vasya and Petya's Game", 'tags': ['math', 'number theory'], 'dif': '1500'}
{'pro_id': '575I', 'name': 'Robots protection', 'tags': ['data structures'], 'dif': '3000'}
{'pro_id': '575H', 'name': 'Bots', 'tags': ['combinatorics', 'number theory'], 'dif': '1800'}
{'pro_id': '575G', 'name': 'Run for beer', 'tags': ['dfs and similar', 'shortest paths'], 'dif': '2400'}
{'pro_id': '575F', 'name': 'Bulbo', 'tags': ['dp', 'greedy'], 'dif': '2200'}
{'pro_id': '575E', 'name': 'Spectator Riots', 'tags': ['geometry'], 'dif': '3200'}
{'pro_id': '575D', 'name': 'Tablecity', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1700'}
{'pro_id': '575C', 'name': 'Party', 'tags': ['bitmasks', 'brute force', 'graph matchings'], 'dif': '2800'}
{'pro_id': '575B', 'name': 'Bribes', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '2300'}
{'pro_id': '575A', 'name': 'Fibonotci', 'tags': ['data structures', 'math', 'matrices'], 'dif': '2800'}
{'pro_id': '574B', 'name': 'Bear and Three Musketeers', 'tags': ['brute force', 'dfs and similar', 'graphs', 'hashing'], 'dif': '1500'}
{'pro_id': '574A', 'name': 'Bear and Elections', 'tags': ['greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '573E', 'name': 'Bear and Bowling', 'tags': ['data structures', 'greedy'], 'dif': '3100'}
{'pro_id': '573D', 'name': 'Bear and Cavalry', 'tags': ['data structures', 'divide and conquer', 'dp'], 'dif': '2900'}
{'pro_id': '573C', 'name': 'Bear and Drawing', 'tags': ['constructive algorithms', 'dfs and similar', 'trees'], 'dif': '2600'}
{'pro_id': '573B', 'name': 'Bear and Blocks', 'tags': ['binary search', 'data structures', 'dp', 'math'], 'dif': '1800'}
{'pro_id': '573A', 'name': 'Bear and Poker', 'tags': ['implementation', 'math', 'number theory'], 'dif': '1400'}
{'pro_id': '572B', 'name': 'Order Book', 'tags': ['data structures', 'greedy', 'implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '572A', 'name': 'Arrays', 'tags': ['sortings'], 'dif': '1000'}
{'pro_id': '571E', 'name': 'Geometric Progressions', 'tags': ['math'], 'dif': '3200'}
{'pro_id': '571D', 'name': 'Campus', 'tags': ['binary search', 'data structures', 'dsu', 'trees'], 'dif': '3000'}
{'pro_id': '571C', 'name': 'CNF 2', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs', 'greedy'], 'dif': '2600'}
{'pro_id': '571B', 'name': 'Minimization', 'tags': ['dp', 'greedy', 'sortings'], 'dif': '2300'}
{'pro_id': '571A', 'name': 'Lengthening Sticks', 'tags': ['combinatorics', 'implementation', 'math'], 'dif': '2300'}
{'pro_id': '570E', 'name': 'Pig and Palindromes', 'tags': ['combinatorics', 'dp'], 'dif': '2600'}
{'pro_id': '570D', 'name': 'Tree Requests', 'tags': ['binary search', 'bitmasks', 'constructive algorithms', 'dfs and similar', 'graphs', 'trees'], 'dif': '2400'}
{'pro_id': '570C', 'name': 'Replacement', 'tags': ['constructive algorithms', 'data structures', 'implementation'], 'dif': '1600'}
{'pro_id': '570B', 'name': 'Simple Game', 'tags': ['constructive algorithms', 'games', 'greedy', 'implementation', 'math'], 'dif': '1300'}
{'pro_id': '570A', 'name': 'Elections', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '569B', 'name': 'Inventory', 'tags': ['greedy', 'math'], 'dif': '1200'}
{'pro_id': '569A', 'name': 'Music', 'tags': ['implementation', 'math'], 'dif': '1500'}
{'pro_id': '568E', 'name': 'Longest Increasing Subsequence', 'tags': ['data structures', 'dp'], 'dif': '3000'}
{'pro_id': '568D', 'name': 'Sign Posts', 'tags': ['brute force', 'geometry', 'math'], 'dif': '2800'}
{'pro_id': '568C', 'name': 'New Language', 'tags': ['2-sat', 'greedy'], 'dif': '2600'}
{'pro_id': '568B', 'name': 'Symmetric and Transitive', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2100'}
{'pro_id': '568A', 'name': 'Primes or Palindromes?', 'tags': ['brute force', 'implementation', 'math', 'number theory'], 'dif': '1700'}
{'pro_id': '567F', 'name': 'Mausoleum', 'tags': ['dp'], 'dif': '2700'}
{'pro_id': '567E', 'name': 'President and Roads', 'tags': ['dfs and similar', 'graphs', 'hashing', 'shortest paths'], 'dif': '2600'}
{'pro_id': '567D', 'name': 'One-Dimensional Battle Ships', 'tags': ['binary search', 'data structures', 'greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '567C', 'name': 'Geometric Progression', 'tags': ['binary search', 'data structures', 'dp'], 'dif': '1700'}
{'pro_id': '567B', 'name': 'Berland National Library', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '567A', 'name': 'Lineland Mail', 'tags': ['greedy', 'implementation'], 'dif': '1000'}
{'pro_id': '566G', 'name': 'Max and Min', 'tags': ['geometry'], 'dif': '2500'}
{'pro_id': '566F', 'name': 'Clique in the Divisibility Graph', 'tags': ['dp', 'math', 'number theory'], 'dif': '1600'}
{'pro_id': '566E', 'name': 'Restoring Map', 'tags': ['bitmasks', 'constructive algorithms', 'trees'], 'dif': '3200'}
{'pro_id': '566D', 'name': 'Restructuring Company', 'tags': ['data structures', 'dsu'], 'dif': '1900'}
{'pro_id': '566C', 'name': 'Logistical Questions', 'tags': ['dfs and similar', 'divide and conquer', 'trees'], 'dif': '3000'}
{'pro_id': '566B', 'name': 'Replicating Processes', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2600'}
{'pro_id': '566A', 'name': 'Matching Names', 'tags': ['dfs and similar', 'strings', 'trees'], 'dif': '2300'}
{'pro_id': '560B', 'name': 'Gerald is into Art', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1300'}
{'pro_id': '560A', 'name': 'Currency System in Geraldion', 'tags': ['implementation', 'sortings'], 'dif': '1100'}
{'pro_id': '559E', 'name': 'Gerald and Path', 'tags': ['dp', 'sortings'], 'dif': '2900'}
{'pro_id': '559D', 'name': 'Randomizer', 'tags': ['combinatorics', 'geometry', 'probabilities'], 'dif': '2800'}
{'pro_id': '559C', 'name': 'Gerald and Giant Chess', 'tags': ['combinatorics', 'dp', 'math', 'number theory'], 'dif': '2500'}
{'pro_id': '559B', 'name': 'Equivalent Strings', 'tags': ['divide and conquer', 'hashing', 'sortings', 'strings'], 'dif': '1800'}
{'pro_id': '559A', 'name': "Gerald's Hexagon", 'tags': ['brute force', 'geometry', 'math'], 'dif': '1600'}
{'pro_id': '558E', 'name': 'A Simple Task', 'tags': ['data structures', 'sortings', 'strings'], 'dif': '2600'}
{'pro_id': '558D', 'name': 'Guess Your Way Out! II', 'tags': ['data structures', 'implementation', 'sortings'], 'dif': '2500'}
{'pro_id': '558C', 'name': 'Amr and Chemistry', 'tags': ['brute force', 'graphs', 'greedy', 'math', 'shortest paths'], 'dif': '2000'}
{'pro_id': '558B', 'name': 'Amr and The Large Array', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '558A', 'name': 'Lala Land and Apple Trees', 'tags': ['brute force', 'implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '557E', 'name': 'Ann and Half-Palindrome', 'tags': ['data structures', 'dp', 'graphs', 'string suffix structures', 'strings', 'trees'], 'dif': '2700'}
{'pro_id': '557D', 'name': 'Vitaly and Cycle', 'tags': ['combinatorics', 'dfs and similar', 'graphs', 'math'], 'dif': '2300'}
{'pro_id': '557C', 'name': 'Arthur and Table', 'tags': ['brute force', 'data structures', 'dp', 'greedy', 'math', 'sortings'], 'dif': '1900'}
{'pro_id': '557B', 'name': 'Pasha and Tea', 'tags': ['constructive algorithms', 'implementation', 'math', 'sortings'], 'dif': '1500'}
{'pro_id': '557A', 'name': 'Ilya and Diplomas', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1200'}
{'pro_id': '556B', 'name': 'Case of Fake Numbers', 'tags': ['brute force', 'implementation'], 'dif': '1100'}
{'pro_id': '556A', 'name': 'Case of the Zeros and Ones', 'tags': ['greedy'], 'dif': '1100'}
{'pro_id': '555E', 'name': 'Case of Computer Network', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '2800'}
{'pro_id': '555D', 'name': 'Case of a Top Secret', 'tags': ['binary search', 'implementation', 'math'], 'dif': '2500'}
{'pro_id': '555C', 'name': 'Case of Chocolate', 'tags': ['data structures'], 'dif': '2500'}
{'pro_id': '555B', 'name': 'Case of Fugitive', 'tags': ['data structures', 'greedy', 'sortings'], 'dif': '2100'}
{'pro_id': '555A', 'name': 'Case of Matryoshkas', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '554B', 'name': 'Ohana Cleans Up', 'tags': ['brute force', 'greedy', 'strings'], 'dif': '1200'}
{'pro_id': '554A', 'name': 'Kyoya and Photobooks', 'tags': ['brute force', 'math', 'strings'], 'dif': '900'}
{'pro_id': '553E', 'name': 'Kyoya and Train', 'tags': ['dp', 'fft', 'graphs', 'math', 'probabilities'], 'dif': '3300'}
{'pro_id': '553D', 'name': 'Nudist Beach', 'tags': ['binary search', 'graphs', 'greedy'], 'dif': '2300'}
{'pro_id': '553C', 'name': 'Love Triangles', 'tags': ['dfs and similar', 'dsu', 'graphs'], 'dif': '2300'}
{'pro_id': '553B', 'name': 'Kyoya and Permutation', 'tags': ['binary search', 'combinatorics', 'constructive algorithms', 'greedy', 'implementation', 'math'], 'dif': '2200'}
{'pro_id': '553A', 'name': 'Kyoya and Colored Balls', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '1700'}
{'pro_id': '552E', 'name': 'Vanya and Brackets', 'tags': ['brute force', 'dp', 'expression parsing', 'greedy', 'implementation', 'strings'], 'dif': '2300'}
{'pro_id': '552D', 'name': 'Vanya and Triangles', 'tags': ['brute force', 'combinatorics', 'data structures', 'geometry', 'math', 'sortings'], 'dif': '1900'}
{'pro_id': '552C', 'name': 'Vanya and Scales', 'tags': ['brute force', 'dp', 'greedy', 'math', 'meet-in-the-middle', 'number theory'], 'dif': '1800'}
{'pro_id': '552B', 'name': 'Vanya and Books', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '552A', 'name': 'Vanya and Table', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '551E', 'name': 'GukiZ and GukiZiana', 'tags': ['binary search', 'data structures', 'implementation'], 'dif': '2600'}
{'pro_id': '551D', 'name': 'GukiZ and Binary Operations', 'tags': ['combinatorics', 'implementation', 'math', 'matrices', 'number theory'], 'dif': '2400'}
{'pro_id': '551C', 'name': 'GukiZ hates Boxes', 'tags': ['binary search', 'greedy'], 'dif': '2200'}
{'pro_id': '551B', 'name': 'ZgukistringZ', 'tags': ['brute force', 'constructive algorithms', 'implementation', 'strings'], 'dif': '1800'}
{'pro_id': '551A', 'name': 'GukiZ and Contest', 'tags': ['brute force', 'implementation', 'sortings'], 'dif': '1000'}
{'pro_id': '550E', 'name': 'Brackets in Implications', 'tags': ['constructive algorithms', 'greedy', 'implementation', 'math'], 'dif': '2300'}
{'pro_id': '550D', 'name': 'Regular Bridge', 'tags': ['constructive algorithms', 'graphs', 'implementation'], 'dif': '2000'}
{'pro_id': '550C', 'name': 'Divisibility by Eight', 'tags': ['brute force', 'dp', 'math'], 'dif': '1500'}
{'pro_id': '550B', 'name': 'Preparing Olympiad', 'tags': ['bitmasks', 'brute force'], 'dif': '1500'}
{'pro_id': '550A', 'name': 'Two Substrings', 'tags': ['brute force', 'dp', 'greedy', 'implementation', 'strings'], 'dif': '1500'}
{'pro_id': '549H', 'name': 'Degenerate Matrix', 'tags': ['binary search', 'math'], 'dif': '2100'}
{'pro_id': '549G', 'name': 'Happy Line', 'tags': ['constructive algorithms', 'greedy', 'sortings'], 'dif': '2200'}
{'pro_id': '549F', 'name': 'Yura and Developers', 'tags': ['data structures', 'divide and conquer'], 'dif': '2700'}
{'pro_id': '549E', 'name': 'Sasha Circle', 'tags': ['geometry', 'math'], 'dif': '3200'}
{'pro_id': '549D', 'name': 'Haar Features', 'tags': ['greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '549C', 'name': 'The Game Of Parity', 'tags': ['games'], 'dif': '2200'}
{'pro_id': '549B', 'name': 'Looksery Party', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs', 'greedy'], 'dif': '2300'}
{'pro_id': '549A', 'name': 'Face Detection', 'tags': ['implementation', 'strings'], 'dif': '1000'}
{'pro_id': '548B', 'name': 'Mike and Fun', 'tags': ['brute force', 'dp', 'greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '548A', 'name': 'Mike and Fax', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1200'}
{'pro_id': '547E', 'name': 'Mike and Friends', 'tags': ['data structures', 'string suffix structures', 'strings', 'trees'], 'dif': '2800'}
{'pro_id': '547D', 'name': 'Mike and Fish', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs'], 'dif': '2500'}
{'pro_id': '547C', 'name': 'Mike and Foam', 'tags': ['bitmasks', 'combinatorics', 'dp', 'math', 'number theory'], 'dif': '2700'}
{'pro_id': '547B', 'name': 'Mike and Feet', 'tags': ['binary search', 'data structures', 'dp', 'dsu'], 'dif': '2100'}
{'pro_id': '547A', 'name': 'Mike and Frog', 'tags': ['brute force', 'greedy', 'implementation', 'math'], 'dif': '1900'}
{'pro_id': '546E', 'name': 'Soldier and Traveling', 'tags': ['flows', 'graphs', 'math'], 'dif': '2300'}
{'pro_id': '546D', 'name': 'Soldier and Number Game', 'tags': ['constructive algorithms', 'dp', 'math', 'number theory'], 'dif': '1700'}
{'pro_id': '546C', 'name': 'Soldier and Cards', 'tags': ['brute force', 'dfs and similar', 'games'], 'dif': '1400'}
{'pro_id': '546B', 'name': 'Soldier and Badges', 'tags': ['brute force', 'greedy', 'implementation', 'sortings'], 'dif': '1300'}
{'pro_id': '546A', 'name': 'Soldier and Bananas', 'tags': ['brute force', 'implementation', 'math'], 'dif': '800'}
{'pro_id': '545E', 'name': 'Paths and Trees', 'tags': ['graphs', 'greedy', 'shortest paths'], 'dif': '2100'}
{'pro_id': '545D', 'name': 'Queue', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '545C', 'name': 'Woodcutters', 'tags': ['dp', 'greedy'], 'dif': '1500'}
{'pro_id': '545B', 'name': 'Equidistant String', 'tags': ['greedy'], 'dif': '1200'}
{'pro_id': '545A', 'name': 'Toy Cars', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '544B', 'name': 'Sea and Islands', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1400'}
{'pro_id': '544A', 'name': 'Set of Strings', 'tags': ['implementation', 'strings'], 'dif': '1100'}
{'pro_id': '543E', 'name': 'Listening to Music', 'tags': ['constructive algorithms', 'data structures'], 'dif': '3200'}
{'pro_id': '543D', 'name': 'Road Improvement', 'tags': ['dp', 'trees'], 'dif': '2300'}
{'pro_id': '543C', 'name': 'Remembering Strings', 'tags': ['bitmasks', 'dp'], 'dif': '2600'}
{'pro_id': '543B', 'name': 'Destroying Roads', 'tags': ['constructive algorithms', 'graphs', 'shortest paths'], 'dif': '2300'}
{'pro_id': '543A', 'name': 'Writing Code', 'tags': ['dp'], 'dif': '1900'}
{'pro_id': '542F', 'name': 'Quest', 'tags': ['dp', 'greedy'], 'dif': '2100'}
{'pro_id': '542E', 'name': 'Playing on Graph', 'tags': ['graphs', 'shortest paths'], 'dif': '2600'}
{'pro_id': '542D', 'name': "Superhero's Job", 'tags': ['dfs and similar', 'dp', 'hashing', 'math', 'number theory'], 'dif': '2600'}
{'pro_id': '542C', 'name': 'Idempotent functions', 'tags': ['constructive algorithms', 'graphs', 'math'], 'dif': '2000'}
{'pro_id': '542B', 'name': 'Duck Hunt', 'tags': ['data structures'], 'dif': '3200'}
{'pro_id': '542A', 'name': 'Place Your Ad Here', 'tags': ['data structures', 'sortings'], 'dif': '2500'}
{'pro_id': '540E', 'name': 'Infinite Inversions', 'tags': ['binary search', 'data structures', 'implementation', 'sortings', 'trees'], 'dif': '2400'}
{'pro_id': '540D', 'name': 'Bad Luck Island', 'tags': ['dp', 'probabilities'], 'dif': '2100'}
{'pro_id': '540C', 'name': 'Ice Cave', 'tags': ['dfs and similar'], 'dif': '1800'}
{'pro_id': '540B', 'name': 'School Marks', 'tags': ['greedy', 'implementation'], 'dif': '1700'}
{'pro_id': '540A', 'name': 'Combination Lock', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '538H', 'name': 'Summer Dichotomy', 'tags': ['2-sat', 'data structures', 'dfs and similar', 'greedy'], 'dif': '3100'}
{'pro_id': '538G', 'name': 'Berserk Robot', 'tags': ['constructive algorithms', 'math', 'sortings'], 'dif': '3100'}
{'pro_id': '538F', 'name': 'A Heap of Heaps', 'tags': ['brute force', 'data structures', 'math', 'sortings'], 'dif': '2200'}
{'pro_id': '538E', 'name': 'Demiurges Play Again', 'tags': ['dfs and similar', 'dp', 'math', 'trees'], 'dif': '2200'}
{'pro_id': '538D', 'name': 'Weird Chess', 'tags': ['brute force', 'constructive algorithms', 'implementation'], 'dif': '1800'}
{'pro_id': '538C', 'name': "Tourist's Notes", 'tags': ['binary search', 'brute force', 'greedy', 'implementation', 'math'], 'dif': '1600'}
{'pro_id': '538B', 'name': 'Quasi Binary', 'tags': ['constructive algorithms', 'dp', 'greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '538A', 'name': 'Cutting Banner', 'tags': ['brute force', 'implementation'], 'dif': '1500'}
{'pro_id': '536E', 'name': 'Tavas on the Path', 'tags': ['data structures', 'divide and conquer', 'trees'], 'dif': '3100'}
{'pro_id': '536D', 'name': 'Tavas in Kansas', 'tags': ['dp', 'games'], 'dif': '2800'}
{'pro_id': '535E', 'name': 'Tavas and Pashmaks', 'tags': ['geometry', 'math'], 'dif': '2900'}
{'pro_id': '535D', 'name': 'Tavas and Malekas', 'tags': ['greedy', 'hashing', 'string suffix structures', 'strings'], 'dif': '2100'}
{'pro_id': '535C', 'name': 'Tavas and Karafs', 'tags': ['binary search', 'greedy', 'math'], 'dif': '1900'}
{'pro_id': '535B', 'name': 'Tavas and SaDDas', 'tags': ['bitmasks', 'brute force', 'combinatorics', 'implementation'], 'dif': '1100'}
{'pro_id': '535A', 'name': 'Tavas and Nafas', 'tags': ['brute force', 'implementation'], 'dif': '1100'}
{'pro_id': '534F', 'name': 'Simplified Nonogram', 'tags': ['bitmasks', 'dp', 'hashing', 'meet-in-the-middle'], 'dif': '2900'}
{'pro_id': '534E', 'name': 'Berland Local Positioning System', 'tags': ['constructive algorithms', 'greedy', 'hashing', 'implementation'], 'dif': '2600'}
{'pro_id': '534D', 'name': 'Handshakes', 'tags': ['binary search', 'constructive algorithms', 'data structures', 'greedy'], 'dif': '2000'}
{'pro_id': '534C', 'name': "Polycarpus' Dice", 'tags': ['math'], 'dif': '1600'}
{'pro_id': '534B', 'name': 'Covered Path', 'tags': ['dp', 'greedy', 'math'], 'dif': '1400'}
{'pro_id': '534A', 'name': 'Exam', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '1100'}
{'pro_id': '533F', 'name': 'Encoding', 'tags': ['hashing', 'string suffix structures', 'strings'], 'dif': '2400'}
{'pro_id': '533E', 'name': 'Correcting Mistakes', 'tags': ['constructive algorithms', 'dp', 'greedy', 'hashing', 'strings', 'two pointers'], 'dif': '1800'}
{'pro_id': '533D', 'name': 'Landmarks', 'tags': ['data structures', 'dp'], 'dif': '3000'}
{'pro_id': '533C', 'name': 'Board Game', 'tags': ['games', 'greedy', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '533B', 'name': 'Work Group', 'tags': ['dfs and similar', 'dp', 'graphs', 'strings', 'trees'], 'dif': '2000'}
{'pro_id': '533A', 'name': 'Berland Miners', 'tags': ['binary search', 'data structures', 'dfs and similar', 'greedy', 'trees'], 'dif': '3000'}
{'pro_id': '530I', 'name': 'Different variables', 'tags': ['*special problem'], 'dif': '2600'}
{'pro_id': '530H', 'name': 'Points in triangle', 'tags': ['*special problem', 'geometry'], 'dif': '2200'}
{'pro_id': '530G', 'name': 'Levenshtein distance', 'tags': ['*special problem'], 'dif': '2300'}
{'pro_id': '530F', 'name': 'Jumping frogs', 'tags': ['*special problem'], 'dif': '2300'}
{'pro_id': '530E', 'name': 'Sum and product', 'tags': ['*special problem'], 'dif': '1900'}
{'pro_id': '530D', 'name': 'Set subtraction', 'tags': ['*special problem'], 'dif': '1700'}
{'pro_id': '530C', 'name': 'Diophantine equation', 'tags': ['*special problem'], 'dif': '1700'}
{'pro_id': '530B', 'name': 'String inside out', 'tags': ['*special problem'], 'dif': '1600'}
{'pro_id': '530A', 'name': 'Quadratic equation', 'tags': ['*special problem'], 'dif': '1500'}
{'pro_id': '529B', 'name': 'Group Photo 2 (online mirror version)', 'tags': ['brute force', 'greedy', 'sortings'], 'dif': '1900'}
{'pro_id': '528E', 'name': 'Triangles 3000', 'tags': ['geometry', 'sortings'], 'dif': '3000'}
{'pro_id': '528D', 'name': 'Fuzzy Search', 'tags': ['bitmasks', 'brute force', 'fft'], 'dif': '2500'}
{'pro_id': '527E', 'name': 'Data Center Drama', 'tags': ['dfs and similar', 'graphs'], 'dif': '2600'}
{'pro_id': '527D', 'name': 'Clique Problem', 'tags': ['data structures', 'dp', 'greedy', 'implementation', 'sortings'], 'dif': '2100'}
{'pro_id': '527C', 'name': 'Glass Carving', 'tags': ['binary search', 'data structures', 'implementation'], 'dif': '1800'}
{'pro_id': '527B', 'name': 'Error Correct System', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '527A', 'name': 'Playing with Paper', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '526G', 'name': 'Spiders Evil Plan', 'tags': ['greedy', 'trees'], 'dif': '3300'}
{'pro_id': '526F', 'name': 'Pudding Monsters', 'tags': ['data structures', 'divide and conquer'], 'dif': '2900'}
{'pro_id': '526E', 'name': 'Transmitting Levels', 'tags': ['dp', 'implementation'], 'dif': '2400'}
{'pro_id': '526D', 'name': 'Om Nom and Necklace', 'tags': ['hashing', 'string suffix structures', 'strings'], 'dif': '2200'}
{'pro_id': '526C', 'name': 'Om Nom and Candies', 'tags': ['brute force', 'greedy', 'math'], 'dif': '2000'}
{'pro_id': '526B', 'name': 'Om Nom and Dark Park', 'tags': ['dfs and similar', 'greedy', 'implementation'], 'dif': '1500'}
{'pro_id': '526A', 'name': 'King of Thieves', 'tags': ['brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '525E', 'name': 'Anya and Cubes', 'tags': ['binary search', 'bitmasks', 'brute force', 'dp', 'math', 'meet-in-the-middle'], 'dif': '2200'}
{'pro_id': '525D', 'name': 'Arthur and Walls', 'tags': ['constructive algorithms', 'data structures', 'graphs', 'greedy', 'shortest paths'], 'dif': '2300'}
{'pro_id': '525C', 'name': 'Ilya and Sticks', 'tags': ['greedy', 'math', 'sortings'], 'dif': '1600'}
{'pro_id': '525B', 'name': 'Pasha and String', 'tags': ['constructive algorithms', 'greedy', 'math', 'strings'], 'dif': '1500'}
{'pro_id': '525A', 'name': 'Vitaliy and Pie', 'tags': ['greedy', 'hashing', 'strings'], 'dif': '1200'}
{'pro_id': '524F', 'name': 'And Yet Another Bracket Sequence', 'tags': ['data structures', 'greedy', 'hashing', 'string suffix structures', 'strings'], 'dif': '2700'}
{'pro_id': '524E', 'name': 'Rooks and Rectangles', 'tags': ['data structures', 'sortings'], 'dif': '2400'}
{'pro_id': '524D', 'name': 'Social Network', 'tags': ['greedy', 'two pointers'], 'dif': '2100'}
{'pro_id': '524C', 'name': 'The Art of Dealing with ATM', 'tags': ['binary search', 'sortings'], 'dif': '1800'}
{'pro_id': '524B', 'name': 'Фото на память - 2 (round version)', 'tags': ['dp', 'greedy'], 'dif': '1700'}
{'pro_id': '524A', 'name': 'Возможно, вы знаете этих людей?', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '523D', 'name': 'Statistics of Recompressing Videos', 'tags': ['*special problem', 'data structures', 'implementation'], 'dif': '1900'}
{'pro_id': '523C', 'name': 'Name Quest', 'tags': ['*special problem', 'greedy'], 'dif': '1800'}
{'pro_id': '523B', 'name': 'Mean Requests', 'tags': ['*special problem', 'implementation'], 'dif': '1800'}
{'pro_id': '523A', 'name': 'Rotate, Flip and Zoom', 'tags': ['*special problem', 'implementation'], 'dif': '1600'}
{'pro_id': '522D', 'name': 'Closest Equals', 'tags': ['*special problem', 'data structures'], 'dif': '2200'}
{'pro_id': '522C', 'name': 'Chicken or Fish?', 'tags': ['greedy'], 'dif': '2200'}
{'pro_id': '522B', 'name': 'Photo to Remember', 'tags': ['*special problem', 'data structures', 'dp', 'implementation'], 'dif': '1700'}
{'pro_id': '522A', 'name': 'Reposts', 'tags': ['*special problem', 'dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '1700'}
{'pro_id': '521E', 'name': 'Cycling City', 'tags': ['dfs and similar', 'graphs'], 'dif': '2800'}
{'pro_id': '521D', 'name': 'Shop', 'tags': ['greedy'], 'dif': '2700'}
{'pro_id': '520E', 'name': 'Pluses everywhere', 'tags': ['combinatorics', 'dp', 'math', 'number theory'], 'dif': '2500'}
{'pro_id': '520D', 'name': 'Cubes', 'tags': ['games', 'greedy', 'implementation'], 'dif': '2400'}
{'pro_id': '520C', 'name': 'DNA Alignment', 'tags': ['math', 'strings'], 'dif': '1700'}
{'pro_id': '520B', 'name': 'Two Buttons', 'tags': ['dfs and similar', 'graphs', 'greedy', 'implementation', 'math', 'shortest paths'], 'dif': '1400'}
{'pro_id': '520A', 'name': 'Pangram', 'tags': ['implementation', 'strings'], 'dif': '900'}
{'pro_id': '519E', 'name': 'A and B and Lecture Rooms', 'tags': ['binary search', 'data structures', 'dfs and similar', 'dp', 'trees'], 'dif': '2300'}
{'pro_id': '519D', 'name': 'A and B and Interesting Substrings', 'tags': ['data structures', 'dp', 'two pointers'], 'dif': '1900'}
{'pro_id': '519C', 'name': 'A and B and Team Training', 'tags': ['greedy', 'implementation', 'math', 'number theory'], 'dif': '1300'}
{'pro_id': '519B', 'name': 'A and B and Compilation Errors', 'tags': ['data structures', 'implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '519A', 'name': 'A and B and Chess', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '518F', 'name': 'Pasha and Pipe', 'tags': ['binary search', 'brute force', 'combinatorics', 'dp', 'implementation'], 'dif': '2800'}
{'pro_id': '518E', 'name': 'Arthur and Questions', 'tags': ['greedy', 'implementation', 'math', 'ternary search'], 'dif': '2400'}
{'pro_id': '518D', 'name': 'Ilya and Escalator', 'tags': ['combinatorics', 'dp', 'math', 'probabilities'], 'dif': '1900'}
{'pro_id': '518C', 'name': 'Anya and Smartphone', 'tags': ['constructive algorithms', 'data structures', 'implementation'], 'dif': '1600'}
{'pro_id': '518B', 'name': 'Tanya and Postcard', 'tags': ['greedy', 'implementation', 'strings'], 'dif': '1500'}
{'pro_id': '518A', 'name': 'Vitaly and Strings', 'tags': ['constructive algorithms', 'strings'], 'dif': '1600'}
{'pro_id': '516E', 'name': 'Drazil and His Happy Friends', 'tags': ['math', 'number theory'], 'dif': '3000'}
{'pro_id': '516D', 'name': 'Drazil and Morning Exercise', 'tags': ['dfs and similar', 'dp', 'dsu', 'trees', 'two pointers'], 'dif': '2800'}
{'pro_id': '515E', 'name': 'Drazil and Park', 'tags': ['data structures'], 'dif': '2600'}
{'pro_id': '515D', 'name': 'Drazil and Tiles', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2100'}
{'pro_id': '515C', 'name': 'Drazil and Factorial', 'tags': ['greedy', 'math', 'sortings'], 'dif': '1400'}
{'pro_id': '515B', 'name': 'Drazil and His Happy Friends', 'tags': ['brute force', 'dsu', 'meet-in-the-middle', 'number theory'], 'dif': '1400'}
{'pro_id': '515A', 'name': 'Drazil and Date', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '514E', 'name': 'Darth Vader and Tree', 'tags': ['dp', 'matrices'], 'dif': '2500'}
{'pro_id': '514D', 'name': 'R2D2 and Droid Army', 'tags': ['binary search', 'data structures', 'two pointers'], 'dif': '2100'}
{'pro_id': '514C', 'name': 'Watto and Mechanism', 'tags': ['binary search', 'data structures', 'hashing', 'string suffix structures', 'strings'], 'dif': '1900'}
{'pro_id': '514B', 'name': 'Han Solo and Lazer Gun', 'tags': ['brute force', 'data structures', 'geometry', 'implementation', 'math'], 'dif': '1400'}
{'pro_id': '514A', 'name': 'Chewbaсca and Number', 'tags': ['greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '513G3', 'name': 'Inversions problem', 'tags': ['dp'], 'dif': '3200'}
{'pro_id': '513G2', 'name': 'Inversions problem', 'tags': ['dp', 'probabilities'], 'dif': '2400'}
{'pro_id': '513G1', 'name': 'Inversions problem', 'tags': ['brute force', 'dfs and similar', 'dp', 'meet-in-the-middle'], 'dif': '1800'}
{'pro_id': '513F2', 'name': 'Scaygerboss', 'tags': ['flows'], 'dif': '2900'}
{'pro_id': '513F1', 'name': 'Scaygerboss', 'tags': ['flows'], 'dif': '2800'}
{'pro_id': '513E2', 'name': 'Subarray Cuts', 'tags': ['dp'], 'dif': '2700'}
{'pro_id': '513E1', 'name': 'Subarray Cuts', 'tags': ['dp'], 'dif': '2500'}
{'pro_id': '513D2', 'name': 'Constrained Tree', 'tags': ['constructive algorithms', 'data structures'], 'dif': '2500'}
{'pro_id': '513D1', 'name': 'Constrained Tree', 'tags': ['dfs and similar'], 'dif': '2400'}
{'pro_id': '513C', 'name': 'Second price auction', 'tags': ['bitmasks', 'probabilities'], 'dif': '2000'}
{'pro_id': '513B2', 'name': 'Permutations', 'tags': ['bitmasks', 'divide and conquer', 'math'], 'dif': '1800'}
{'pro_id': '513B1', 'name': 'Permutations', 'tags': ['brute force'], 'dif': '1500'}
{'pro_id': '513A', 'name': 'Game', 'tags': ['constructive algorithms', 'math'], 'dif': '900'}
{'pro_id': '512E', 'name': 'Fox And Polygon', 'tags': ['constructive algorithms', 'divide and conquer'], 'dif': '2800'}
{'pro_id': '512D', 'name': 'Fox And Travelling', 'tags': ['dp', 'trees'], 'dif': '2900'}
{'pro_id': '510E', 'name': 'Fox And Dinner', 'tags': ['flows'], 'dif': '2800'}
{'pro_id': '510D', 'name': 'Fox And Jumping', 'tags': ['bitmasks', 'brute force', 'dp', 'math'], 'dif': '2100'}
{'pro_id': '510C', 'name': 'Fox And Names', 'tags': ['dfs and similar', 'graphs', 'sortings'], 'dif': '1800'}
{'pro_id': '510B', 'name': 'Fox And Two Dots', 'tags': ['dfs and similar'], 'dif': '1500'}
{'pro_id': '510A', 'name': 'Fox And Snake', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '509F', 'name': 'Progress Monitoring', 'tags': ['dp'], 'dif': '2600'}
{'pro_id': '509E', 'name': 'Pretty Song', 'tags': ['math', 'strings'], 'dif': '2000'}
{'pro_id': '509D', 'name': 'Restoring Numbers', 'tags': ['constructive algorithms', 'math'], 'dif': '2400'}
{'pro_id': '509C', 'name': 'Sums of Digits', 'tags': ['dp', 'greedy', 'implementation'], 'dif': '2000'}
{'pro_id': '509B', 'name': 'Painting Pebbles', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '509A', 'name': 'Maximum in Table', 'tags': ['brute force', 'implementation'], 'dif': '700'}
{'pro_id': '508E', 'name': 'Arthur and Brackets', 'tags': ['dp', 'greedy'], 'dif': '2400'}
{'pro_id': '508D', 'name': 'Tanya and Password', 'tags': ['dfs and similar', 'graphs'], 'dif': '2900'}
{'pro_id': '508C', 'name': 'Anya and Ghosts', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1600'}
{'pro_id': '508B', 'name': 'Anton and currency you all know', 'tags': ['greedy', 'math', 'strings'], 'dif': '1300'}
{'pro_id': '508A', 'name': 'Pasha and Pixels', 'tags': ['brute force'], 'dif': '1200'}
{'pro_id': '507E', 'name': 'Breaking Good', 'tags': ['dfs and similar', 'dp', 'graphs', 'shortest paths'], 'dif': '2200'}
{'pro_id': '507D', 'name': 'The Maths Lecture', 'tags': ['dp', 'implementation'], 'dif': '2500'}
{'pro_id': '507C', 'name': 'Guess Your Way Out!', 'tags': ['implementation', 'math', 'trees'], 'dif': '1700'}
{'pro_id': '507B', 'name': 'Amr and Pins', 'tags': ['geometry', 'math'], 'dif': '1400'}
{'pro_id': '507A', 'name': 'Amr and Music', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1100'}
{'pro_id': '506E', 'name': "Mr. Kitayuta's Gift", 'tags': ['combinatorics', 'dp', 'matrices', 'strings'], 'dif': '2900'}
{'pro_id': '506D', 'name': "Mr. Kitayuta's Colorful Graph", 'tags': ['brute force', 'dfs and similar', 'dsu', 'graphs'], 'dif': '2300'}
{'pro_id': '505E', 'name': 'Mr. Kitayuta vs. Bamboos', 'tags': ['binary search', 'greedy'], 'dif': '2800'}
{'pro_id': '505D', 'name': "Mr. Kitayuta's Technology", 'tags': ['dfs and similar'], 'dif': '2500'}
{'pro_id': '505C', 'name': 'Mr. Kitayuta, the Treasure Hunter', 'tags': ['dfs and similar', 'dp', 'two pointers'], 'dif': '2100'}
{'pro_id': '505B', 'name': "Mr. Kitayuta's Colorful Graph", 'tags': ['dfs and similar', 'dp', 'dsu', 'graphs'], 'dif': '1500'}
{'pro_id': '505A', 'name': "Mr. Kitayuta's Gift", 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1200'}
{'pro_id': '504E', 'name': 'Misha and LCP on Tree', 'tags': ['binary search', 'dfs and similar', 'hashing', 'string suffix structures', 'trees'], 'dif': '3000'}
{'pro_id': '504D', 'name': 'Misha and XOR', 'tags': ['bitmasks'], 'dif': '2700'}
{'pro_id': '501E', 'name': 'Misha and Palindrome Degree', 'tags': ['binary search', 'combinatorics', 'implementation'], 'dif': '2800'}
{'pro_id': '501D', 'name': 'Misha and Permutations Summation', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '501C', 'name': 'Misha and Forest', 'tags': ['constructive algorithms', 'data structures', 'greedy', 'sortings', 'trees'], 'dif': '1700'}
{'pro_id': '501B', 'name': 'Misha and Changing Handles', 'tags': ['data structures', 'dsu', 'strings'], 'dif': '1100'}
{'pro_id': '501A', 'name': 'Contest', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '500G', 'name': 'New Year Running', 'tags': ['number theory', 'trees'], 'dif': '3000'}
{'pro_id': '500F', 'name': 'New Year Shopping', 'tags': ['divide and conquer', 'dp'], 'dif': '2600'}
{'pro_id': '500E', 'name': 'New Year Domino', 'tags': ['data structures', 'dp', 'dsu'], 'dif': '2200'}
{'pro_id': '500D', 'name': 'New Year Santa Network', 'tags': ['combinatorics', 'dfs and similar', 'graphs', 'trees'], 'dif': '1900'}
{'pro_id': '500C', 'name': 'New Year Book Reading', 'tags': ['constructive algorithms', 'greedy', 'implementation', 'math'], 'dif': '1600'}
{'pro_id': '500B', 'name': 'New Year Permutation', 'tags': ['dfs and similar', 'dsu', 'graphs', 'greedy', 'math', 'sortings'], 'dif': '1600'}
{'pro_id': '500A', 'name': 'New Year Transportation', 'tags': ['dfs and similar', 'graphs', 'implementation'], 'dif': '1100'}
{'pro_id': '499B', 'name': 'Lecture', 'tags': ['implementation', 'strings'], 'dif': '1000'}
{'pro_id': '499A', 'name': 'Watching a movie', 'tags': ['greedy', 'implementation'], 'dif': '1100'}
{'pro_id': '498E', 'name': 'Stairs and Lines', 'tags': ['dp', 'matrices'], 'dif': '2600'}
{'pro_id': '498D', 'name': 'Traffic Jams in the Land', 'tags': ['data structures', 'dp', 'number theory'], 'dif': '2400'}
{'pro_id': '498C', 'name': 'Array and Operations', 'tags': ['flows', 'graph matchings', 'number theory'], 'dif': '2400'}
{'pro_id': '498B', 'name': 'Name That Tune', 'tags': ['dp', 'probabilities', 'two pointers'], 'dif': '2500'}
{'pro_id': '498A', 'name': 'Crazy Town', 'tags': ['geometry'], 'dif': '1600'}
{'pro_id': '497E', 'name': 'Subsequences Return', 'tags': ['dp', 'matrices'], 'dif': '2900'}
{'pro_id': '497D', 'name': 'Gears', 'tags': ['brute force', 'geometry', 'math'], 'dif': '2800'}
{'pro_id': '496E', 'name': 'Distributing Parts', 'tags': ['greedy', 'sortings'], 'dif': '2600'}
{'pro_id': '496D', 'name': 'Tennis Game', 'tags': ['binary search'], 'dif': '2100'}
{'pro_id': '496C', 'name': 'Removing Columns', 'tags': ['brute force', 'constructive algorithms', 'implementation'], 'dif': '1600'}
{'pro_id': '496B', 'name': 'Secret Combination', 'tags': ['brute force', 'constructive algorithms', 'implementation'], 'dif': '1500'}
{'pro_id': '496A', 'name': 'Minimum Difficulty', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1000'}
{'pro_id': '495B', 'name': 'Modular Equations', 'tags': ['math', 'number theory'], 'dif': '1600'}
{'pro_id': '495A', 'name': 'Digital Counter', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '494E', 'name': 'Sharti', 'tags': ['data structures', 'games'], 'dif': '3200'}
{'pro_id': '494D', 'name': 'Birthday', 'tags': ['data structures', 'dfs and similar', 'dp', 'trees'], 'dif': '2700'}
{'pro_id': '494C', 'name': 'Helping People', 'tags': ['dp', 'probabilities'], 'dif': '2900'}
{'pro_id': '494B', 'name': 'Obsessive String', 'tags': ['dp', 'strings'], 'dif': '2300'}
{'pro_id': '494A', 'name': 'Treasure', 'tags': ['greedy'], 'dif': '1700'}
{'pro_id': '493E', 'name': 'Vasya and Polynomial', 'tags': ['math'], 'dif': '2900'}
{'pro_id': '493D', 'name': 'Vasya and Chess', 'tags': ['constructive algorithms', 'games', 'math'], 'dif': '1700'}
{'pro_id': '493C', 'name': 'Vasya and Basketball', 'tags': ['binary search', 'brute force', 'data structures', 'implementation', 'sortings', 'two pointers'], 'dif': '1700'}
{'pro_id': '493B', 'name': 'Vasya and Wrestling', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '493A', 'name': 'Vasya and Football', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '492E', 'name': 'Vanya and Field', 'tags': ['math'], 'dif': '2200'}
{'pro_id': '492D', 'name': 'Vanya and Computer Game', 'tags': ['binary search', 'implementation', 'math', 'sortings'], 'dif': '1800'}
{'pro_id': '492C', 'name': 'Vanya and Exams', 'tags': ['greedy', 'sortings'], 'dif': '1400'}
{'pro_id': '492B', 'name': 'Vanya and Lanterns', 'tags': ['binary search', 'implementation', 'math', 'sortings'], 'dif': '1200'}
{'pro_id': '492A', 'name': 'Vanya and Cubes', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '491C', 'name': 'Deciphering', 'tags': ['flows', 'graph matchings'], 'dif': '2400'}
{'pro_id': '491B', 'name': 'New York Hotel', 'tags': ['greedy', 'math'], 'dif': '1900'}
{'pro_id': '491A', 'name': 'Up the hill', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1200'}
{'pro_id': '490F', 'name': 'Treeland Tour', 'tags': ['data structures', 'dfs and similar', 'dp', 'trees'], 'dif': '2500'}
{'pro_id': '490E', 'name': 'Restoring Increasing Sequence', 'tags': ['binary search', 'brute force', 'greedy', 'implementation'], 'dif': '2100'}
{'pro_id': '490D', 'name': 'Chocolate', 'tags': ['brute force', 'dfs and similar', 'math', 'meet-in-the-middle', 'number theory'], 'dif': '1900'}
{'pro_id': '490C', 'name': 'Hacking Cypher', 'tags': ['brute force', 'math', 'number theory', 'strings'], 'dif': '1700'}
{'pro_id': '490B', 'name': 'Queue', 'tags': ['dsu', 'implementation'], 'dif': '1500'}
{'pro_id': '490A', 'name': 'Team Olympiad', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '900'}
{'pro_id': '489F', 'name': 'Special Matrices', 'tags': ['combinatorics', 'dp'], 'dif': '2200'}
{'pro_id': '489E', 'name': 'Hiking', 'tags': ['binary search', 'dp'], 'dif': '2700'}
{'pro_id': '489D', 'name': 'Unbearable Controversy of Being', 'tags': ['brute force', 'combinatorics', 'dfs and similar', 'graphs'], 'dif': '1700'}
{'pro_id': '489C', 'name': 'Given Length and Sum of Digits...', 'tags': ['dp', 'greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '489B', 'name': 'BerSU Ball', 'tags': ['dfs and similar', 'dp', 'graph matchings', 'greedy', 'sortings', 'two pointers'], 'dif': '1300'}
{'pro_id': '489A', 'name': 'SwapSort', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1300'}
{'pro_id': '488B', 'name': 'Candy Boxes', 'tags': ['brute force', 'constructive algorithms', 'math'], 'dif': '1800'}
{'pro_id': '488A', 'name': 'Giga Tower', 'tags': ['brute force'], 'dif': '1100'}
{'pro_id': '487E', 'name': 'Tourists', 'tags': ['data structures', 'dfs and similar', 'graphs', 'trees'], 'dif': '3100'}
{'pro_id': '487D', 'name': 'Conveyor Belts', 'tags': ['data structures'], 'dif': '2700'}
{'pro_id': '487C', 'name': 'Prefix Product Sequence', 'tags': ['constructive algorithms', 'math', 'number theory'], 'dif': '2600'}
{'pro_id': '487B', 'name': 'Strip', 'tags': ['binary search', 'data structures', 'dp', 'two pointers'], 'dif': '2300'}
{'pro_id': '487A', 'name': 'Fight the Monster', 'tags': ['binary search', 'brute force', 'implementation'], 'dif': '1900'}
{'pro_id': '486E', 'name': 'LIS of Sequence', 'tags': ['data structures', 'dp', 'greedy', 'hashing', 'math'], 'dif': '2400'}
{'pro_id': '486D', 'name': 'Valid Sets', 'tags': ['dfs and similar', 'dp', 'math', 'trees'], 'dif': '2300'}
{'pro_id': '486C', 'name': 'Palindrome Transformation', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1700'}
{'pro_id': '486B', 'name': 'OR in Matrix', 'tags': ['greedy', 'hashing', 'implementation'], 'dif': '1400'}
{'pro_id': '486A', 'name': 'Calculating Function', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '485B', 'name': 'Valuable Resources', 'tags': ['brute force', 'greedy'], 'dif': '1300'}
{'pro_id': '485A', 'name': 'Factory', 'tags': ['implementation', 'math', 'matrices'], 'dif': '1400'}
{'pro_id': '484E', 'name': 'Sign on Fence', 'tags': ['binary search', 'constructive algorithms', 'data structures'], 'dif': '2700'}
{'pro_id': '484D', 'name': 'Kindergarten', 'tags': ['data structures', 'dp', 'greedy'], 'dif': '2400'}
{'pro_id': '484C', 'name': 'Strange Sorting', 'tags': ['implementation', 'math'], 'dif': '2600'}
{'pro_id': '484B', 'name': 'Maximum Value', 'tags': ['binary search', 'math', 'sortings', 'two pointers'], 'dif': '2100'}
{'pro_id': '484A', 'name': 'Bits', 'tags': ['bitmasks', 'constructive algorithms'], 'dif': '1700'}
{'pro_id': '483B', 'name': 'Friends and Presents', 'tags': ['binary search', 'math'], 'dif': '1800'}
{'pro_id': '483A', 'name': 'Counterexample', 'tags': ['brute force', 'implementation', 'math', 'number theory'], 'dif': '1100'}
{'pro_id': '482E', 'name': 'ELCA', 'tags': ['data structures', 'trees'], 'dif': '3200'}
{'pro_id': '482D', 'name': 'Random Function and Tree', 'tags': ['combinatorics', 'dp', 'trees'], 'dif': '2600'}
{'pro_id': '482C', 'name': 'Game with Strings', 'tags': ['bitmasks', 'dp', 'probabilities'], 'dif': '2800'}
{'pro_id': '482B', 'name': 'Interesting Array', 'tags': ['constructive algorithms', 'data structures', 'trees'], 'dif': '2000'}
{'pro_id': '482A', 'name': 'Diverse Permutation', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1300'}
{'pro_id': '480E', 'name': 'Parking Lot', 'tags': ['data structures', 'divide and conquer'], 'dif': '2800'}
{'pro_id': '480D', 'name': 'Parcels', 'tags': ['dp', 'graphs'], 'dif': '2600'}
{'pro_id': '479E', 'name': 'Riding in a Lift', 'tags': ['combinatorics', 'dp'], 'dif': '2000'}
{'pro_id': '479D', 'name': 'Long Jumps', 'tags': ['binary search', 'greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '479C', 'name': 'Exams', 'tags': ['greedy', 'sortings'], 'dif': '1500'}
{'pro_id': '479B', 'name': 'Towers', 'tags': ['brute force', 'constructive algorithms', 'greedy', 'implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '479A', 'name': 'Expression', 'tags': ['brute force', 'math'], 'dif': '1100'}
{'pro_id': '478E', 'name': 'Wavy numbers', 'tags': ['brute force', 'dfs and similar', 'meet-in-the-middle', 'sortings'], 'dif': '2700'}
{'pro_id': '478D', 'name': 'Red-Green Towers', 'tags': ['dp'], 'dif': '2100'}
{'pro_id': '478C', 'name': 'Table Decorations', 'tags': ['greedy'], 'dif': '1700'}
{'pro_id': '478B', 'name': 'Random Teams', 'tags': ['combinatorics', 'constructive algorithms', 'greedy', 'math'], 'dif': '1300'}
{'pro_id': '478A', 'name': 'Initial Bet', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '477E', 'name': 'Dreamoon and Notepad', 'tags': ['data structures'], 'dif': '3100'}
{'pro_id': '477D', 'name': 'Dreamoon and Binary', 'tags': ['dp', 'strings'], 'dif': '2600'}
{'pro_id': '476E', 'name': 'Dreamoon and Strings', 'tags': ['dp', 'strings'], 'dif': '2600'}
{'pro_id': '476D', 'name': 'Dreamoon and Sets', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '2000'}
{'pro_id': '476C', 'name': 'Dreamoon and Sums', 'tags': ['math'], 'dif': '1700'}
{'pro_id': '476B', 'name': 'Dreamoon and WiFi', 'tags': ['bitmasks', 'brute force', 'combinatorics', 'dp', 'math', 'probabilities'], 'dif': '1300'}
{'pro_id': '476A', 'name': 'Dreamoon and Stairs', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '475F', 'name': 'Meta-universe', 'tags': ['data structures'], 'dif': '2800'}
{'pro_id': '475E', 'name': 'Strongly Connected City 2', 'tags': ['dfs and similar'], 'dif': '2600'}
{'pro_id': '475D', 'name': 'CGCDSSQ', 'tags': ['brute force', 'data structures', 'math'], 'dif': '2000'}
{'pro_id': '475C', 'name': "Kamal-ol-molk's Painting", 'tags': ['brute force', 'constructive algorithms', 'greedy'], 'dif': '2100'}
{'pro_id': '475B', 'name': 'Strongly Connected City', 'tags': ['brute force', 'dfs and similar', 'graphs', 'implementation'], 'dif': '1400'}
{'pro_id': '475A', 'name': 'Bayan Bus', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '474F', 'name': 'Ant colony', 'tags': ['data structures', 'math', 'number theory'], 'dif': '2200'}
{'pro_id': '474E', 'name': 'Pillars', 'tags': ['binary search', 'data structures', 'dp', 'sortings', 'trees'], 'dif': '2200'}
{'pro_id': '474D', 'name': 'Flowers', 'tags': ['dp'], 'dif': '1700'}
{'pro_id': '474C', 'name': 'Captain Marmot', 'tags': ['brute force', 'geometry'], 'dif': '1900'}
{'pro_id': '474B', 'name': 'Worms', 'tags': ['binary search', 'implementation'], 'dif': '1300'}
{'pro_id': '474A', 'name': 'Keyboard', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '472G', 'name': 'Design Tutorial: Increase the Constraints', 'tags': ['bitmasks', 'data structures', 'fft'], 'dif': '2800'}
{'pro_id': '472F', 'name': 'Design Tutorial: Change the Goal', 'tags': ['constructive algorithms', 'math', 'matrices'], 'dif': '2600'}
{'pro_id': '472E', 'name': 'Design Tutorial: Learn from a Game', 'tags': ['constructive algorithms', 'implementation'], 'dif': '2700'}
{'pro_id': '472D', 'name': 'Design Tutorial: Inverse the Problem', 'tags': ['dfs and similar', 'dsu', 'shortest paths', 'trees'], 'dif': '1900'}
{'pro_id': '472C', 'name': 'Design Tutorial: Make It Nondeterministic', 'tags': ['greedy'], 'dif': '1400'}
{'pro_id': '472B', 'name': 'Design Tutorial: Learn from Life', 'tags': [], 'dif': '1300'}
{'pro_id': '472A', 'name': 'Design Tutorial: Learn from Math', 'tags': ['math', 'number theory'], 'dif': '900'}
{'pro_id': '471E', 'name': 'MUH and Lots and Lots of Segments', 'tags': ['data structures', 'dsu'], 'dif': '2700'}
{'pro_id': '471D', 'name': 'MUH and Cube Walls', 'tags': ['string suffix structures', 'strings'], 'dif': '2000'}
{'pro_id': '471C', 'name': 'MUH and House of Cards', 'tags': ['binary search', 'brute force', 'greedy', 'math'], 'dif': '1700'}
{'pro_id': '471B', 'name': 'MUH and Important Things', 'tags': ['implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '471A', 'name': 'MUH and Sticks', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '470H', 'name': 'Array Sorting', 'tags': ['*special problem'], 'dif': '2600'}
{'pro_id': '470G', 'name': 'Hamming Distance', 'tags': ['*special problem'], 'dif': '2500'}
{'pro_id': '470F', 'name': 'Pairwise Sums', 'tags': ['*special problem'], 'dif': '2300'}
{'pro_id': '470E', 'name': 'Chessboard', 'tags': ['*special problem'], 'dif': '1900'}
{'pro_id': '470D', 'name': 'Caesar Cipher', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '470C', 'name': 'Eval', 'tags': ['*special problem'], 'dif': '2100'}
{'pro_id': '470B', 'name': 'Hexakosioihexekontahexaphobia', 'tags': ['*special problem'], 'dif': '1800'}
{'pro_id': '470A', 'name': 'Crystal Ball Sequence', 'tags': ['*special problem', 'implementation'], 'dif': '1400'}
{'pro_id': '469B', 'name': 'Chat Online', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '469A', 'name': 'I Wanna Be the Guy', 'tags': ['greedy', 'implementation'], 'dif': '1000'}
{'pro_id': '468E', 'name': 'Permanent', 'tags': ['dp', 'graph matchings', 'math', 'meet-in-the-middle'], 'dif': '3100'}
{'pro_id': '468D', 'name': 'Tree', 'tags': ['graph matchings'], 'dif': '3000'}
{'pro_id': '468C', 'name': 'Hack it!', 'tags': ['binary search', 'constructive algorithms', 'math'], 'dif': '2800'}
{'pro_id': '468B', 'name': 'Two Sets', 'tags': ['2-sat', 'dfs and similar', 'dsu', 'graph matchings', 'greedy'], 'dif': '2000'}
{'pro_id': '468A', 'name': '24 Game', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '1600'}
{'pro_id': '467E', 'name': 'Alex and Complicated Task', 'tags': ['data structures', 'dp', 'greedy'], 'dif': '2900'}
{'pro_id': '467D', 'name': 'Fedor and Essay', 'tags': ['dfs and similar', 'dp', 'graphs', 'hashing', 'strings'], 'dif': '2100'}
{'pro_id': '467C', 'name': 'George and Job', 'tags': ['dp', 'implementation'], 'dif': '1700'}
{'pro_id': '467B', 'name': 'Fedor and New Game', 'tags': ['bitmasks', 'brute force', 'constructive algorithms', 'implementation'], 'dif': '1200'}
{'pro_id': '467A', 'name': 'George and Accommodation', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '466E', 'name': 'Information Graph', 'tags': ['dfs and similar', 'dsu', 'graphs', 'trees'], 'dif': '2400'}
{'pro_id': '466D', 'name': 'Increase Sequence', 'tags': ['combinatorics', 'dp'], 'dif': '2300'}
{'pro_id': '466C', 'name': 'Number of Ways', 'tags': ['binary search', 'brute force', 'data structures', 'dp', 'two pointers'], 'dif': '1700'}
{'pro_id': '466B', 'name': 'Wonder Room', 'tags': ['brute force', 'math'], 'dif': '1800'}
{'pro_id': '466A', 'name': 'Cheap Travel', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '465B', 'name': 'Inbox (100500)', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '465A', 'name': 'inc ARG', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '464E', 'name': 'The Classic Problem', 'tags': ['data structures', 'graphs', 'shortest paths'], 'dif': '2900'}
{'pro_id': '464D', 'name': 'World of Darkraft - 2', 'tags': ['dp', 'probabilities'], 'dif': '2600'}
{'pro_id': '464C', 'name': 'Substitutes in Number', 'tags': ['dp'], 'dif': '2200'}
{'pro_id': '464B', 'name': 'Restore Cube', 'tags': ['brute force', 'geometry'], 'dif': '2200'}
{'pro_id': '464A', 'name': 'No to Palindromes!', 'tags': ['greedy', 'strings'], 'dif': '1700'}
{'pro_id': '463E', 'name': 'Caisa and Tree', 'tags': ['brute force', 'dfs and similar', 'math', 'number theory', 'trees'], 'dif': '2400'}
{'pro_id': '463D', 'name': 'Gargari and Permutations', 'tags': ['dfs and similar', 'dp', 'graphs', 'implementation'], 'dif': '2000'}
{'pro_id': '463C', 'name': 'Gargari and Bishops', 'tags': ['greedy', 'hashing', 'implementation'], 'dif': '1800'}
{'pro_id': '463B', 'name': 'Caisa and Pylons', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1200'}
{'pro_id': '463A', 'name': 'Caisa and Sugar', 'tags': ['brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '462B', 'name': 'Appleman and Card Game', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '462A', 'name': 'Appleman and Easy Task', 'tags': ['brute force', 'implementation'], 'dif': '1100'}
{'pro_id': '461E', 'name': 'Appleman and a Game', 'tags': ['binary search', 'shortest paths', 'strings'], 'dif': '3000'}
{'pro_id': '461D', 'name': 'Appleman and Complicated Task', 'tags': ['dsu', 'math'], 'dif': '2700'}
{'pro_id': '461C', 'name': 'Appleman and a Sheet of Paper', 'tags': ['data structures', 'implementation'], 'dif': '2500'}
{'pro_id': '461B', 'name': 'Appleman and Tree', 'tags': ['dfs and similar', 'dp', 'trees'], 'dif': '2200'}
{'pro_id': '461A', 'name': 'Appleman and Toastman', 'tags': ['greedy', 'sortings'], 'dif': '1200'}
{'pro_id': '460E', 'name': 'Roland and Rose', 'tags': ['brute force', 'geometry', 'math', 'sortings'], 'dif': '2700'}
{'pro_id': '460D', 'name': 'Little Victor and Set', 'tags': ['brute force', 'constructive algorithms', 'math'], 'dif': '2500'}
{'pro_id': '460C', 'name': 'Present', 'tags': ['binary search', 'data structures', 'greedy'], 'dif': '1900'}
{'pro_id': '460B', 'name': 'Little Dima and Equation', 'tags': ['brute force', 'implementation', 'math', 'number theory'], 'dif': '1500'}
{'pro_id': '460A', 'name': 'Vasya and Socks', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1000'}
{'pro_id': '459E', 'name': 'Pashmak and Graph', 'tags': ['dp', 'sortings'], 'dif': '2100'}
{'pro_id': '459D', 'name': "Pashmak and Parmida's problem", 'tags': ['data structures', 'divide and conquer', 'sortings'], 'dif': '1800'}
{'pro_id': '459C', 'name': 'Pashmak and Buses', 'tags': ['combinatorics', 'constructive algorithms', 'math'], 'dif': '1900'}
{'pro_id': '459B', 'name': 'Pashmak and Flowers', 'tags': ['combinatorics', 'implementation', 'sortings'], 'dif': '1300'}
{'pro_id': '459A', 'name': 'Pashmak and Garden', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '457F', 'name': 'An easy problem about trees', 'tags': ['dp', 'games', 'greedy', 'trees'], 'dif': '3000'}
{'pro_id': '457E', 'name': 'Flow Optimality', 'tags': ['constructive algorithms', 'flows', 'math'], 'dif': '3200'}
{'pro_id': '457D', 'name': 'Bingo!', 'tags': ['combinatorics', 'math', 'probabilities'], 'dif': '2700'}
{'pro_id': '457C', 'name': 'Elections', 'tags': ['brute force'], 'dif': '2100'}
{'pro_id': '457B', 'name': 'Distributed Join', 'tags': ['greedy'], 'dif': '1900'}
{'pro_id': '457A', 'name': 'Golden System', 'tags': ['math', 'meet-in-the-middle'], 'dif': '1800'}
{'pro_id': '456B', 'name': 'Fedya and Maths', 'tags': ['math', 'number theory'], 'dif': '1200'}
{'pro_id': '456A', 'name': 'Laptops', 'tags': ['sortings'], 'dif': '1200'}
{'pro_id': '455E', 'name': 'Function', 'tags': ['data structures'], 'dif': '2800'}
{'pro_id': '455D', 'name': 'Serega and Fun', 'tags': ['data structures'], 'dif': '2600'}
{'pro_id': '455C', 'name': 'Civilization', 'tags': ['dfs and similar', 'dp', 'dsu', 'ternary search', 'trees'], 'dif': '2200'}
{'pro_id': '455B', 'name': 'A Lot of Games', 'tags': ['dfs and similar', 'dp', 'games', 'implementation', 'strings', 'trees'], 'dif': '2100'}
{'pro_id': '455A', 'name': 'Boredom', 'tags': ['dp'], 'dif': '1600'}
{'pro_id': '454B', 'name': 'Little Pony and Sort by Shift', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '454A', 'name': 'Little Pony and Crystal Mine', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '453E', 'name': 'Little Pony and Lord Tirek', 'tags': ['data structures'], 'dif': '3000'}
{'pro_id': '453D', 'name': 'Little Pony and Elements of Harmony', 'tags': ['dp', 'matrices'], 'dif': '2900'}
{'pro_id': '453C', 'name': 'Little Pony and Summer Sun Celebration', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs'], 'dif': '2800'}
{'pro_id': '453B', 'name': 'Little Pony and Harmony Chest', 'tags': ['bitmasks', 'brute force', 'dp'], 'dif': '2200'}
{'pro_id': '453A', 'name': 'Little Pony and Expected Maximum', 'tags': ['probabilities'], 'dif': '1600'}
{'pro_id': '452F', 'name': 'Permutation', 'tags': ['data structures', 'divide and conquer', 'hashing'], 'dif': '2600'}
{'pro_id': '452E', 'name': 'Three strings', 'tags': ['data structures', 'dsu', 'string suffix structures', 'strings'], 'dif': '2400'}
{'pro_id': '452D', 'name': 'Washer, Dryer, Folder', 'tags': ['greedy', 'implementation'], 'dif': '1900'}
{'pro_id': '452C', 'name': 'Magic Trick', 'tags': ['combinatorics', 'math', 'probabilities'], 'dif': '2100'}
{'pro_id': '452B', 'name': '4-point polyline', 'tags': ['brute force', 'constructive algorithms', 'geometry', 'trees'], 'dif': '1800'}
{'pro_id': '452A', 'name': 'Eevee', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1200'}
{'pro_id': '451E', 'name': 'Devu and Flowers', 'tags': ['bitmasks', 'combinatorics', 'number theory'], 'dif': '2400'}
{'pro_id': '451D', 'name': 'Count Good Substrings', 'tags': ['math'], 'dif': '2100'}
{'pro_id': '451C', 'name': 'Predict Outcome of the Game', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '451B', 'name': 'Sort the Array', 'tags': ['implementation', 'sortings'], 'dif': '1300'}
{'pro_id': '451A', 'name': 'Game With Sticks', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '450B', 'name': 'Jzzhu and Sequences', 'tags': ['implementation', 'math'], 'dif': '1400'}
{'pro_id': '450A', 'name': 'Jzzhu and Children', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '449E', 'name': 'Jzzhu and Squares', 'tags': ['dp', 'math', 'number theory'], 'dif': '2900'}
{'pro_id': '449D', 'name': 'Jzzhu and Numbers', 'tags': ['bitmasks', 'combinatorics', 'dp'], 'dif': '2400'}
{'pro_id': '449C', 'name': 'Jzzhu and Apples', 'tags': ['constructive algorithms', 'number theory'], 'dif': '2500'}
{'pro_id': '449B', 'name': 'Jzzhu and Cities', 'tags': ['graphs', 'greedy', 'shortest paths'], 'dif': '2000'}
{'pro_id': '449A', 'name': 'Jzzhu and Chocolate', 'tags': ['greedy', 'math'], 'dif': '1700'}
{'pro_id': '448E', 'name': 'Divisors', 'tags': ['brute force', 'dfs and similar', 'implementation', 'number theory'], 'dif': '2500'}
{'pro_id': '448D', 'name': 'Multiplication Table', 'tags': ['binary search', 'brute force'], 'dif': '1900'}
{'pro_id': '448C', 'name': 'Painting Fence', 'tags': ['divide and conquer', 'dp', 'greedy'], 'dif': '1900'}
{'pro_id': '448B', 'name': 'Suffix Structures', 'tags': ['implementation', 'strings'], 'dif': '1400'}
{'pro_id': '448A', 'name': 'Rewards', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '447B', 'name': 'DZY Loves Strings', 'tags': ['greedy', 'implementation'], 'dif': '1000'}
{'pro_id': '447A', 'name': 'DZY Loves Hash', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '446E', 'name': 'DZY Loves Bridges', 'tags': ['math', 'matrices'], 'dif': '3100'}
{'pro_id': '446D', 'name': 'DZY Loves Games', 'tags': ['math', 'matrices', 'probabilities'], 'dif': '2800'}
{'pro_id': '446C', 'name': 'DZY Loves Fibonacci Numbers', 'tags': ['data structures', 'math', 'number theory'], 'dif': '2600'}
{'pro_id': '446B', 'name': 'DZY Loves Modification', 'tags': ['brute force', 'data structures', 'greedy'], 'dif': '2100'}
{'pro_id': '446A', 'name': 'DZY Loves Sequences', 'tags': ['dp', 'implementation', 'two pointers'], 'dif': '1700'}
{'pro_id': '445B', 'name': 'DZY Loves Chemistry', 'tags': ['dfs and similar', 'dsu', 'greedy'], 'dif': '1500'}
{'pro_id': '445A', 'name': 'DZY Loves Chessboard', 'tags': ['dfs and similar', 'implementation'], 'dif': '1200'}
{'pro_id': '444E', 'name': 'DZY Loves Planting', 'tags': ['binary search', 'dsu', 'trees'], 'dif': '2600'}
{'pro_id': '444D', 'name': 'DZY Loves Strings', 'tags': ['binary search', 'hashing', 'strings', 'two pointers'], 'dif': '2400'}
{'pro_id': '444C', 'name': 'DZY Loves Colors', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '444B', 'name': 'DZY Loves FFT', 'tags': ['probabilities'], 'dif': '2400'}
{'pro_id': '444A', 'name': 'DZY Loves Physics', 'tags': ['greedy', 'math'], 'dif': '1800'}
{'pro_id': '443B', 'name': 'Kolya and Tandem Repeat', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1500'}
{'pro_id': '443A', 'name': 'Anton and Letters', 'tags': ['constructive algorithms', 'implementation'], 'dif': '800'}
{'pro_id': '442E', 'name': 'Gena and Second Distance', 'tags': ['geometry'], 'dif': '3100'}
{'pro_id': '442D', 'name': 'Adam and Tree', 'tags': ['data structures', 'trees'], 'dif': '2500'}
{'pro_id': '442C', 'name': 'Artem and Array', 'tags': ['data structures', 'greedy'], 'dif': '2500'}
{'pro_id': '442B', 'name': 'Andrey and Problem', 'tags': ['greedy', 'math', 'probabilities'], 'dif': '1800'}
{'pro_id': '442A', 'name': 'Borya and Hanabi', 'tags': ['bitmasks', 'brute force', 'implementation'], 'dif': '2000'}
{'pro_id': '441E', 'name': 'Valera and Number', 'tags': ['bitmasks', 'dp', 'math', 'probabilities'], 'dif': '2700'}
{'pro_id': '441D', 'name': 'Valera and Swaps', 'tags': ['constructive algorithms', 'dsu', 'graphs', 'implementation', 'math', 'string suffix structures'], 'dif': '2300'}
{'pro_id': '441C', 'name': 'Valera and Tubes', 'tags': ['constructive algorithms', 'dfs and similar', 'implementation'], 'dif': '1500'}
{'pro_id': '441B', 'name': 'Valera and Fruits', 'tags': ['greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '441A', 'name': 'Valera and Antique Items', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '440D', 'name': 'Berland Federalization', 'tags': ['dp', 'trees'], 'dif': '2600'}
{'pro_id': '440C', 'name': 'One-Based Arithmetic', 'tags': ['brute force', 'dfs and similar', 'divide and conquer'], 'dif': '2000'}
{'pro_id': '440B', 'name': 'Balancer', 'tags': ['greedy', 'implementation'], 'dif': '1600'}
{'pro_id': '440A', 'name': 'Forgotten Episode', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '439E', 'name': 'Devu and Birthday Celebration', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2600'}
{'pro_id': '439D', 'name': 'Devu and his Brother', 'tags': ['binary search', 'sortings', 'ternary search', 'two pointers'], 'dif': '1900'}
{'pro_id': '439C', 'name': 'Devu and Partitioning of the Array', 'tags': ['brute force', 'constructive algorithms', 'implementation', 'number theory'], 'dif': '1700'}
{'pro_id': '439B', 'name': 'Devu, the Dumb Guy', 'tags': ['implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '439A', 'name': 'Devu, the Singer and Churu, the Joker', 'tags': ['greedy', 'implementation'], 'dif': '1100'}
{'pro_id': '438E', 'name': 'The Child and Binary Tree', 'tags': ['combinatorics', 'divide and conquer', 'fft', 'number theory'], 'dif': '3100'}
{'pro_id': '438D', 'name': 'The Child and Sequence', 'tags': ['data structures', 'math'], 'dif': '2300'}
{'pro_id': '437E', 'name': 'The Child and Polygon', 'tags': ['dp', 'geometry'], 'dif': '2600'}
{'pro_id': '437D', 'name': 'The Child and Zoo', 'tags': ['dsu', 'sortings'], 'dif': '2100'}
{'pro_id': '437C', 'name': 'The Child and Toy', 'tags': ['graphs', 'greedy', 'sortings'], 'dif': '1600'}
{'pro_id': '437B', 'name': 'The Child and Set', 'tags': ['bitmasks', 'greedy', 'implementation', 'sortings'], 'dif': '1500'}
{'pro_id': '437A', 'name': 'The Child and Homework', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '436F', 'name': 'Banners', 'tags': ['brute force', 'data structures', 'dp'], 'dif': '2900'}
{'pro_id': '436E', 'name': 'Cardboard Box', 'tags': ['data structures', 'greedy'], 'dif': '2500'}
{'pro_id': '436D', 'name': 'Pudding Monsters', 'tags': ['dp'], 'dif': '2700'}
{'pro_id': '436C', 'name': 'Dungeons and Candies', 'tags': ['dsu', 'graphs', 'greedy', 'trees'], 'dif': '1800'}
{'pro_id': '436B', 'name': 'Om Nom and Spiders', 'tags': ['implementation', 'math'], 'dif': '1400'}
{'pro_id': '436A', 'name': 'Feed with Candy', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '435E', 'name': 'Special Graph', 'tags': [], 'dif': '2500'}
{'pro_id': '435D', 'name': 'Special Grid', 'tags': ['brute force', 'dp', 'greedy'], 'dif': '2200'}
{'pro_id': '435C', 'name': 'Cardiogram', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '435B', 'name': 'Pasha Maximizes', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '435A', 'name': 'Queue on Bus Stop', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '434E', 'name': "Furukawa Nagisa's Tree", 'tags': ['binary search', 'divide and conquer', 'sortings', 'trees'], 'dif': '3000'}
{'pro_id': '434D', 'name': "Nanami's Power Plant", 'tags': ['flows'], 'dif': '2800'}
{'pro_id': '433E', 'name': "Tachibana Kanade's Tofu", 'tags': ['dp'], 'dif': '2500'}
{'pro_id': '433D', 'name': "Nanami's Digital Board", 'tags': ['dsu', 'implementation'], 'dif': '2300'}
{'pro_id': '433C', 'name': "Ryouko's Memory Note", 'tags': ['implementation', 'math', 'sortings'], 'dif': '1900'}
{'pro_id': '433B', 'name': "Kuriyama Mirai's Stones", 'tags': ['dp', 'implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '433A', 'name': "Kitahara Haruki's Gift", 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '432E', 'name': 'Square Tiling', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2700'}
{'pro_id': '432D', 'name': 'Prefixes and Suffixes', 'tags': ['dp', 'string suffix structures', 'strings', 'two pointers'], 'dif': '2000'}
{'pro_id': '432C', 'name': 'Prime Swaps', 'tags': ['greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '432B', 'name': 'Football Kit', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '432A', 'name': 'Choosing Teams', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '900'}
{'pro_id': '431E', 'name': 'Chemistry Experiment', 'tags': ['binary search', 'data structures', 'ternary search'], 'dif': '2500'}
{'pro_id': '431D', 'name': 'Random Task', 'tags': ['binary search', 'bitmasks', 'combinatorics', 'dp', 'math'], 'dif': '2200'}
{'pro_id': '431C', 'name': 'k-Tree', 'tags': ['dp', 'implementation', 'trees'], 'dif': '1600'}
{'pro_id': '431B', 'name': 'Shower Line', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '431A', 'name': 'Black Square', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '430B', 'name': 'Balls Game', 'tags': ['brute force', 'two pointers'], 'dif': '1400'}
{'pro_id': '430A', 'name': 'Points and Segments (easy)', 'tags': ['constructive algorithms', 'sortings'], 'dif': '1600'}
{'pro_id': '429E', 'name': 'Points and Segments', 'tags': ['graphs'], 'dif': '2900'}
{'pro_id': '429D', 'name': 'Tricky Function', 'tags': ['data structures', 'divide and conquer', 'geometry'], 'dif': '2100'}
{'pro_id': '429C', 'name': 'Guess the Tree', 'tags': ['bitmasks', 'constructive algorithms', 'dp', 'greedy', 'trees'], 'dif': '2400'}
{'pro_id': '429B', 'name': 'Working out', 'tags': ['dp'], 'dif': '1800'}
{'pro_id': '429A', 'name': 'Xor-tree', 'tags': ['dfs and similar', 'trees'], 'dif': '1500'}
{'pro_id': '427E', 'name': 'Police Patrol', 'tags': ['greedy', 'implementation', 'math', 'ternary search'], 'dif': '2000'}
{'pro_id': '427D', 'name': 'Match & Catch', 'tags': ['dp', 'string suffix structures', 'strings'], 'dif': '2000'}
{'pro_id': '427C', 'name': 'Checkposts', 'tags': ['dfs and similar', 'graphs', 'two pointers'], 'dif': '1700'}
{'pro_id': '427B', 'name': 'Prison Transfer', 'tags': ['data structures', 'implementation'], 'dif': '1100'}
{'pro_id': '427A', 'name': 'Police Recruits', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '426B', 'name': 'Sereja and Mirroring', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '426A', 'name': 'Sereja and Mugs', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '425E', 'name': 'Sereja and Sets', 'tags': ['dp'], 'dif': '2500'}
{'pro_id': '425D', 'name': 'Sereja and Squares', 'tags': ['binary search', 'data structures', 'hashing'], 'dif': '2300'}
{'pro_id': '425C', 'name': 'Sereja and Two Sequences', 'tags': ['data structures', 'dp'], 'dif': '2400'}
{'pro_id': '425B', 'name': 'Sereja and Table', 'tags': ['bitmasks', 'greedy'], 'dif': '2400'}
{'pro_id': '425A', 'name': 'Sereja and Swaps', 'tags': ['brute force', 'sortings'], 'dif': '1600'}
{'pro_id': '424E', 'name': 'Colored Jenga', 'tags': ['dfs and similar', 'dp', 'probabilities'], 'dif': '2500'}
{'pro_id': '424D', 'name': 'Biathlon Track', 'tags': ['binary search', 'brute force', 'constructive algorithms', 'data structures', 'dp'], 'dif': '2200'}
{'pro_id': '424C', 'name': 'Magic Formulas', 'tags': ['math'], 'dif': '1600'}
{'pro_id': '424B', 'name': 'Megacity', 'tags': ['binary search', 'greedy', 'implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '424A', 'name': 'Squats', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '421D', 'name': 'Bug in Code', 'tags': ['binary search', 'data structures', 'sortings'], 'dif': '2100'}
{'pro_id': '421A', 'name': 'Pasha and Hamsters', 'tags': ['constructive algorithms', 'implementation'], 'dif': '800'}
{'pro_id': '420E', 'name': 'Playing the ball', 'tags': ['geometry'], 'dif': '2500'}
{'pro_id': '420D', 'name': 'Cup Trick', 'tags': ['data structures'], 'dif': '2500'}
{'pro_id': '420C', 'name': 'Bug in Code', 'tags': ['data structures', 'graphs', 'implementation', 'two pointers'], 'dif': '1900'}
{'pro_id': '420B', 'name': 'Online Meeting', 'tags': ['implementation'], 'dif': '1800'}
{'pro_id': '420A', 'name': 'Start Up', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '418E', 'name': 'Tricky Password', 'tags': ['data structures'], 'dif': '3100'}
{'pro_id': '418D', 'name': 'Big Problems for Organizers', 'tags': ['data structures', 'graphs', 'trees'], 'dif': '2700'}
{'pro_id': '417E', 'name': 'Square Table', 'tags': ['constructive algorithms', 'math', 'probabilities'], 'dif': '2400'}
{'pro_id': '417D', 'name': 'Cunning Gena', 'tags': ['bitmasks', 'dp', 'greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '417C', 'name': 'Football', 'tags': ['constructive algorithms', 'graphs', 'implementation'], 'dif': '1500'}
{'pro_id': '417B', 'name': 'Crash', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '417A', 'name': 'Elimination', 'tags': ['dp', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '416E', 'name': "President's Path", 'tags': ['dp', 'graphs', 'shortest paths'], 'dif': '2400'}
{'pro_id': '416D', 'name': 'Population Size', 'tags': ['greedy', 'implementation', 'math'], 'dif': '2300'}
{'pro_id': '416C', 'name': 'Booking System', 'tags': ['binary search', 'dp', 'greedy', 'implementation'], 'dif': '1600'}
{'pro_id': '416B', 'name': 'Art Union', 'tags': ['brute force', 'dp', 'implementation'], 'dif': '1300'}
{'pro_id': '416A', 'name': 'Guess a number!', 'tags': ['greedy', 'implementation', 'two pointers'], 'dif': '1400'}
{'pro_id': '415B', 'name': 'Mashmokh and Tokens', 'tags': ['binary search', 'greedy', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '415A', 'name': 'Mashmokh and Lights', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '414E', 'name': "Mashmokh's Designed Problem", 'tags': ['data structures'], 'dif': '3100'}
{'pro_id': '414D', 'name': 'Mashmokh and Water Tanks', 'tags': ['binary search', 'data structures', 'greedy', 'trees', 'two pointers'], 'dif': '2300'}
{'pro_id': '414C', 'name': 'Mashmokh and Reverse Operation', 'tags': ['combinatorics', 'divide and conquer'], 'dif': '2400'}
{'pro_id': '414B', 'name': 'Mashmokh and ACM', 'tags': ['combinatorics', 'dp', 'number theory'], 'dif': '1500'}
{'pro_id': '414A', 'name': 'Mashmokh and Numbers', 'tags': ['constructive algorithms', 'number theory'], 'dif': '1500'}
{'pro_id': '413E', 'name': 'Maze 2D', 'tags': ['data structures', 'divide and conquer'], 'dif': '2100'}
{'pro_id': '413D', 'name': '2048', 'tags': ['bitmasks', 'dp'], 'dif': '2100'}
{'pro_id': '413C', 'name': 'Jeopardy!', 'tags': ['greedy', 'math'], 'dif': '1400'}
{'pro_id': '413B', 'name': 'Spyke Chatting', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '413A', 'name': 'Data Recovery', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '412E', 'name': 'E-mail Addresses', 'tags': ['implementation'], 'dif': '1800'}
{'pro_id': '412D', 'name': 'Giving Awards', 'tags': ['dfs and similar'], 'dif': '1900'}
{'pro_id': '412C', 'name': 'Pattern', 'tags': ['implementation', 'strings'], 'dif': '1300'}
{'pro_id': '412B', 'name': 'Network Configuration', 'tags': ['greedy', 'sortings'], 'dif': '1000'}
{'pro_id': '412A', 'name': 'Poster', 'tags': ['greedy', 'implementation'], 'dif': '1000'}
{'pro_id': '411C', 'name': 'Kicker', 'tags': ['implementation'], 'dif': '2100'}
{'pro_id': '411B', 'name': 'Multi-core Processor', 'tags': ['implementation'], 'dif': '2000'}
{'pro_id': '411A', 'name': 'Password Check', 'tags': ['implementation'], 'dif': '1800'}
{'pro_id': '409I', 'name': 'Feed the Golorp', 'tags': ['*special problem'], 'dif': '2900'}
{'pro_id': '409H', 'name': 'A + B Strikes Back', 'tags': ['*special problem', 'brute force', 'constructive algorithms', 'dsu', 'implementation'], 'dif': '1700'}
{'pro_id': '409G', 'name': 'On a plane', 'tags': ['*special problem'], 'dif': '2600'}
{'pro_id': '409F', 'name': '000001', 'tags': ['*special problem'], 'dif': '2300'}
{'pro_id': '409E', 'name': 'Dome', 'tags': ['*special problem'], 'dif': '2100'}
{'pro_id': '409D', 'name': 'Big Data', 'tags': ['*special problem'], 'dif': '2000'}
{'pro_id': '409C', 'name': 'Magnum Opus', 'tags': ['*special problem'], 'dif': '1700'}
{'pro_id': '409B', 'name': 'Mysterious Language', 'tags': ['*special problem'], 'dif': '1800'}
{'pro_id': '409A', 'name': 'The Great Game', 'tags': ['*special problem'], 'dif': '1700'}
{'pro_id': '408B', 'name': 'Garland', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '408A', 'name': 'Line to Cashier', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '407E', 'name': 'k-d-sequence', 'tags': ['data structures'], 'dif': '3100'}
{'pro_id': '407D', 'name': 'Largest Submatrix 3', 'tags': ['dp', 'hashing'], 'dif': '2600'}
{'pro_id': '407C', 'name': 'Curious Array', 'tags': ['brute force', 'combinatorics', 'implementation', 'math'], 'dif': '2500'}
{'pro_id': '407B', 'name': 'Long Path', 'tags': ['dp', 'implementation'], 'dif': '1800'}
{'pro_id': '407A', 'name': 'Triangle', 'tags': ['brute force', 'geometry', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '406E', 'name': 'Hamming Triples', 'tags': ['implementation', 'math', 'two pointers'], 'dif': '2700'}
{'pro_id': '406D', 'name': 'Hill Climbing', 'tags': ['dfs and similar', 'geometry', 'trees'], 'dif': '2200'}
{'pro_id': '405E', 'name': 'Graph Cutting', 'tags': ['dfs and similar', 'graphs'], 'dif': '2400'}
{'pro_id': '405D', 'name': 'Toy Sum', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1900'}
{'pro_id': '405C', 'name': 'Unusual Product', 'tags': ['implementation', 'math'], 'dif': '1600'}
{'pro_id': '405B', 'name': 'Domino Effect', 'tags': [], 'dif': '1200'}
{'pro_id': '405A', 'name': 'Gravity Flip', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1000'}
{'pro_id': '404E', 'name': 'Maze 1D', 'tags': ['binary search', 'greedy', 'implementation'], 'dif': '2700'}
{'pro_id': '404D', 'name': 'Minesweeper 1D', 'tags': ['dp', 'implementation'], 'dif': '2200'}
{'pro_id': '404C', 'name': 'Restore Graph', 'tags': ['dfs and similar', 'graphs', 'sortings'], 'dif': '1800'}
{'pro_id': '404B', 'name': 'Marathon', 'tags': ['implementation', 'math'], 'dif': '1500'}
{'pro_id': '404A', 'name': 'Valera and X', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '403E', 'name': 'Two Rooted Trees', 'tags': ['data structures', 'implementation', 'trees'], 'dif': '2900'}
{'pro_id': '403D', 'name': 'Beautiful Pairs of Numbers', 'tags': ['combinatorics', 'dp'], 'dif': '2200'}
{'pro_id': '402E', 'name': 'Strictly Positive Matrix', 'tags': ['graphs', 'math'], 'dif': '2200'}
{'pro_id': '402D', 'name': 'Upgrading Array', 'tags': ['dp', 'greedy', 'math', 'number theory'], 'dif': '2000'}
{'pro_id': '402C', 'name': 'Searching for Graph', 'tags': ['brute force', 'constructive algorithms', 'graphs'], 'dif': '1500'}
{'pro_id': '402B', 'name': 'Trees in a Row', 'tags': ['brute force', 'implementation'], 'dif': '1400'}
{'pro_id': '402A', 'name': 'Nuts', 'tags': ['greedy', 'math'], 'dif': '1200'}
{'pro_id': '401E', 'name': 'Olympic Games', 'tags': ['math'], 'dif': '2500'}
{'pro_id': '401D', 'name': 'Roman and Numbers', 'tags': ['bitmasks', 'brute force', 'combinatorics', 'dp', 'number theory'], 'dif': '2000'}
{'pro_id': '401C', 'name': 'Team', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '401B', 'name': 'Sereja and Contests', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1200'}
{'pro_id': '401A', 'name': 'Vanya and Cards', 'tags': ['implementation', 'math'], 'dif': '900'}
{'pro_id': '400E', 'name': 'Inna and Binary Logic', 'tags': ['binary search', 'bitmasks', 'data structures'], 'dif': '2400'}
{'pro_id': '400D', 'name': 'Dima and Bacteria', 'tags': ['dsu', 'graphs', 'shortest paths'], 'dif': '2000'}
{'pro_id': '400C', 'name': 'Inna and Huge Candy Matrix', 'tags': ['implementation', 'math'], 'dif': '1500'}
{'pro_id': '400B', 'name': 'Inna and New Matrix of Candies', 'tags': ['brute force', 'implementation', 'schedules'], 'dif': '1300'}
{'pro_id': '400A', 'name': 'Inna and Choose Options', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '399B', 'name': 'Red and Blue Balls', 'tags': [], 'dif': ''}
{'pro_id': '399A', 'name': 'Pages', 'tags': ['implementation'], 'dif': ''}
{'pro_id': '398E', 'name': 'Sorting Permutations', 'tags': [], 'dif': ''}
{'pro_id': '398D', 'name': 'Instant Messanger', 'tags': ['data structures'], 'dif': ''}
{'pro_id': '398C', 'name': 'Tree and Array', 'tags': ['constructive algorithms'], 'dif': ''}
{'pro_id': '398B', 'name': 'Painting The Wall', 'tags': ['dp', 'probabilities'], 'dif': ''}
{'pro_id': '398A', 'name': 'Cards', 'tags': ['constructive algorithms', 'implementation'], 'dif': ''}
{'pro_id': '397B', 'name': 'On Corruption and Numbers', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': ''}
{'pro_id': '397A', 'name': "On Segment's Own Points", 'tags': ['implementation'], 'dif': ''}
{'pro_id': '396E', 'name': 'On Iteration of One Well-Known Function', 'tags': ['math'], 'dif': ''}
{'pro_id': '396D', 'name': 'On Sum of Number of Inversions in Permutations', 'tags': ['combinatorics', 'math'], 'dif': ''}
{'pro_id': '396C', 'name': 'On Changing Tree', 'tags': ['data structures', 'graphs', 'trees'], 'dif': ''}
{'pro_id': '396B', 'name': 'On Sum of Fractions', 'tags': ['math', 'number theory'], 'dif': ''}
{'pro_id': '396A', 'name': 'On Number of Decompositions into Multipliers', 'tags': ['combinatorics', 'math', 'number theory'], 'dif': ''}
{'pro_id': '394E', 'name': 'Lightbulb for Minister', 'tags': ['geometry'], 'dif': ''}
{'pro_id': '394D', 'name': 'Physical Education and Buns', 'tags': ['brute force', 'implementation', 'math'], 'dif': ''}
{'pro_id': '394C', 'name': 'Dominoes', 'tags': ['constructive algorithms', 'greedy'], 'dif': ''}
{'pro_id': '394B', 'name': 'Very Beautiful Number', 'tags': ['math'], 'dif': ''}
{'pro_id': '394A', 'name': 'Counting Sticks', 'tags': ['brute force', 'implementation'], 'dif': ''}
{'pro_id': '393B', 'name': 'Three matrices', 'tags': [], 'dif': ''}
{'pro_id': '393A', 'name': 'Nineteen', 'tags': [], 'dif': ''}
{'pro_id': '392E', 'name': 'Deleting Substrings', 'tags': [], 'dif': ''}
{'pro_id': '392D', 'name': 'Three Arrays', 'tags': ['data structures'], 'dif': ''}
{'pro_id': '392C', 'name': 'Yet Another Number Sequence', 'tags': ['combinatorics', 'math', 'matrices'], 'dif': ''}
{'pro_id': '392B', 'name': 'Tower of Hanoi', 'tags': ['dp'], 'dif': ''}
{'pro_id': '392A', 'name': 'Blocked Points', 'tags': ['math'], 'dif': ''}
{'pro_id': '391F3', 'name': 'Stock Trading', 'tags': [], 'dif': ''}
{'pro_id': '391F2', 'name': 'Stock Trading', 'tags': ['greedy'], 'dif': ''}
{'pro_id': '391F1', 'name': 'Stock Trading', 'tags': ['dp'], 'dif': ''}
{'pro_id': '391E2', 'name': 'Three Trees', 'tags': [], 'dif': ''}
{'pro_id': '391E1', 'name': 'Three Trees', 'tags': [], 'dif': ''}
{'pro_id': '391D2', 'name': 'Supercollider', 'tags': ['data structures'], 'dif': ''}
{'pro_id': '391D1', 'name': 'Supercollider', 'tags': ['brute force'], 'dif': ''}
{'pro_id': '391C3', 'name': 'The Tournament', 'tags': [], 'dif': ''}
{'pro_id': '391C2', 'name': 'The Tournament', 'tags': ['greedy'], 'dif': ''}
{'pro_id': '391C1', 'name': 'The Tournament', 'tags': ['brute force'], 'dif': ''}
{'pro_id': '391B', 'name': 'Word Folding', 'tags': ['brute force'], 'dif': ''}
{'pro_id': '391A', 'name': 'Genetic Engineering', 'tags': ['implementation', 'two pointers'], 'dif': ''}
{'pro_id': '390E', 'name': 'Inna and Large Sweet Matrix', 'tags': [], 'dif': ''}
{'pro_id': '390D', 'name': 'Inna and Sweet Matrix', 'tags': ['constructive algorithms'], 'dif': ''}
{'pro_id': '390C', 'name': 'Inna and Candy Boxes', 'tags': ['data structures'], 'dif': ''}
{'pro_id': '390B', 'name': 'Inna, Dima and Song', 'tags': ['implementation'], 'dif': ''}
{'pro_id': '390A', 'name': 'Inna and Alarm Clock', 'tags': ['implementation'], 'dif': ''}
{'pro_id': '389B', 'name': 'Fox and Cross', 'tags': ['greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '389A', 'name': 'Fox and Number Game', 'tags': ['greedy', 'math'], 'dif': '1100'}
{'pro_id': '388E', 'name': 'Fox and Meteor Shower', 'tags': ['geometry'], 'dif': '3000'}
{'pro_id': '388D', 'name': 'Fox and Perfect Sets', 'tags': ['math'], 'dif': '2700'}
{'pro_id': '388C', 'name': 'Fox and Card Game', 'tags': ['games', 'greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '388B', 'name': 'Fox and Minimal path', 'tags': ['bitmasks', 'constructive algorithms', 'graphs', 'implementation', 'math'], 'dif': '2000'}
{'pro_id': '388A', 'name': 'Fox and Box Accumulation', 'tags': ['greedy', 'sortings'], 'dif': '1400'}
{'pro_id': '387E', 'name': 'George and Cards', 'tags': ['binary search', 'data structures'], 'dif': '2500'}
{'pro_id': '387D', 'name': 'George and Interesting Graph', 'tags': ['graph matchings'], 'dif': '2700'}
{'pro_id': '387C', 'name': 'George and Number', 'tags': ['greedy', 'implementation'], 'dif': '1700'}
{'pro_id': '387B', 'name': 'George and Round', 'tags': ['brute force', 'greedy', 'two pointers'], 'dif': '1200'}
{'pro_id': '387A', 'name': 'George and Sleep', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '386D', 'name': 'Game with Points', 'tags': ['dp', 'graphs', 'implementation', 'shortest paths'], 'dif': '2300'}
{'pro_id': '386C', 'name': 'Diverse Substrings', 'tags': ['dp', 'strings', 'two pointers'], 'dif': '2100'}
{'pro_id': '386B', 'name': 'Fly, freebies, fly!', 'tags': ['binary search', 'brute force', 'implementation'], 'dif': '1500'}
{'pro_id': '386A', 'name': 'Second-Price Auction', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '385E', 'name': 'Bear in the Field', 'tags': ['math', 'matrices'], 'dif': '2700'}
{'pro_id': '385D', 'name': 'Bear and Floodlight', 'tags': ['bitmasks', 'dp', 'geometry'], 'dif': '2500'}
{'pro_id': '385C', 'name': 'Bear and Prime Numbers', 'tags': ['binary search', 'brute force', 'data structures', 'dp', 'implementation', 'math', 'number theory'], 'dif': '1800'}
{'pro_id': '385B', 'name': 'Bear and Strings', 'tags': ['brute force', 'greedy', 'implementation', 'math', 'strings'], 'dif': '1300'}
{'pro_id': '385A', 'name': 'Bear and Raspberry', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1100'}
{'pro_id': '384B', 'name': 'Multitasking', 'tags': ['greedy', 'implementation', 'sortings', 'two pointers'], 'dif': '1500'}
{'pro_id': '384A', 'name': 'Coder', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '383E', 'name': 'Vowels', 'tags': ['combinatorics', 'divide and conquer', 'dp'], 'dif': '2700'}
{'pro_id': '383D', 'name': 'Antimatter', 'tags': ['dp'], 'dif': '2300'}
{'pro_id': '383C', 'name': 'Propagating tree', 'tags': ['data structures', 'dfs and similar', 'trees'], 'dif': '2400'}
{'pro_id': '383B', 'name': 'Volcanoes', 'tags': ['binary search', 'implementation', 'sortings', 'two pointers'], 'dif': '2200'}
{'pro_id': '383A', 'name': 'Milking cows', 'tags': ['data structures', 'greedy'], 'dif': '1500'}
{'pro_id': '382E', 'name': 'Ksenia and Combinatorics', 'tags': ['combinatorics', 'dp'], 'dif': '2600'}
{'pro_id': '382D', 'name': 'Ksenia and Pawns', 'tags': ['dfs and similar', 'graphs', 'implementation', 'trees'], 'dif': '2300'}
{'pro_id': '382C', 'name': 'Arithmetic Progression', 'tags': ['implementation', 'sortings'], 'dif': '1700'}
{'pro_id': '382B', 'name': 'Number Busters', 'tags': ['binary search', 'math'], 'dif': '2000'}
{'pro_id': '382A', 'name': 'Ksenia and Pan Scales', 'tags': ['greedy', 'implementation'], 'dif': '1100'}
{'pro_id': '381B', 'name': 'Sereja and Stairs', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1100'}
{'pro_id': '381A', 'name': 'Sereja and Dima', 'tags': ['greedy', 'implementation', 'two pointers'], 'dif': '800'}
{'pro_id': '380E', 'name': 'Sereja and Dividing', 'tags': ['data structures'], 'dif': '2600'}
{'pro_id': '380D', 'name': 'Sereja and Cinema', 'tags': ['combinatorics', 'math'], 'dif': '2500'}
{'pro_id': '380C', 'name': 'Sereja and Brackets', 'tags': ['data structures', 'schedules'], 'dif': '2100'}
{'pro_id': '380B', 'name': 'Sereja and Tree', 'tags': ['graphs', 'implementation'], 'dif': '2500'}
{'pro_id': '380A', 'name': 'Sereja and Prefixes', 'tags': ['binary search', 'brute force'], 'dif': '1700'}
{'pro_id': '379G', 'name': 'New Year Cactus', 'tags': ['dp'], 'dif': '3100'}
{'pro_id': '379F', 'name': 'New Year Tree', 'tags': ['data structures', 'divide and conquer', 'trees'], 'dif': '2400'}
{'pro_id': '379E', 'name': 'New Year Tree Decorations', 'tags': ['geometry', 'schedules', 'sortings'], 'dif': '2500'}
{'pro_id': '379D', 'name': 'New Year Letter', 'tags': ['bitmasks', 'brute force', 'dp'], 'dif': '2000'}
{'pro_id': '379C', 'name': 'New Year Ratings Change', 'tags': ['greedy', 'sortings'], 'dif': '1500'}
{'pro_id': '379B', 'name': 'New Year Present', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1200'}
{'pro_id': '379A', 'name': 'New Year Candles', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '378B', 'name': 'Semifinals', 'tags': ['implementation', 'sortings'], 'dif': '1300'}
{'pro_id': '378A', 'name': 'Playing with Dice', 'tags': ['brute force'], 'dif': '800'}
{'pro_id': '377E', 'name': 'Cookie Clicker', 'tags': ['dp', 'geometry'], 'dif': '2700'}
{'pro_id': '377D', 'name': 'Developing Game', 'tags': ['data structures'], 'dif': '2400'}
{'pro_id': '377C', 'name': 'Captains Mode', 'tags': ['bitmasks', 'dp', 'games'], 'dif': '2400'}
{'pro_id': '377B', 'name': 'Preparing for the Contest', 'tags': ['binary search', 'data structures', 'greedy', 'sortings'], 'dif': '2100'}
{'pro_id': '377A', 'name': 'Maze', 'tags': ['dfs and similar'], 'dif': '1600'}
{'pro_id': '376B', 'name': 'I.O.U.', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '376A', 'name': 'Lever', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '375E', 'name': 'Red and Black Tree', 'tags': ['dp', 'implementation', 'math'], 'dif': '3000'}
{'pro_id': '375D', 'name': 'Tree and Queries', 'tags': ['data structures', 'dfs and similar', 'trees'], 'dif': '2400'}
{'pro_id': '375C', 'name': 'Circling Round Treasures', 'tags': ['bitmasks', 'shortest paths'], 'dif': '2600'}
{'pro_id': '375B', 'name': 'Maximum Submatrix 2', 'tags': ['data structures', 'dp', 'implementation', 'sortings'], 'dif': '1800'}
{'pro_id': '375A', 'name': 'Divisible by Seven', 'tags': ['math', 'number theory'], 'dif': '1800'}
{'pro_id': '374E', 'name': 'Inna and Babies', 'tags': ['binary search', 'data structures', 'dsu', 'geometry', 'implementation'], 'dif': '2600'}
{'pro_id': '374D', 'name': 'Inna and Sequence', 'tags': ['binary search', 'data structures', 'dp', 'trees'], 'dif': '2300'}
{'pro_id': '374C', 'name': 'Inna and Dima', 'tags': ['dfs and similar', 'dp', 'graphs', 'implementation'], 'dif': '2000'}
{'pro_id': '374B', 'name': 'Inna and Nine', 'tags': ['combinatorics', 'greedy'], 'dif': '1600'}
{'pro_id': '374A', 'name': 'Inna and Pink Pony', 'tags': ['greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '373B', 'name': 'Making Sequences is Fun', 'tags': ['binary search', 'implementation', 'math'], 'dif': '1600'}
{'pro_id': '373A', 'name': 'Collecting Beats is Fun', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '372E', 'name': 'Drawing Circles is Fun', 'tags': ['combinatorics', 'geometry'], 'dif': '2900'}
{'pro_id': '372D', 'name': 'Choosing Subtree is Fun', 'tags': ['binary search', 'data structures', 'dfs and similar', 'trees', 'two pointers'], 'dif': '2600'}
{'pro_id': '372C', 'name': 'Watching Fireworks is Fun', 'tags': ['data structures', 'dp', 'math'], 'dif': '2400'}
{'pro_id': '372B', 'name': 'Counting Rectangles is Fun', 'tags': ['brute force', 'divide and conquer', 'dp'], 'dif': '2100'}
{'pro_id': '372A', 'name': 'Counting Kangaroos is Fun', 'tags': ['binary search', 'greedy', 'sortings', 'two pointers'], 'dif': '1700'}
{'pro_id': '371E', 'name': 'Subway Innovation', 'tags': ['greedy', 'math', 'two pointers'], 'dif': '2200'}
{'pro_id': '371D', 'name': 'Vessels', 'tags': ['data structures', 'dsu', 'implementation', 'trees'], 'dif': '1900'}
{'pro_id': '371C', 'name': 'Hamburgers', 'tags': ['binary search', 'brute force'], 'dif': '1600'}
{'pro_id': '371B', 'name': 'Fox Dividing Cheese', 'tags': ['math', 'number theory'], 'dif': '1400'}
{'pro_id': '371A', 'name': 'K-Periodic Array', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1200'}
{'pro_id': '370E', 'name': 'Summer Reading', 'tags': ['dp', 'greedy'], 'dif': '2500'}
{'pro_id': '370D', 'name': 'Broken Monitor', 'tags': ['brute force', 'constructive algorithms', 'greedy', 'implementation'], 'dif': '2100'}
{'pro_id': '370C', 'name': 'Mittens', 'tags': ['constructive algorithms', 'greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '370B', 'name': 'Berland Bingo', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '370A', 'name': 'Rook, Bishop and King', 'tags': ['graphs', 'math', 'shortest paths'], 'dif': '1200'}
{'pro_id': '369E', 'name': 'Valera and Queries', 'tags': ['binary search', 'data structures'], 'dif': '2400'}
{'pro_id': '369D', 'name': 'Valera and Fools', 'tags': ['dfs and similar', 'dp', 'graphs', 'shortest paths'], 'dif': '2300'}
{'pro_id': '369C', 'name': 'Valera and Elections', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '1700'}
{'pro_id': '369B', 'name': 'Valera and Contest', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '369A', 'name': 'Valera and Plates', 'tags': ['greedy', 'implementation'], 'dif': '1000'}
{'pro_id': '368B', 'name': 'Sereja and Suffixes', 'tags': ['data structures', 'dp'], 'dif': '1100'}
{'pro_id': '368A', 'name': 'Sereja and Coat Rack', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '367E', 'name': 'Sereja and Intervals', 'tags': ['combinatorics', 'dp'], 'dif': '2600'}
{'pro_id': '367D', 'name': 'Sereja and Sets', 'tags': ['bitmasks', 'dfs and similar'], 'dif': '2400'}
{'pro_id': '367C', 'name': 'Sereja and the Arrangement of Numbers', 'tags': ['graphs', 'greedy', 'sortings'], 'dif': '2200'}
{'pro_id': '367B', 'name': 'Sereja ans Anagrams', 'tags': ['binary search', 'data structures'], 'dif': '2000'}
{'pro_id': '367A', 'name': 'Sereja and Algorithm', 'tags': ['data structures', 'implementation'], 'dif': '1500'}
{'pro_id': '366E', 'name': 'Dima and Magic Guitar', 'tags': ['brute force', 'implementation', 'math'], 'dif': '2300'}
{'pro_id': '366D', 'name': 'Dima and Trap Graph', 'tags': ['binary search', 'data structures', 'dfs and similar', 'dsu', 'shortest paths', 'two pointers'], 'dif': '2400'}
{'pro_id': '366C', 'name': 'Dima and Salad', 'tags': ['dp'], 'dif': '1900'}
{'pro_id': '366B', 'name': 'Dima and To-do List', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '366A', 'name': 'Dima and Guards', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '365B', 'name': 'The Fibonacci Segment', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '365A', 'name': 'Good Number', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '364E', 'name': 'Empty Rectangles', 'tags': ['divide and conquer', 'two pointers'], 'dif': '3000'}
{'pro_id': '364D', 'name': 'Ghd', 'tags': ['brute force', 'math', 'probabilities'], 'dif': '2600'}
{'pro_id': '364C', 'name': 'Beautiful Set', 'tags': ['brute force', 'number theory'], 'dif': '2500'}
{'pro_id': '364B', 'name': 'Free Market', 'tags': ['dp', 'greedy'], 'dif': '2300'}
{'pro_id': '364A', 'name': 'Matrix', 'tags': ['combinatorics', 'data structures', 'implementation'], 'dif': '1800'}
{'pro_id': '363E', 'name': 'Two Circles', 'tags': ['brute force', 'data structures', 'implementation'], 'dif': '2600'}
{'pro_id': '363D', 'name': 'Renting Bikes', 'tags': ['binary search', 'greedy'], 'dif': '1800'}
{'pro_id': '363C', 'name': 'Fixing Typos', 'tags': ['greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '363B', 'name': 'Fence', 'tags': ['brute force', 'dp'], 'dif': '1200'}
{'pro_id': '363A', 'name': 'Soroban', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '362E', 'name': 'Petya and Pipes', 'tags': ['flows', 'graphs', 'shortest paths'], 'dif': '2700'}
{'pro_id': '362D', 'name': 'Fools and Foolproof Roads', 'tags': ['data structures', 'dfs and similar', 'dsu', 'graphs', 'greedy'], 'dif': '2500'}
{'pro_id': '362C', 'name': 'Insertion Sort', 'tags': ['data structures', 'dp', 'implementation', 'math'], 'dif': '2000'}
{'pro_id': '362B', 'name': 'Petya and Staircases', 'tags': ['implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '362A', 'name': 'Two Semiknights Meet', 'tags': ['greedy', 'math'], 'dif': '1500'}
{'pro_id': '361B', 'name': 'Levko and Permutation', 'tags': ['constructive algorithms', 'math', 'number theory'], 'dif': '1200'}
{'pro_id': '361A', 'name': 'Levko and Table', 'tags': ['constructive algorithms', 'implementation'], 'dif': '800'}
{'pro_id': '360E', 'name': 'Levko and Game', 'tags': ['graphs', 'greedy', 'shortest paths'], 'dif': '2800'}
{'pro_id': '360D', 'name': 'Levko and Sets', 'tags': ['number theory'], 'dif': '2600'}
{'pro_id': '360C', 'name': 'Levko and Strings', 'tags': ['combinatorics', 'dp'], 'dif': '2700'}
{'pro_id': '360B', 'name': 'Levko and Array', 'tags': ['binary search', 'dp'], 'dif': '2300'}
{'pro_id': '360A', 'name': 'Levko and Array Recovery', 'tags': ['greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '359E', 'name': 'Neatness', 'tags': ['dfs and similar'], 'dif': '2500'}
{'pro_id': '359D', 'name': 'Pair of Numbers', 'tags': ['binary search', 'brute force', 'data structures', 'math', 'two pointers'], 'dif': '2100'}
{'pro_id': '359C', 'name': 'Prime Number', 'tags': ['math', 'number theory'], 'dif': '2000'}
{'pro_id': '359B', 'name': 'Permutation', 'tags': ['constructive algorithms', 'dp', 'math'], 'dif': '1400'}
{'pro_id': '359A', 'name': 'Table', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1100'}
{'pro_id': '358E', 'name': 'Dima and Kicks', 'tags': ['brute force', 'dsu', 'graphs', 'implementation'], 'dif': '2600'}
{'pro_id': '358D', 'name': 'Dima and Hares', 'tags': ['dp', 'greedy'], 'dif': '2000'}
{'pro_id': '358C', 'name': 'Dima and Containers', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '2000'}
{'pro_id': '358B', 'name': 'Dima and Text Messages', 'tags': ['brute force', 'strings'], 'dif': '1500'}
{'pro_id': '358A', 'name': 'Dima and Continuous Line', 'tags': ['brute force', 'implementation'], 'dif': '1400'}
{'pro_id': '357B', 'name': 'Flag Day', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1400'}
{'pro_id': '357A', 'name': 'Group of Students', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '356E', 'name': 'Xenia and String Problem', 'tags': ['dp', 'hashing', 'implementation', 'string suffix structures', 'strings'], 'dif': '2800'}
{'pro_id': '356D', 'name': 'Bags and Coins', 'tags': ['bitmasks', 'constructive algorithms', 'dp', 'greedy'], 'dif': '2500'}
{'pro_id': '356C', 'name': 'Compartments', 'tags': ['combinatorics', 'constructive algorithms', 'greedy', 'implementation'], 'dif': '2200'}
{'pro_id': '356B', 'name': 'Xenia and Hamming', 'tags': ['implementation', 'math'], 'dif': '2000'}
{'pro_id': '356A', 'name': 'Knight Tournament', 'tags': ['data structures', 'dsu'], 'dif': '1700'}
{'pro_id': '355B', 'name': 'Vasya and Public Transport', 'tags': ['greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '355A', 'name': 'Vasya and Digital Root', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1100'}
{'pro_id': '354E', 'name': 'Lucky Number Representation', 'tags': ['constructive algorithms', 'dfs and similar', 'dp'], 'dif': '2200'}
{'pro_id': '354D', 'name': 'Transferring Pyramid', 'tags': ['dp'], 'dif': '2900'}
{'pro_id': '354C', 'name': 'Vasya and Beautiful Arrays', 'tags': ['brute force', 'dp', 'number theory'], 'dif': '2000'}
{'pro_id': '354B', 'name': 'Game with Strings', 'tags': ['bitmasks', 'dp', 'games'], 'dif': '2500'}
{'pro_id': '354A', 'name': 'Vasya and Robot', 'tags': ['brute force', 'greedy', 'math'], 'dif': '1600'}
{'pro_id': '353E', 'name': 'Antichain', 'tags': ['dp', 'graph matchings', 'greedy'], 'dif': '2600'}
{'pro_id': '353D', 'name': 'Queue', 'tags': ['constructive algorithms', 'dp'], 'dif': '2100'}
{'pro_id': '353C', 'name': 'Find Maximum', 'tags': ['implementation', 'math', 'number theory'], 'dif': '1600'}
{'pro_id': '353B', 'name': 'Two Heaps', 'tags': ['combinatorics', 'constructive algorithms', 'greedy', 'implementation', 'math', 'sortings'], 'dif': '1800'}
{'pro_id': '353A', 'name': 'Domino', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '352B', 'name': 'Jeff and Periods', 'tags': ['implementation', 'sortings'], 'dif': '1300'}
{'pro_id': '352A', 'name': 'Jeff and Digits', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1100'}
{'pro_id': '351E', 'name': 'Jeff and Permutation', 'tags': ['greedy'], 'dif': '2200'}
{'pro_id': '351D', 'name': 'Jeff and Removing Periods', 'tags': ['data structures'], 'dif': '2700'}
{'pro_id': '351C', 'name': 'Jeff and Brackets', 'tags': ['dp', 'matrices'], 'dif': '2800'}
{'pro_id': '351B', 'name': 'Jeff and Furik', 'tags': ['combinatorics', 'dp', 'probabilities'], 'dif': '2100'}
{'pro_id': '351A', 'name': 'Jeff and Rounding', 'tags': ['dp', 'greedy', 'implementation', 'math'], 'dif': '1900'}
{'pro_id': '350E', 'name': 'Wrong Floyd', 'tags': ['brute force', 'constructive algorithms', 'dfs and similar', 'graphs'], 'dif': '2200'}
{'pro_id': '350D', 'name': 'Looking for Owls', 'tags': ['binary search', 'data structures', 'geometry', 'hashing', 'sortings'], 'dif': '2600'}
{'pro_id': '350C', 'name': 'Bombs', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1600'}
{'pro_id': '350B', 'name': 'Resort', 'tags': ['graphs'], 'dif': '1600'}
{'pro_id': '350A', 'name': 'TL', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '349B', 'name': 'Color the Fence', 'tags': ['data structures', 'dp', 'greedy', 'implementation'], 'dif': '1700'}
{'pro_id': '349A', 'name': 'Cinema Line', 'tags': ['greedy', 'implementation'], 'dif': '1200'}
{'pro_id': '348E', 'name': 'Pilgrims', 'tags': ['dfs and similar', 'dp', 'trees'], 'dif': '2800'}
{'pro_id': '348D', 'name': 'Turtles', 'tags': ['dp', 'matrices'], 'dif': '2500'}
{'pro_id': '348C', 'name': 'Subset Sums', 'tags': ['brute force', 'data structures'], 'dif': '2600'}
{'pro_id': '348B', 'name': 'Apple Tree', 'tags': ['dfs and similar', 'number theory', 'trees'], 'dif': '2400'}
{'pro_id': '348A', 'name': 'Mafia', 'tags': ['binary search', 'math', 'sortings'], 'dif': '1700'}
{'pro_id': '347B', 'name': 'Fixed Points', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1200'}
{'pro_id': '347A', 'name': 'Difference Row', 'tags': ['constructive algorithms', 'implementation', 'sortings'], 'dif': '1300'}
{'pro_id': '346E', 'name': 'Doodle Jump', 'tags': ['math', 'number theory'], 'dif': '3000'}
{'pro_id': '346D', 'name': 'Robot Control', 'tags': ['dp', 'graphs', 'shortest paths'], 'dif': '2600'}
{'pro_id': '346C', 'name': 'Number Transformation II', 'tags': ['greedy', 'math'], 'dif': '2200'}
{'pro_id': '346B', 'name': 'Lucky Common Subsequence', 'tags': ['dp', 'strings'], 'dif': '2000'}
{'pro_id': '346A', 'name': 'Alice and Bob', 'tags': ['games', 'math', 'number theory'], 'dif': '1600'}
{'pro_id': '345G', 'name': 'Suffix Subgroup', 'tags': ['*special problem', 'strings'], 'dif': '2600'}
{'pro_id': '345F', 'name': 'Superstitions Inspection', 'tags': ['*special problem'], 'dif': '2800'}
{'pro_id': '345E', 'name': 'Black Cat Rush', 'tags': ['*special problem'], 'dif': '2800'}
{'pro_id': '345D', 'name': 'Chain Letter', 'tags': ['*special problem', 'dfs and similar', 'graphs'], 'dif': '2300'}
{'pro_id': '345C', 'name': 'Counting Fridays', 'tags': ['*special problem'], 'dif': '2000'}
{'pro_id': '345B', 'name': 'Triskaidekaphobia', 'tags': ['*special problem'], 'dif': '2000'}
{'pro_id': '345A', 'name': 'Expecting Trouble', 'tags': ['*special problem', 'probabilities'], 'dif': '1600'}
{'pro_id': '344B', 'name': 'Simple Molecules', 'tags': ['brute force', 'graphs', 'math'], 'dif': '1300'}
{'pro_id': '344A', 'name': 'Magnets', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '343E', 'name': 'Pumping Stations', 'tags': ['brute force', 'dfs and similar', 'divide and conquer', 'flows', 'graphs', 'greedy', 'trees'], 'dif': '2800'}
{'pro_id': '343D', 'name': 'Water Tree', 'tags': ['data structures', 'dfs and similar', 'graphs', 'trees'], 'dif': '2100'}
{'pro_id': '343C', 'name': 'Read Time', 'tags': ['binary search', 'greedy', 'two pointers'], 'dif': '2100'}
{'pro_id': '343B', 'name': 'Alternating Current', 'tags': ['data structures', 'greedy', 'implementation'], 'dif': '1600'}
{'pro_id': '343A', 'name': 'Rational Resistance', 'tags': ['math', 'number theory'], 'dif': '1600'}
{'pro_id': '342E', 'name': 'Xenia and Tree', 'tags': ['data structures', 'divide and conquer', 'trees'], 'dif': '2200'}
{'pro_id': '342D', 'name': 'Xenia and Dominoes', 'tags': ['bitmasks', 'dfs and similar', 'dp'], 'dif': '2500'}
{'pro_id': '342C', 'name': 'Cupboard and Balloons', 'tags': ['geometry'], 'dif': '1800'}
{'pro_id': '342B', 'name': 'Xenia and Spies', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1500'}
{'pro_id': '342A', 'name': 'Xenia and Divisors', 'tags': ['greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '341E', 'name': 'Candies Game', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2900'}
{'pro_id': '341D', 'name': 'Iahub and Xors', 'tags': ['data structures'], 'dif': '2500'}
{'pro_id': '340E', 'name': 'Iahub and Permutations', 'tags': ['combinatorics', 'math'], 'dif': '2200'}
{'pro_id': '340D', 'name': 'Bubble Sort Graph', 'tags': ['binary search', 'data structures', 'dp'], 'dif': '1800'}
{'pro_id': '340C', 'name': 'Tourist Problem', 'tags': ['combinatorics', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '340B', 'name': 'Maximal Area Quadrilateral', 'tags': ['brute force', 'geometry'], 'dif': '2000'}
{'pro_id': '340A', 'name': 'The Wall', 'tags': ['math'], 'dif': '1300'}
{'pro_id': '339E', 'name': 'Three Swaps', 'tags': ['constructive algorithms', 'dfs and similar', 'greedy'], 'dif': '2200'}
{'pro_id': '339D', 'name': 'Xenia and Bit Operations', 'tags': ['data structures', 'trees'], 'dif': '1700'}
{'pro_id': '339C', 'name': 'Xenia and Weights', 'tags': ['constructive algorithms', 'dfs and similar', 'dp', 'graphs', 'greedy', 'shortest paths'], 'dif': '1700'}
{'pro_id': '339B', 'name': 'Xenia and Ringroad', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '339A', 'name': 'Helpful Maths', 'tags': ['greedy', 'implementation', 'sortings', 'strings'], 'dif': '900'}
{'pro_id': '338E', 'name': 'Optimize!', 'tags': ['data structures'], 'dif': '2600'}
{'pro_id': '338D', 'name': 'GCD Table', 'tags': ['chinese remainder theorem', 'math', 'number theory'], 'dif': '2700'}
{'pro_id': '337E', 'name': 'Divisor Tree', 'tags': ['brute force', 'number theory', 'trees'], 'dif': '2400'}
{'pro_id': '337D', 'name': 'Book of Evil', 'tags': ['dfs and similar', 'divide and conquer', 'dp', 'trees'], 'dif': '2100'}
{'pro_id': '337C', 'name': 'Quiz', 'tags': ['binary search', 'greedy', 'math', 'matrices', 'number theory'], 'dif': '1700'}
{'pro_id': '337B', 'name': 'Routine Problem', 'tags': ['greedy', 'math', 'number theory'], 'dif': '1400'}
{'pro_id': '337A', 'name': 'Puzzles', 'tags': ['greedy'], 'dif': '1000'}
{'pro_id': '336E', 'name': 'Vasily the Bear and Painting Square', 'tags': ['bitmasks', 'combinatorics', 'dp', 'implementation'], 'dif': '2600'}
{'pro_id': '336D', 'name': 'Vasily the Bear and Beautiful Strings', 'tags': ['combinatorics', 'math', 'number theory'], 'dif': '2400'}
{'pro_id': '336C', 'name': 'Vasily the Bear and Sequence', 'tags': ['brute force', 'greedy', 'implementation', 'number theory'], 'dif': '1800'}
{'pro_id': '336B', 'name': 'Vasily the Bear and Fly', 'tags': ['math'], 'dif': '1900'}
{'pro_id': '336A', 'name': 'Vasily the Bear and Triangle', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '335F', 'name': 'Buy One, Get One Free', 'tags': ['dp', 'greedy'], 'dif': '2900'}
{'pro_id': '335E', 'name': 'Counting Skyscrapers', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2900'}
{'pro_id': '335D', 'name': 'Rectangles and Square', 'tags': ['brute force', 'dp'], 'dif': '2400'}
{'pro_id': '335C', 'name': 'More Reclamation', 'tags': ['games'], 'dif': '2100'}
{'pro_id': '335B', 'name': 'Palindrome', 'tags': ['constructive algorithms', 'dp'], 'dif': '1900'}
{'pro_id': '335A', 'name': 'Banana', 'tags': ['binary search', 'constructive algorithms', 'greedy'], 'dif': '1500'}
{'pro_id': '334B', 'name': 'Eight Point Sets', 'tags': ['sortings'], 'dif': '1500'}
{'pro_id': '334A', 'name': 'Candy Bags', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '333E', 'name': 'Summer Earnings', 'tags': ['binary search', 'bitmasks', 'brute force', 'geometry', 'sortings'], 'dif': '2400'}
{'pro_id': '333D', 'name': 'Characteristics of Rectangles', 'tags': ['binary search', 'bitmasks', 'brute force', 'implementation', 'sortings'], 'dif': '2100'}
{'pro_id': '333C', 'name': 'Lucky Tickets', 'tags': ['brute force', 'constructive algorithms'], 'dif': '2800'}
{'pro_id': '333B', 'name': 'Chips', 'tags': ['greedy'], 'dif': '1800'}
{'pro_id': '333A', 'name': 'Secrets', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '332E', 'name': 'Binary Key', 'tags': ['dp', 'greedy', 'implementation'], 'dif': '2600'}
{'pro_id': '332D', 'name': 'Theft of Blueprints', 'tags': ['graphs', 'math'], 'dif': '2400'}
{'pro_id': '332C', 'name': "Students' Revenge", 'tags': ['data structures', 'greedy', 'sortings'], 'dif': '2200'}
{'pro_id': '332B', 'name': 'Maximum Absurdity', 'tags': ['data structures', 'dp', 'implementation'], 'dif': '1500'}
{'pro_id': '332A', 'name': 'Down the Hatch!', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '331E2', 'name': 'Deja Vu', 'tags': ['constructive algorithms', 'dp'], 'dif': '3000'}
{'pro_id': '331E1', 'name': 'Deja Vu', 'tags': ['constructive algorithms', 'graphs', 'implementation'], 'dif': '3000'}
{'pro_id': '331D3', 'name': 'Escaping on Beaveractor', 'tags': ['data structures', 'implementation', 'trees'], 'dif': '2900'}
{'pro_id': '331D2', 'name': 'Escaping on Beaveractor', 'tags': ['graphs'], 'dif': '2600'}
{'pro_id': '331D1', 'name': 'Escaping on Beaveractor', 'tags': ['dfs and similar', 'implementation'], 'dif': '2300'}
{'pro_id': '331C3', 'name': 'The Great Julya Calendar', 'tags': ['dp'], 'dif': '2500'}
{'pro_id': '331C2', 'name': 'The Great Julya Calendar', 'tags': ['dp'], 'dif': '2400'}
{'pro_id': '331C1', 'name': 'The Great Julya Calendar', 'tags': ['dp'], 'dif': '1200'}
{'pro_id': '331B2', 'name': 'Shave Beaver!', 'tags': ['data structures'], 'dif': '1900'}
{'pro_id': '331B1', 'name': 'Shave Beaver!', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '331A2', 'name': 'Oh Sweet Beaverette', 'tags': ['data structures', 'sortings'], 'dif': '1600'}
{'pro_id': '331A1', 'name': 'Oh Sweet Beaverette', 'tags': ['brute force', 'implementation'], 'dif': '1400'}
{'pro_id': '330B', 'name': 'Road Construction', 'tags': ['constructive algorithms', 'graphs'], 'dif': '1300'}
{'pro_id': '330A', 'name': 'Cakeminator', 'tags': ['brute force', 'implementation'], 'dif': '900'}
{'pro_id': '329E', 'name': 'Evil', 'tags': ['math'], 'dif': '3100'}
{'pro_id': '329D', 'name': 'The Evil Temple and the Moving Rocks', 'tags': ['constructive algorithms'], 'dif': '2400'}
{'pro_id': '329C', 'name': 'Graph Reconstruction', 'tags': ['constructive algorithms'], 'dif': '2600'}
{'pro_id': '329B', 'name': 'Biridian Forest', 'tags': ['dfs and similar', 'shortest paths'], 'dif': '1700'}
{'pro_id': '329A', 'name': 'Purification', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1500'}
{'pro_id': '328B', 'name': 'Sheldon and Ice Pieces', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '328A', 'name': 'IQ Test', 'tags': ['implementation'], 'dif': '1800'}
{'pro_id': '327E', 'name': 'Axis Walking', 'tags': ['bitmasks', 'combinatorics', 'constructive algorithms', 'dp', 'meet-in-the-middle'], 'dif': '2500'}
{'pro_id': '327D', 'name': 'Block Tower', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs'], 'dif': '2000'}
{'pro_id': '327C', 'name': 'Magic Five', 'tags': ['combinatorics', 'math'], 'dif': '1700'}
{'pro_id': '327B', 'name': 'Hungry Sequence', 'tags': ['math'], 'dif': '1300'}
{'pro_id': '327A', 'name': 'Flipping Game', 'tags': ['brute force', 'dp', 'implementation'], 'dif': '1200'}
{'pro_id': '325E', 'name': 'The Red Button', 'tags': ['combinatorics', 'dfs and similar', 'dsu', 'graphs', 'greedy'], 'dif': '2700'}
{'pro_id': '325D', 'name': 'Reclamation', 'tags': ['dsu'], 'dif': '2800'}
{'pro_id': '325C', 'name': 'Monsters and Diamonds', 'tags': ['dfs and similar', 'graphs', 'shortest paths'], 'dif': '2500'}
{'pro_id': '325B', 'name': 'Stadium and Games', 'tags': ['binary search', 'math'], 'dif': '1800'}
{'pro_id': '325A', 'name': 'Square and Rectangles', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '323C', 'name': 'Two permutations', 'tags': ['data structures'], 'dif': '2200'}
{'pro_id': '323B', 'name': 'Tournament-graph', 'tags': ['constructive algorithms', 'graphs'], 'dif': '2000'}
{'pro_id': '323A', 'name': 'Black-and-White Cube', 'tags': ['combinatorics', 'constructive algorithms'], 'dif': '1600'}
{'pro_id': '322B', 'name': 'Ciel and Flowers', 'tags': ['combinatorics', 'math'], 'dif': '1600'}
{'pro_id': '322A', 'name': 'Ciel and Dancing', 'tags': ['greedy'], 'dif': '1100'}
{'pro_id': '321E', 'name': 'Ciel and Gondolas', 'tags': ['data structures', 'divide and conquer', 'dp'], 'dif': '2600'}
{'pro_id': '321D', 'name': 'Ciel and Flipboard', 'tags': ['dp', 'greedy', 'math'], 'dif': '2900'}
{'pro_id': '321C', 'name': 'Ciel the Commander', 'tags': ['constructive algorithms', 'dfs and similar', 'divide and conquer', 'greedy', 'trees'], 'dif': '2500'}
{'pro_id': '321B', 'name': 'Ciel and Duel', 'tags': ['dp', 'flows', 'greedy'], 'dif': '2000'}
{'pro_id': '321A', 'name': 'Ciel and Robot', 'tags': ['binary search', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '320B', 'name': 'Ping-Pong (Easy Version)', 'tags': ['dfs and similar', 'graphs'], 'dif': '1500'}
{'pro_id': '320A', 'name': 'Magic Numbers', 'tags': ['brute force', 'greedy'], 'dif': '1000'}
{'pro_id': '319E', 'name': 'Ping-Pong', 'tags': ['data structures'], 'dif': '3000'}
{'pro_id': '319D', 'name': 'Have You Ever Heard About the Word?', 'tags': ['greedy', 'hashing', 'string suffix structures', 'strings'], 'dif': '2700'}
{'pro_id': '319C', 'name': 'Kalila and Dimna in the Logging Industry', 'tags': ['dp', 'geometry'], 'dif': '2400'}
{'pro_id': '319B', 'name': 'Psychos in a Line', 'tags': ['data structures', 'implementation'], 'dif': '2000'}
{'pro_id': '319A', 'name': 'Malek Dance Club', 'tags': ['combinatorics', 'math'], 'dif': '1700'}
{'pro_id': '318B', 'name': 'Strings of Power', 'tags': ['implementation', 'strings', 'two pointers'], 'dif': '1300'}
{'pro_id': '318A', 'name': 'Even Odds', 'tags': ['math'], 'dif': '1000'}
{'pro_id': '317E', 'name': 'Princess and Her Shadow', 'tags': ['constructive algorithms', 'shortest paths'], 'dif': '3200'}
{'pro_id': '317D', 'name': 'Game with Powers', 'tags': ['dp', 'games'], 'dif': '2200'}
{'pro_id': '317C', 'name': 'Balance', 'tags': ['constructive algorithms', 'dfs and similar', 'graphs', 'trees'], 'dif': '2700'}
{'pro_id': '317B', 'name': 'Ants', 'tags': ['brute force', 'implementation'], 'dif': '2000'}
{'pro_id': '317A', 'name': 'Perfect Pair', 'tags': ['brute force'], 'dif': '1600'}
{'pro_id': '316G3', 'name': 'Good Substrings', 'tags': ['string suffix structures'], 'dif': '2800'}
{'pro_id': '316G2', 'name': 'Good Substrings', 'tags': ['string suffix structures'], 'dif': '2200'}
{'pro_id': '316G1', 'name': 'Good Substrings', 'tags': ['hashing', 'strings'], 'dif': '1700'}
{'pro_id': '316F3', 'name': 'Suns and Rays', 'tags': ['constructive algorithms', 'dfs and similar', 'implementation'], 'dif': '2600'}
{'pro_id': '316F2', 'name': 'Suns and Rays', 'tags': [], 'dif': '2500'}
{'pro_id': '316F1', 'name': 'Suns and Rays', 'tags': ['dfs and similar', 'implementation'], 'dif': '2500'}
{'pro_id': '316E3', 'name': 'Summer Homework', 'tags': ['data structures', 'math'], 'dif': '2500'}
{'pro_id': '316E2', 'name': 'Summer Homework', 'tags': ['data structures', 'math'], 'dif': '2400'}
{'pro_id': '316E1', 'name': 'Summer Homework', 'tags': ['brute force', 'data structures'], 'dif': '1500'}
{'pro_id': '316D3', 'name': 'PE Lesson', 'tags': ['dp', 'math'], 'dif': '2400'}
{'pro_id': '316D2', 'name': 'PE Lesson', 'tags': ['dp'], 'dif': '2300'}
{'pro_id': '316D1', 'name': 'PE Lesson', 'tags': ['brute force', 'dp'], 'dif': '2300'}
{'pro_id': '316C2', 'name': 'Tidying Up', 'tags': ['flows', 'graph matchings'], 'dif': '2300'}
{'pro_id': '316C1', 'name': 'Tidying Up', 'tags': ['flows'], 'dif': '2200'}
{'pro_id': '316B2', 'name': 'EKG', 'tags': ['dfs and similar', 'dp'], 'dif': '1600'}
{'pro_id': '316B1', 'name': 'EKG', 'tags': ['brute force', 'dfs and similar'], 'dif': '1600'}
{'pro_id': '316A2', 'name': 'Special Task', 'tags': ['math'], 'dif': '1400'}
{'pro_id': '316A1', 'name': 'Special Task', 'tags': ['greedy'], 'dif': '1100'}
{'pro_id': '315B', 'name': 'Sereja and Array', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '315A', 'name': 'Sereja and Bottles', 'tags': ['brute force'], 'dif': '1400'}
{'pro_id': '314E', 'name': 'Sereja and Squares', 'tags': ['dp'], 'dif': '2900'}
{'pro_id': '314D', 'name': 'Sereja and Straight Lines', 'tags': ['binary search', 'data structures', 'geometry', 'sortings', 'two pointers'], 'dif': '2400'}
{'pro_id': '314C', 'name': 'Sereja and Subsequences', 'tags': ['data structures', 'dp'], 'dif': '2300'}
{'pro_id': '314B', 'name': 'Sereja and Periods', 'tags': ['binary search', 'dfs and similar', 'strings'], 'dif': '2000'}
{'pro_id': '314A', 'name': 'Sereja and Contest', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '313E', 'name': 'Ilya and Two Numbers', 'tags': ['constructive algorithms', 'data structures', 'dsu', 'greedy'], 'dif': '2300'}
{'pro_id': '313D', 'name': 'Ilya and Roads', 'tags': ['dp'], 'dif': '2100'}
{'pro_id': '313C', 'name': 'Ilya and Matrix', 'tags': ['constructive algorithms', 'greedy', 'implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '313B', 'name': 'Ilya and Queries', 'tags': ['dp', 'implementation'], 'dif': '1200'}
{'pro_id': '313A', 'name': 'Ilya and Bank Account', 'tags': ['implementation', 'number theory'], 'dif': '900'}
{'pro_id': '312B', 'name': 'Archer', 'tags': ['math', 'probabilities'], 'dif': '1300'}
{'pro_id': '312A', 'name': 'Whose sentence is it?', 'tags': ['implementation', 'strings'], 'dif': '1300'}
{'pro_id': '311E', 'name': 'Biologist', 'tags': ['flows'], 'dif': '2900'}
{'pro_id': '311D', 'name': 'Interval Cubing', 'tags': ['data structures', 'math'], 'dif': '2500'}
{'pro_id': '311C', 'name': 'Fetch the Treasure', 'tags': ['brute force', 'data structures', 'graphs', 'shortest paths'], 'dif': '2600'}
{'pro_id': '311B', 'name': 'Cats Transport', 'tags': ['data structures', 'dp'], 'dif': '2400'}
{'pro_id': '311A', 'name': 'The Closest Pair', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1400'}
{'pro_id': '309E', 'name': 'Sheep', 'tags': ['binary search', 'greedy'], 'dif': '2900'}
{'pro_id': '309D', 'name': 'Tennis Rackets', 'tags': ['brute force', 'geometry'], 'dif': '2600'}
{'pro_id': '309C', 'name': 'Memory for Arrays', 'tags': ['binary search', 'bitmasks', 'greedy'], 'dif': '1900'}
{'pro_id': '309B', 'name': 'Context Advertising', 'tags': ['dp', 'two pointers'], 'dif': '2100'}
{'pro_id': '309A', 'name': 'Morning run', 'tags': ['binary search', 'math', 'two pointers'], 'dif': '2000'}
{'pro_id': '306D', 'name': 'Polygon', 'tags': ['constructive algorithms', 'geometry'], 'dif': '2300'}
{'pro_id': '306C', 'name': 'White, Black and White Again', 'tags': ['combinatorics', 'number theory'], 'dif': '2200'}
{'pro_id': '306B', 'name': 'Optimizer', 'tags': ['data structures', 'greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '306A', 'name': 'Candies', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '305E', 'name': 'Playing with String', 'tags': ['games'], 'dif': '2500'}
{'pro_id': '305D', 'name': 'Olya and Graph', 'tags': ['combinatorics', 'math'], 'dif': '2600'}
{'pro_id': '305C', 'name': 'Ivan and Powers of Two', 'tags': ['greedy', 'implementation'], 'dif': '1600'}
{'pro_id': '305B', 'name': 'Continued Fractions', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1600'}
{'pro_id': '305A', 'name': 'Strange Addition', 'tags': ['brute force', 'constructive algorithms', 'implementation'], 'dif': '1600'}
{'pro_id': '304B', 'name': 'Calendar', 'tags': ['brute force', 'implementation'], 'dif': '1400'}
{'pro_id': '304A', 'name': 'Pythagorean Theorem II', 'tags': ['brute force', 'math'], 'dif': '1300'}
{'pro_id': '303E', 'name': 'Random Ranking', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2800'}
{'pro_id': '303D', 'name': 'Rotatable Number', 'tags': ['math', 'number theory'], 'dif': '2500'}
{'pro_id': '303C', 'name': 'Minimum Modular', 'tags': ['brute force', 'graphs', 'math', 'number theory'], 'dif': '2700'}
{'pro_id': '303B', 'name': 'Rectangle Puzzle II', 'tags': ['implementation', 'math'], 'dif': '1900'}
{'pro_id': '303A', 'name': 'Lucky Permutation Triple', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '1400'}
{'pro_id': '302B', 'name': 'Eugeny and Play List', 'tags': ['binary search', 'implementation', 'two pointers'], 'dif': '1200'}
{'pro_id': '302A', 'name': 'Eugeny and Array', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '301E', 'name': 'Yaroslav and Arrangements', 'tags': ['dp'], 'dif': '2900'}
{'pro_id': '301D', 'name': 'Yaroslav and Divisors', 'tags': ['data structures'], 'dif': '2200'}
{'pro_id': '301C', 'name': 'Yaroslav and Algorithm', 'tags': ['constructive algorithms'], 'dif': '2700'}
{'pro_id': '301B', 'name': 'Yaroslav and Time', 'tags': ['binary search', 'graphs', 'shortest paths'], 'dif': '2000'}
{'pro_id': '301A', 'name': 'Yaroslav and Sequence', 'tags': ['constructive algorithms'], 'dif': '1800'}
{'pro_id': '300E', 'name': 'Empire Strikes Back', 'tags': ['binary search', 'math', 'number theory'], 'dif': '2400'}
{'pro_id': '300D', 'name': 'Painting Square', 'tags': ['dp', 'fft'], 'dif': '2700'}
{'pro_id': '300C', 'name': 'Beautiful Numbers', 'tags': ['brute force', 'combinatorics'], 'dif': '1800'}
{'pro_id': '300B', 'name': 'Coach', 'tags': ['brute force', 'dfs and similar', 'graphs'], 'dif': '1500'}
{'pro_id': '300A', 'name': 'Array', 'tags': ['brute force', 'constructive algorithms', 'implementation'], 'dif': '1200'}
{'pro_id': '299B', 'name': 'Ksusha the Squirrel', 'tags': ['brute force', 'implementation'], 'dif': '1000'}
{'pro_id': '299A', 'name': 'Ksusha and Array', 'tags': ['brute force', 'number theory', 'sortings'], 'dif': '1000'}
{'pro_id': '298B', 'name': 'Sail', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '298A', 'name': 'Snow Footprints', 'tags': ['greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '297E', 'name': 'Mystic Carvings', 'tags': ['data structures'], 'dif': '3000'}
{'pro_id': '297D', 'name': 'Color the Carpet', 'tags': ['constructive algorithms'], 'dif': '2400'}
{'pro_id': '297C', 'name': 'Splitting the Uniqueness', 'tags': ['constructive algorithms'], 'dif': '2700'}
{'pro_id': '297B', 'name': 'Fish Weight', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1700'}
{'pro_id': '297A', 'name': 'Parity Game', 'tags': ['constructive algorithms'], 'dif': '1700'}
{'pro_id': '296B', 'name': 'Yaroslav and Two Strings', 'tags': ['combinatorics', 'dp'], 'dif': '2000'}
{'pro_id': '296A', 'name': 'Yaroslav and Permutations', 'tags': ['greedy', 'math'], 'dif': '1100'}
{'pro_id': '295E', 'name': 'Yaroslav and Points', 'tags': ['data structures'], 'dif': '2500'}
{'pro_id': '295D', 'name': 'Greg and Caves', 'tags': ['combinatorics', 'dp'], 'dif': '2400'}
{'pro_id': '295C', 'name': 'Greg and Friends', 'tags': ['combinatorics', 'dp', 'graphs', 'shortest paths'], 'dif': '2500'}
{'pro_id': '295B', 'name': 'Greg and Graph', 'tags': ['dp', 'graphs', 'shortest paths'], 'dif': '1900'}
{'pro_id': '295A', 'name': 'Greg and Array', 'tags': ['data structures', 'implementation'], 'dif': '1500'}
{'pro_id': '294E', 'name': 'Shaass the Great', 'tags': ['dp', 'trees'], 'dif': '2700'}
{'pro_id': '294D', 'name': 'Shaass and Painter Robot', 'tags': ['brute force', 'implementation', 'number theory'], 'dif': '2700'}
{'pro_id': '294C', 'name': 'Shaass and Lights', 'tags': ['combinatorics', 'number theory'], 'dif': '1900'}
{'pro_id': '294B', 'name': 'Shaass and Bookshelf', 'tags': ['dp', 'greedy'], 'dif': '1700'}
{'pro_id': '294A', 'name': 'Shaass and Oskols', 'tags': ['implementation', 'math'], 'dif': '900'}
{'pro_id': '293E', 'name': 'Close Vertices', 'tags': ['data structures', 'divide and conquer', 'trees'], 'dif': '2700'}
{'pro_id': '293D', 'name': 'Ksusha and Square', 'tags': ['geometry', 'math', 'probabilities', 'two pointers'], 'dif': '2700'}
{'pro_id': '293C', 'name': 'Cube Problem', 'tags': ['brute force', 'math', 'number theory'], 'dif': '2300'}
{'pro_id': '293B', 'name': 'Distinct Paths', 'tags': ['brute force', 'combinatorics'], 'dif': '2600'}
{'pro_id': '293A', 'name': 'Weird Game', 'tags': ['games', 'greedy'], 'dif': '1500'}
{'pro_id': '292E', 'name': 'Copying Data', 'tags': ['data structures'], 'dif': '1900'}
{'pro_id': '292D', 'name': 'Connected Components', 'tags': ['data structures', 'dfs and similar', 'dp', 'dsu'], 'dif': '1900'}
{'pro_id': '292C', 'name': 'Beautiful IP Addresses', 'tags': ['brute force'], 'dif': '2000'}
{'pro_id': '292B', 'name': 'Network Topology', 'tags': ['graphs', 'implementation'], 'dif': '1200'}
{'pro_id': '292A', 'name': 'SMSC', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '291E', 'name': 'Tree-String Problem', 'tags': ['*special problem', 'dfs and similar', 'hashing', 'strings'], 'dif': '2400'}
{'pro_id': '291D', 'name': 'Parallel Programming', 'tags': ['*special problem', 'greedy'], 'dif': '2200'}
{'pro_id': '291C', 'name': 'Network Mask', 'tags': ['*special problem', 'bitmasks', 'brute force', 'implementation'], 'dif': '2100'}
{'pro_id': '291B', 'name': 'Command Line Arguments', 'tags': ['*special problem', 'implementation', 'strings'], 'dif': '2000'}
{'pro_id': '291A', 'name': 'Spyke Talks', 'tags': ['*special problem', 'implementation', 'sortings'], 'dif': '1900'}
{'pro_id': '290F', 'name': 'Greedy Petya', 'tags': ['*special problem', 'dfs and similar', 'graphs', 'greedy'], 'dif': '2800'}
{'pro_id': '290E', 'name': 'HQ', 'tags': ['*special problem', 'constructive algorithms'], 'dif': '2700'}
{'pro_id': '290D', 'name': 'Orange', 'tags': ['*special problem', 'implementation'], 'dif': '1600'}
{'pro_id': '290C', 'name': 'WTF?', 'tags': ['*special problem', 'graph matchings', 'implementation', 'trees'], 'dif': '1800'}
{'pro_id': '290B', 'name': 'QR code', 'tags': ['*special problem', 'implementation'], 'dif': '1500'}
{'pro_id': '290A', 'name': 'Mysterious strings', 'tags': ['*special problem', 'implementation'], 'dif': '1400'}
{'pro_id': '289B', 'name': 'Polo the Penguin and Matrix', 'tags': ['brute force', 'dp', 'implementation', 'sortings', 'ternary search'], 'dif': '1400'}
{'pro_id': '289A', 'name': 'Polo the Penguin and Segments', 'tags': ['brute force', 'implementation'], 'dif': '1100'}
{'pro_id': '288E', 'name': 'Polo the Penguin and Lucky Numbers', 'tags': ['dp', 'implementation', 'math'], 'dif': '2800'}
{'pro_id': '288D', 'name': 'Polo the Penguin and Trees', 'tags': ['combinatorics', 'dfs and similar', 'trees'], 'dif': '2300'}
{'pro_id': '288C', 'name': 'Polo the Penguin and XOR operation', 'tags': ['implementation', 'math'], 'dif': '1900'}
{'pro_id': '288B', 'name': 'Polo the Penguin and Houses', 'tags': ['combinatorics'], 'dif': '1700'}
{'pro_id': '288A', 'name': 'Polo the Penguin and Strings', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '287B', 'name': 'Pipeline', 'tags': ['binary search', 'math'], 'dif': '1700'}
{'pro_id': '287A', 'name': 'IQ Test', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '286E', 'name': "Ladies' Shop", 'tags': ['constructive algorithms', 'fft', 'math'], 'dif': '2600'}
{'pro_id': '286D', 'name': 'Tourists', 'tags': ['data structures', 'sortings'], 'dif': '2500'}
{'pro_id': '286C', 'name': 'Main Sequence', 'tags': ['greedy', 'implementation'], 'dif': '2200'}
{'pro_id': '286B', 'name': 'Shifting', 'tags': ['implementation'], 'dif': '2500'}
{'pro_id': '286A', 'name': 'Lucky Permutation', 'tags': ['constructive algorithms', 'math'], 'dif': '1600'}
{'pro_id': '285E', 'name': 'Positions in Permutations', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2600'}
{'pro_id': '285D', 'name': 'Permutation Sum', 'tags': ['bitmasks', 'combinatorics', 'dp', 'implementation', 'meet-in-the-middle'], 'dif': '1900'}
{'pro_id': '285C', 'name': 'Building Permutation', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1300'}
{'pro_id': '285B', 'name': 'Find Marble', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '285A', 'name': 'Slightly Decreasing Permutations', 'tags': ['greedy', 'implementation'], 'dif': '1100'}
{'pro_id': '284B', 'name': 'Cows and Poker Game', 'tags': ['brute force', 'implementation'], 'dif': '1100'}
{'pro_id': '284A', 'name': 'Cows and Primitive Roots', 'tags': ['implementation', 'math', 'number theory'], 'dif': '1400'}
{'pro_id': '283E', 'name': 'Cow Tennis Tournament', 'tags': ['combinatorics', 'data structures', 'math'], 'dif': '2700'}
{'pro_id': '283D', 'name': 'Cows and Cool Sequences', 'tags': ['dp', 'math', 'number theory'], 'dif': '2400'}
{'pro_id': '283C', 'name': 'Coin Troubles', 'tags': ['dp'], 'dif': '2300'}
{'pro_id': '283B', 'name': 'Cow Program', 'tags': ['dfs and similar', 'dp', 'graphs'], 'dif': '1900'}
{'pro_id': '283A', 'name': 'Cows and Sequence', 'tags': ['constructive algorithms', 'data structures', 'implementation'], 'dif': '1600'}
{'pro_id': '282E', 'name': 'Sausage Maximization', 'tags': ['bitmasks', 'data structures', 'trees'], 'dif': '2100'}
{'pro_id': '282D', 'name': 'Yet Another Number Game', 'tags': ['dp', 'games'], 'dif': '2100'}
{'pro_id': '282C', 'name': 'XOR and OR', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '1600'}
{'pro_id': '282B', 'name': 'Painting Eggs', 'tags': ['greedy', 'math'], 'dif': '1500'}
{'pro_id': '282A', 'name': 'Bit++', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '281B', 'name': 'Nearest Fraction', 'tags': ['brute force', 'implementation', 'two pointers'], 'dif': '1700'}
{'pro_id': '281A', 'name': 'Word Capitalization', 'tags': ['implementation', 'strings'], 'dif': '800'}
{'pro_id': '280E', 'name': 'Sequence Transformation', 'tags': ['data structures', 'dp', 'implementation', 'math'], 'dif': '3000'}
{'pro_id': '280D', 'name': 'k-Maximum Subsequence Sum', 'tags': ['data structures', 'flows', 'graphs', 'implementation'], 'dif': '2800'}
{'pro_id': '280C', 'name': 'Game on Tree', 'tags': ['implementation', 'math', 'probabilities', 'trees'], 'dif': '2400'}
{'pro_id': '280B', 'name': 'Maximum Xor Secondary', 'tags': ['data structures', 'implementation', 'two pointers'], 'dif': '2000'}
{'pro_id': '280A', 'name': 'Rectangle Puzzle', 'tags': ['geometry'], 'dif': '2000'}
{'pro_id': '279E', 'name': 'Beautiful Decomposition', 'tags': ['dp', 'games', 'greedy', 'number theory'], 'dif': '2100'}
{'pro_id': '279D', 'name': 'The Minimum Number of Variables', 'tags': ['bitmasks', 'dp'], 'dif': '2600'}
{'pro_id': '279C', 'name': 'Ladder', 'tags': ['dp', 'implementation', 'two pointers'], 'dif': '1700'}
{'pro_id': '279B', 'name': 'Books', 'tags': ['binary search', 'brute force', 'implementation', 'two pointers'], 'dif': '1400'}
{'pro_id': '279A', 'name': 'Point on Spiral', 'tags': ['brute force', 'geometry', 'implementation'], 'dif': '1400'}
{'pro_id': '278B', 'name': 'New Problem', 'tags': ['brute force', 'strings'], 'dif': '1500'}
{'pro_id': '278A', 'name': 'Circle Line', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '277E', 'name': 'Binary Tree on Plane', 'tags': ['flows', 'trees'], 'dif': '2400'}
{'pro_id': '277D', 'name': 'Google Code Jam', 'tags': ['dp', 'probabilities'], 'dif': '2700'}
{'pro_id': '277C', 'name': 'Game', 'tags': ['games', 'implementation'], 'dif': '2400'}
{'pro_id': '277B', 'name': 'Set of Points', 'tags': ['constructive algorithms', 'geometry'], 'dif': '2400'}
{'pro_id': '277A', 'name': 'Learning Languages', 'tags': ['dfs and similar', 'dsu'], 'dif': '1500'}
{'pro_id': '276E', 'name': 'Little Girl and Problem on Trees', 'tags': ['data structures', 'graphs', 'trees'], 'dif': '2300'}
{'pro_id': '276D', 'name': 'Little Girl and Maximum XOR', 'tags': ['bitmasks', 'dp', 'greedy', 'implementation', 'math'], 'dif': '1800'}
{'pro_id': '276C', 'name': 'Little Girl and Maximum Sum', 'tags': ['data structures', 'greedy', 'implementation', 'sortings'], 'dif': '1600'}
{'pro_id': '276B', 'name': 'Little Girl and Game', 'tags': ['games', 'greedy'], 'dif': '1400'}
{'pro_id': '276A', 'name': 'Lunch Rush', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '275B', 'name': 'Convex Shape', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1600'}
{'pro_id': '275A', 'name': 'Lights Out', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '274E', 'name': 'Mirror Room', 'tags': ['data structures', 'implementation'], 'dif': '3000'}
{'pro_id': '274D', 'name': 'Lovely Matrix', 'tags': ['dfs and similar', 'graphs', 'greedy', 'sortings'], 'dif': '2100'}
{'pro_id': '274C', 'name': 'The Last Hole!', 'tags': ['brute force', 'geometry'], 'dif': '2600'}
{'pro_id': '274B', 'name': 'Zero Tree', 'tags': ['dfs and similar', 'dp', 'greedy', 'trees'], 'dif': '2000'}
{'pro_id': '274A', 'name': 'k-Multiple Free Set', 'tags': ['binary search', 'greedy', 'sortings'], 'dif': '1600'}
{'pro_id': '273E', 'name': 'Dima and Game', 'tags': ['dp', 'games'], 'dif': '2600'}
{'pro_id': '273D', 'name': 'Dima and Figure', 'tags': ['dp'], 'dif': '2400'}
{'pro_id': '272E', 'name': 'Dima and Horses', 'tags': ['combinatorics', 'constructive algorithms', 'graphs'], 'dif': '2300'}
{'pro_id': '272D', 'name': 'Dima and Two Sequences', 'tags': ['combinatorics', 'math', 'sortings'], 'dif': '1800'}
{'pro_id': '272C', 'name': 'Dima and Staircase', 'tags': ['data structures', 'implementation'], 'dif': '1500'}
{'pro_id': '272B', 'name': 'Dima and Sequence', 'tags': ['implementation', 'math'], 'dif': '1400'}
{'pro_id': '272A', 'name': 'Dima and Friends', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '271E', 'name': 'Three Horses', 'tags': ['constructive algorithms', 'math', 'number theory'], 'dif': '2500'}
{'pro_id': '271D', 'name': 'Good Substrings', 'tags': ['data structures', 'strings'], 'dif': '1800'}
{'pro_id': '271C', 'name': 'Secret', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1500'}
{'pro_id': '271B', 'name': 'Prime Matrix', 'tags': ['binary search', 'brute force', 'math', 'number theory'], 'dif': '1400'}
{'pro_id': '271A', 'name': 'Beautiful Year', 'tags': ['brute force'], 'dif': '900'}
{'pro_id': '270B', 'name': 'Multithreading', 'tags': ['data structures', 'greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '270A', 'name': 'Fancy Fence', 'tags': ['geometry', 'implementation', 'math'], 'dif': '1200'}
{'pro_id': '269E', 'name': 'String Theory', 'tags': [], 'dif': '3100'}
{'pro_id': '269D', 'name': 'Maximum Waterfall', 'tags': ['data structures', 'dp', 'graphs', 'sortings'], 'dif': '2500'}
{'pro_id': '269C', 'name': 'Flawed Flow', 'tags': ['constructive algorithms', 'flows', 'graphs', 'greedy'], 'dif': '2500'}
{'pro_id': '269B', 'name': 'Greenhouse Effect', 'tags': ['dp'], 'dif': '2000'}
{'pro_id': '269A', 'name': 'Magical Boxes', 'tags': ['greedy', 'math'], 'dif': '1700'}
{'pro_id': '268E', 'name': 'Playlist', 'tags': ['math', 'probabilities', 'sortings'], 'dif': '2100'}
{'pro_id': '268D', 'name': 'Wall Bars', 'tags': ['dp'], 'dif': '2600'}
{'pro_id': '268C', 'name': 'Beautiful Sets of Points', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1500'}
{'pro_id': '268B', 'name': 'Buttons', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '268A', 'name': 'Games', 'tags': ['brute force'], 'dif': '800'}
{'pro_id': '267C', 'name': 'Berland Traffic', 'tags': ['math', 'matrices'], 'dif': '2300'}
{'pro_id': '267B', 'name': 'Dominoes', 'tags': ['dfs and similar', 'graphs'], 'dif': '1900'}
{'pro_id': '267A', 'name': 'Subtractions', 'tags': ['math', 'number theory'], 'dif': '1100'}
{'pro_id': '266E', 'name': 'More Queries to Array...', 'tags': ['data structures', 'math'], 'dif': '2600'}
{'pro_id': '266D', 'name': 'BerDonalds', 'tags': ['graphs', 'math', 'shortest paths'], 'dif': '2600'}
{'pro_id': '266C', 'name': 'Below the Diagonal', 'tags': ['constructive algorithms', 'greedy', 'math'], 'dif': '2000'}
{'pro_id': '266B', 'name': 'Queue at the School', 'tags': ['constructive algorithms', 'graph matchings', 'implementation', 'shortest paths'], 'dif': '900'}
{'pro_id': '266A', 'name': 'Stones on the Table', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '265B', 'name': 'Roadside Trees (Simplified Edition)', 'tags': ['greedy', 'implementation'], 'dif': '1000'}
{'pro_id': '265A', 'name': 'Colorful Stones (Simplified Edition)', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '264E', 'name': 'Roadside Trees', 'tags': ['data structures', 'dp'], 'dif': '2900'}
{'pro_id': '264D', 'name': 'Colorful Stones', 'tags': ['dp', 'two pointers'], 'dif': '2400'}
{'pro_id': '264C', 'name': 'Choosing Balls', 'tags': ['dp'], 'dif': '2200'}
{'pro_id': '264B', 'name': 'Good Sequences', 'tags': ['dp', 'number theory'], 'dif': '1700'}
{'pro_id': '264A', 'name': 'Escape from Stones', 'tags': ['constructive algorithms', 'data structures', 'implementation', 'two pointers'], 'dif': '1400'}
{'pro_id': '263E', 'name': 'Rhombus', 'tags': ['brute force', 'data structures', 'dp'], 'dif': '2600'}
{'pro_id': '263D', 'name': 'Cycle in Graph', 'tags': ['dfs and similar', 'graphs'], 'dif': '1800'}
{'pro_id': '263C', 'name': 'Circle of Numbers', 'tags': ['brute force', 'dfs and similar', 'implementation'], 'dif': '2000'}
{'pro_id': '263B', 'name': 'Squares', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1000'}
{'pro_id': '263A', 'name': 'Beautiful Matrix', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '262B', 'name': 'Roma and Changing Signs', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '262A', 'name': 'Roma and Lucky Numbers', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '261E', 'name': 'Maxim and Calculator', 'tags': ['brute force', 'dp', 'two pointers'], 'dif': '2800'}
{'pro_id': '261D', 'name': 'Maxim and Increasing Subsequence', 'tags': ['dp'], 'dif': '2500'}
{'pro_id': '261C', 'name': 'Maxim and Matrix', 'tags': ['constructive algorithms', 'dp', 'math'], 'dif': '2300'}
{'pro_id': '261B', 'name': 'Maxim and Restaurant', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2100'}
{'pro_id': '261A', 'name': 'Maxim and Discounts', 'tags': ['greedy', 'sortings'], 'dif': '1400'}
{'pro_id': '260E', 'name': 'Dividing Kingdom', 'tags': ['binary search', 'brute force', 'data structures'], 'dif': '2600'}
{'pro_id': '260D', 'name': 'Black and White Tree', 'tags': ['constructive algorithms', 'dsu', 'graphs', 'greedy', 'trees'], 'dif': '2200'}
{'pro_id': '260C', 'name': 'Balls and Boxes', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1700'}
{'pro_id': '260B', 'name': 'Ancient Prophesy', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '1600'}
{'pro_id': '260A', 'name': 'Adding Digits', 'tags': ['implementation', 'math'], 'dif': '1400'}
{'pro_id': '259B', 'name': 'Little Elephant and Magic Square', 'tags': ['brute force', 'implementation'], 'dif': '1100'}
{'pro_id': '259A', 'name': 'Little Elephant and Chess', 'tags': ['brute force', 'strings'], 'dif': '1100'}
{'pro_id': '258E', 'name': 'Little Elephant and Tree', 'tags': ['data structures', 'dfs and similar', 'trees'], 'dif': '2400'}
{'pro_id': '258D', 'name': 'Little Elephant and Broken Sorting', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2600'}
{'pro_id': '258C', 'name': 'Little Elephant and LCM', 'tags': ['binary search', 'combinatorics', 'dp', 'math'], 'dif': '2400'}
{'pro_id': '258B', 'name': 'Little Elephant and Elections', 'tags': ['brute force', 'combinatorics', 'dp'], 'dif': '2100'}
{'pro_id': '258A', 'name': 'Little Elephant and Bits', 'tags': ['greedy', 'math'], 'dif': '1200'}
{'pro_id': '257E', 'name': 'Greedy Elevator', 'tags': ['data structures', 'implementation'], 'dif': '2500'}
{'pro_id': '257D', 'name': 'Sum', 'tags': ['greedy', 'math'], 'dif': '1900'}
{'pro_id': '257C', 'name': 'View Angle', 'tags': ['brute force', 'geometry', 'math'], 'dif': '1700'}
{'pro_id': '257B', 'name': 'Playing Cubes', 'tags': ['games', 'greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '257A', 'name': 'Sockets', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '256E', 'name': 'Lucky Arrays', 'tags': ['data structures'], 'dif': '2400'}
{'pro_id': '256D', 'name': 'Liars and Serge', 'tags': ['dp'], 'dif': '2700'}
{'pro_id': '255E', 'name': 'Furlo and Rublo and Game', 'tags': ['games', 'implementation', 'math'], 'dif': '2200'}
{'pro_id': '255D', 'name': 'Mr. Bender and Square', 'tags': ['binary search', 'implementation', 'math'], 'dif': '1900'}
{'pro_id': '255C', 'name': 'Almost Arithmetical Progression', 'tags': ['brute force', 'dp'], 'dif': '1700'}
{'pro_id': '255B', 'name': 'Code Parsing', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '255A', 'name': "Greg's Workout", 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '254E', 'name': 'Dormitory', 'tags': ['dp', 'implementation'], 'dif': '2400'}
{'pro_id': '254D', 'name': 'Rats', 'tags': ['brute force', 'dfs and similar', 'graphs', 'implementation', 'shortest paths'], 'dif': '2600'}
{'pro_id': '254C', 'name': 'Anagram', 'tags': ['greedy', 'strings'], 'dif': '1800'}
{'pro_id': '254B', 'name': 'Jury Size', 'tags': ['brute force', 'implementation'], 'dif': '1500'}
{'pro_id': '254A', 'name': 'Cards with Numbers', 'tags': ['constructive algorithms', 'sortings'], 'dif': '1300'}
{'pro_id': '253E', 'name': 'Printer', 'tags': ['binary search', 'data structures', 'implementation', 'sortings'], 'dif': '2300'}
{'pro_id': '253D', 'name': 'Table with Letters - 2', 'tags': ['brute force', 'two pointers'], 'dif': '2000'}
{'pro_id': '253C', 'name': 'Text Editor', 'tags': ['data structures', 'dfs and similar', 'graphs', 'greedy', 'shortest paths'], 'dif': '1600'}
{'pro_id': '253B', 'name': 'Physics Practical', 'tags': ['binary search', 'dp', 'sortings', 'two pointers'], 'dif': '1400'}
{'pro_id': '253A', 'name': 'Boys and Girls', 'tags': ['greedy'], 'dif': '1200'}
{'pro_id': '252B', 'name': 'Unsorting Array', 'tags': ['brute force', 'sortings'], 'dif': '1700'}
{'pro_id': '252A', 'name': 'Little Xor', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '251E', 'name': 'Tree and Table', 'tags': ['dfs and similar', 'dp', 'implementation', 'trees'], 'dif': '3000'}
{'pro_id': '251D', 'name': 'Two Sets', 'tags': ['bitmasks', 'math'], 'dif': '2500'}
{'pro_id': '251C', 'name': 'Number Transformation', 'tags': ['dp', 'greedy', 'number theory'], 'dif': '2500'}
{'pro_id': '251B', 'name': 'Playing with Permutations', 'tags': ['implementation', 'math'], 'dif': '1900'}
{'pro_id': '251A', 'name': 'Points on Line', 'tags': ['binary search', 'combinatorics', 'two pointers'], 'dif': '1400'}
{'pro_id': '250E', 'name': 'Mad Joe', 'tags': ['brute force'], 'dif': '2400'}
{'pro_id': '250D', 'name': 'Building Bridge', 'tags': ['geometry', 'ternary search', 'two pointers'], 'dif': '2000'}
{'pro_id': '250C', 'name': 'Movie Critics', 'tags': ['greedy'], 'dif': '1600'}
{'pro_id': '250B', 'name': 'Restoring IPv6', 'tags': ['implementation', 'strings'], 'dif': '1500'}
{'pro_id': '250A', 'name': 'Paper Work', 'tags': ['greedy'], 'dif': '1100'}
{'pro_id': '249E', 'name': 'Endless Matrix', 'tags': ['math'], 'dif': '2500'}
{'pro_id': '249D', 'name': 'Donkey and Stars', 'tags': ['data structures', 'dp', 'geometry', 'math', 'sortings'], 'dif': '2600'}
{'pro_id': '248E', 'name': "Piglet's Birthday", 'tags': ['dp', 'math', 'probabilities'], 'dif': '2700'}
{'pro_id': '248D', 'name': 'Sweets for Everyone!', 'tags': ['binary search', 'greedy', 'implementation'], 'dif': '2400'}
{'pro_id': '248C', 'name': 'Robo-Footballer', 'tags': ['binary search', 'geometry'], 'dif': '1900'}
{'pro_id': '248B', 'name': 'Chilly Willy', 'tags': ['math', 'number theory'], 'dif': '1400'}
{'pro_id': '248A', 'name': 'Cupboards', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '246E', 'name': 'Blood Cousins Return', 'tags': ['binary search', 'data structures', 'dfs and similar', 'dp', 'sortings'], 'dif': '2300'}
{'pro_id': '246D', 'name': 'Colorful Graph', 'tags': ['brute force', 'dfs and similar', 'graphs'], 'dif': '1700'}
{'pro_id': '246C', 'name': 'Beauty Pageant', 'tags': ['brute force', 'constructive algorithms', 'greedy'], 'dif': '1600'}
{'pro_id': '246B', 'name': 'Increase and Decrease', 'tags': ['greedy', 'math'], 'dif': '1300'}
{'pro_id': '246A', 'name': 'Buggy Sorting', 'tags': ['constructive algorithms', 'greedy', 'sortings'], 'dif': '1000'}
{'pro_id': '245H', 'name': 'Queries for Number of Palindromes', 'tags': ['dp', 'hashing', 'strings'], 'dif': '1900'}
{'pro_id': '245G', 'name': 'Suggested Friends', 'tags': ['brute force', 'graphs'], 'dif': '2200'}
{'pro_id': '245F', 'name': 'Log Stream Analysis', 'tags': ['binary search', 'brute force', 'implementation', 'strings'], 'dif': '2000'}
{'pro_id': '245E', 'name': 'Mishap in Club', 'tags': ['greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '245D', 'name': 'Restoring Table', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1500'}
{'pro_id': '245C', 'name': 'Game with Coins', 'tags': ['greedy'], 'dif': '1700'}
{'pro_id': '245B', 'name': 'Internet Address', 'tags': ['implementation', 'strings'], 'dif': '1100'}
{'pro_id': '245A', 'name': 'System Administrator', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '244B', 'name': 'Undoubtedly Lucky Numbers', 'tags': ['bitmasks', 'brute force', 'dfs and similar'], 'dif': '1600'}
{'pro_id': '244A', 'name': 'Dividing Orange', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '243E', 'name': 'Matrix', 'tags': ['data structures'], 'dif': '2900'}
{'pro_id': '243D', 'name': 'Cubes', 'tags': ['data structures', 'dp', 'geometry', 'two pointers'], 'dif': '2700'}
{'pro_id': '243C', 'name': 'Colorado Potato Beetle', 'tags': ['dfs and similar', 'implementation'], 'dif': '2400'}
{'pro_id': '243B', 'name': 'Hydra', 'tags': ['graphs', 'sortings'], 'dif': '2100'}
{'pro_id': '243A', 'name': 'The Brand New Function', 'tags': ['bitmasks'], 'dif': '1900'}
{'pro_id': '242E', 'name': 'XOR on Segment', 'tags': ['bitmasks', 'data structures'], 'dif': '2000'}
{'pro_id': '242D', 'name': 'Dispute', 'tags': ['dfs and similar', 'graphs', 'greedy'], 'dif': '2100'}
{'pro_id': '242C', 'name': "King's Path", 'tags': ['dfs and similar', 'graphs', 'hashing', 'shortest paths'], 'dif': '1800'}
{'pro_id': '242B', 'name': 'Big Segment', 'tags': ['implementation', 'sortings'], 'dif': '1100'}
{'pro_id': '242A', 'name': 'Heads or Tails', 'tags': ['brute force', 'implementation'], 'dif': '1100'}
{'pro_id': '241G', 'name': 'Challenging Balloons', 'tags': ['constructive algorithms'], 'dif': '1900'}
{'pro_id': '241F', 'name': 'Race', 'tags': ['brute force', 'implementation'], 'dif': '2300'}
{'pro_id': '241E', 'name': 'Flights', 'tags': ['graphs', 'shortest paths'], 'dif': '2600'}
{'pro_id': '241D', 'name': 'Numbers', 'tags': [], 'dif': '2900'}
{'pro_id': '241C', 'name': 'Mirror Box', 'tags': ['geometry', 'implementation'], 'dif': '2000'}
{'pro_id': '241B', 'name': 'Friends', 'tags': ['binary search', 'bitmasks', 'data structures', 'math'], 'dif': '2700'}
{'pro_id': '241A', 'name': 'Old Peykan', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '240F', 'name': 'TorCoder', 'tags': ['data structures'], 'dif': '2600'}
{'pro_id': '240E', 'name': 'Road Repairs', 'tags': ['dfs and similar', 'graphs', 'greedy'], 'dif': '2800'}
{'pro_id': '239B', 'name': 'Easy Tape Programming', 'tags': ['brute force', 'implementation'], 'dif': '1500'}
{'pro_id': '239A', 'name': 'Two Bags of Potatoes', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1200'}
{'pro_id': '238E', 'name': 'Meeting Her', 'tags': ['dp', 'graphs', 'shortest paths'], 'dif': '2700'}
{'pro_id': '238D', 'name': 'Tape Programming', 'tags': ['data structures', 'implementation'], 'dif': '2700'}
{'pro_id': '238C', 'name': 'World Eater Brothers', 'tags': ['dfs and similar', 'dp', 'greedy', 'trees'], 'dif': '2200'}
{'pro_id': '238B', 'name': 'Boring Partition', 'tags': ['constructive algorithms'], 'dif': '2100'}
{'pro_id': '238A', 'name': 'Not Wool Sequences', 'tags': ['constructive algorithms', 'math'], 'dif': '1700'}
{'pro_id': '237E', 'name': 'Build String', 'tags': ['flows', 'graphs'], 'dif': '2100'}
{'pro_id': '237D', 'name': 'T-decomposition', 'tags': ['dfs and similar', 'graphs', 'greedy', 'trees'], 'dif': '2200'}
{'pro_id': '237C', 'name': 'Primes on Interval', 'tags': ['binary search', 'number theory', 'two pointers'], 'dif': '1600'}
{'pro_id': '237B', 'name': 'Young Table', 'tags': ['implementation', 'sortings'], 'dif': '1500'}
{'pro_id': '237A', 'name': 'Free Cash', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '236B', 'name': 'Easy Number Challenge', 'tags': ['implementation', 'number theory'], 'dif': '1300'}
{'pro_id': '236A', 'name': 'Boy or Girl', 'tags': ['brute force', 'implementation', 'strings'], 'dif': '800'}
{'pro_id': '235E', 'name': 'Number Challenge', 'tags': ['combinatorics', 'dp', 'implementation', 'math', 'number theory'], 'dif': '2600'}
{'pro_id': '235D', 'name': 'Graph Game', 'tags': ['graphs'], 'dif': '3000'}
{'pro_id': '235C', 'name': 'Cyclical Quest', 'tags': ['data structures', 'string suffix structures', 'strings'], 'dif': '2700'}
{'pro_id': '235B', 'name': "Let's Play Osu!", 'tags': ['dp', 'math', 'probabilities'], 'dif': '2100'}
{'pro_id': '235A', 'name': 'LCM Challenge', 'tags': ['number theory'], 'dif': '1600'}
{'pro_id': '234H', 'name': 'Merging Two Decks', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2100'}
{'pro_id': '234G', 'name': 'Practice', 'tags': ['constructive algorithms', 'divide and conquer', 'implementation'], 'dif': '1800'}
{'pro_id': '234F', 'name': 'Fence', 'tags': ['dp'], 'dif': '1900'}
{'pro_id': '234E', 'name': "Champions' League", 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '234D', 'name': 'Cinema', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '234C', 'name': 'Weather', 'tags': ['dp', 'implementation'], 'dif': '1300'}
{'pro_id': '234B', 'name': 'Reading', 'tags': ['sortings'], 'dif': '1000'}
{'pro_id': '234A', 'name': 'Lefthanders and Righthanders', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '233B', 'name': 'Non-square Equation', 'tags': ['binary search', 'brute force', 'math'], 'dif': '1500'}
{'pro_id': '233A', 'name': 'Perfect Permutation', 'tags': ['implementation', 'math'], 'dif': '800'}
{'pro_id': '232E', 'name': 'Quick Tortoise', 'tags': ['bitmasks', 'divide and conquer', 'dp'], 'dif': '2900'}
{'pro_id': '232D', 'name': 'Fence', 'tags': ['binary search', 'data structures', 'string suffix structures'], 'dif': '2700'}
{'pro_id': '232C', 'name': 'Doe Graphs', 'tags': ['constructive algorithms', 'divide and conquer', 'dp', 'graphs', 'shortest paths'], 'dif': '2700'}
{'pro_id': '232B', 'name': 'Table', 'tags': ['bitmasks', 'combinatorics', 'dp', 'math'], 'dif': '2200'}
{'pro_id': '232A', 'name': 'Cycles', 'tags': ['binary search', 'constructive algorithms', 'graphs', 'greedy'], 'dif': '1800'}
{'pro_id': '231E', 'name': 'Cactus', 'tags': ['data structures', 'dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '2400'}
{'pro_id': '231D', 'name': 'Magic Box', 'tags': ['brute force', 'geometry'], 'dif': '1600'}
{'pro_id': '231C', 'name': 'To Add or Not to Add', 'tags': ['binary search', 'sortings', 'two pointers'], 'dif': '1700'}
{'pro_id': '231B', 'name': 'Magic, Wizardry and Wonders', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1600'}
{'pro_id': '231A', 'name': 'Team', 'tags': ['brute force', 'greedy'], 'dif': '800'}
{'pro_id': '230B', 'name': 'T-primes', 'tags': ['binary search', 'implementation', 'math', 'number theory'], 'dif': '1300'}
{'pro_id': '230A', 'name': 'Dragons', 'tags': ['greedy', 'sortings'], 'dif': '1000'}
{'pro_id': '229E', 'name': 'Gifts', 'tags': ['combinatorics', 'dp', 'math', 'probabilities'], 'dif': '2500'}
{'pro_id': '229D', 'name': 'Towers', 'tags': ['dp', 'greedy', 'two pointers'], 'dif': '2000'}
{'pro_id': '229C', 'name': 'Triangles', 'tags': ['combinatorics', 'graphs', 'math'], 'dif': '2100'}
{'pro_id': '229B', 'name': 'Planets', 'tags': ['binary search', 'data structures', 'graphs', 'shortest paths'], 'dif': '1900'}
{'pro_id': '229A', 'name': 'Shifts', 'tags': ['brute force', 'two pointers'], 'dif': '1600'}
{'pro_id': '228E', 'name': 'The Road to Berland is Paved With Good Intentions', 'tags': ['2-sat', 'dfs and similar', 'dsu', 'graphs'], 'dif': '2000'}
{'pro_id': '228D', 'name': 'Zigzag', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '228C', 'name': 'Fractal Detector', 'tags': ['dp', 'hashing'], 'dif': '2200'}
{'pro_id': '228B', 'name': 'Two Tables', 'tags': ['brute force', 'implementation'], 'dif': '1400'}
{'pro_id': '228A', 'name': 'Is your horseshoe on the other hoof?', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '227B', 'name': 'Effective Approach', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '227A', 'name': 'Where do I Turn?', 'tags': ['geometry'], 'dif': '1400'}
{'pro_id': '226E', 'name': "Noble Knight's Path", 'tags': ['data structures', 'trees'], 'dif': '2900'}
{'pro_id': '226D', 'name': 'The table', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2100'}
{'pro_id': '226C', 'name': 'Anniversary', 'tags': ['data structures', 'implementation', 'math', 'matrices', 'number theory'], 'dif': '2100'}
{'pro_id': '226B', 'name': 'Naughty Stone Piles', 'tags': ['greedy'], 'dif': '2000'}
{'pro_id': '226A', 'name': 'Flying Saucer Segments', 'tags': ['math'], 'dif': '1500'}
{'pro_id': '225E', 'name': 'Unsolvable', 'tags': ['math', 'number theory'], 'dif': '2100'}
{'pro_id': '225D', 'name': 'Snake', 'tags': ['bitmasks', 'dfs and similar', 'graphs', 'implementation'], 'dif': '2300'}
{'pro_id': '225C', 'name': 'Barcode', 'tags': ['dp', 'matrices'], 'dif': '1800'}
{'pro_id': '225B', 'name': 'Well-known Numbers', 'tags': ['binary search', 'greedy', 'number theory'], 'dif': '1600'}
{'pro_id': '225A', 'name': 'Dice Tower', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1200'}
{'pro_id': '224B', 'name': 'Array', 'tags': ['bitmasks', 'implementation', 'two pointers'], 'dif': '1500'}
{'pro_id': '224A', 'name': 'Parallelepiped', 'tags': ['brute force', 'geometry', 'math'], 'dif': '1100'}
{'pro_id': '223E', 'name': 'Planar Graph', 'tags': ['flows', 'geometry', 'graphs'], 'dif': '3000'}
{'pro_id': '223D', 'name': 'Spider', 'tags': ['geometry', 'graphs'], 'dif': '3000'}
{'pro_id': '223C', 'name': 'Partial Sums', 'tags': ['combinatorics', 'math', 'number theory'], 'dif': '2200'}
{'pro_id': '223B', 'name': 'Two Strings', 'tags': ['data structures', 'dp', 'strings'], 'dif': '2000'}
{'pro_id': '223A', 'name': 'Bracket Sequence', 'tags': ['data structures', 'expression parsing', 'implementation'], 'dif': '1800'}
{'pro_id': '222E', 'name': 'Decoding Genome', 'tags': ['dp', 'matrices'], 'dif': '2000'}
{'pro_id': '222D', 'name': 'Olympiad', 'tags': ['binary search', 'greedy', 'sortings', 'two pointers'], 'dif': '1800'}
{'pro_id': '222C', 'name': 'Reducing Fractions', 'tags': ['implementation', 'math', 'number theory', 'sortings'], 'dif': '2000'}
{'pro_id': '222B', 'name': 'Cosmic Tables', 'tags': ['data structures', 'implementation'], 'dif': '1300'}
{'pro_id': '222A', 'name': 'Shooshuns and Sequence', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '221B', 'name': 'Little Elephant and Numbers', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '221A', 'name': 'Little Elephant and Function', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '220E', 'name': 'Little Elephant and Inversions', 'tags': ['data structures', 'two pointers'], 'dif': '2400'}
{'pro_id': '220D', 'name': 'Little Elephant and Triangle', 'tags': ['geometry', 'math'], 'dif': '2500'}
{'pro_id': '220C', 'name': 'Little Elephant and Shifts', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '220B', 'name': 'Little Elephant and Array', 'tags': ['constructive algorithms', 'data structures'], 'dif': '1900'}
{'pro_id': '220A', 'name': 'Little Elephant and Problem', 'tags': ['implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '219E', 'name': 'Parking Lot', 'tags': ['data structures'], 'dif': '2500'}
{'pro_id': '219D', 'name': 'Choosing Capital for Treeland', 'tags': ['dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '1900'}
{'pro_id': '219C', 'name': 'Color Stripe', 'tags': ['brute force', 'dp', 'greedy'], 'dif': '1600'}
{'pro_id': '219B', 'name': 'Special Offer! Super Price 999 Bourles!', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '219A', 'name': 'k-String', 'tags': ['implementation', 'strings'], 'dif': '1100'}
{'pro_id': '218B', 'name': 'Airport', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '218A', 'name': 'Mountain Scenery', 'tags': ['brute force', 'constructive algorithms', 'implementation'], 'dif': '1100'}
{'pro_id': '217E', 'name': 'Alien DNA', 'tags': ['data structures', 'dsu', 'trees'], 'dif': '2700'}
{'pro_id': '217D', 'name': "Bitonix' Patrol", 'tags': ['bitmasks', 'brute force', 'combinatorics', 'dfs and similar', 'math'], 'dif': '2800'}
{'pro_id': '217C', 'name': 'Formurosa', 'tags': ['divide and conquer', 'dp', 'expression parsing'], 'dif': '2500'}
{'pro_id': '217B', 'name': 'Blackboard Fibonacci', 'tags': ['brute force', 'math'], 'dif': '2200'}
{'pro_id': '217A', 'name': 'Ice Skating', 'tags': ['brute force', 'dfs and similar', 'dsu', 'graphs'], 'dif': '1400'}
{'pro_id': '216E', 'name': 'Martian Luck', 'tags': ['math', 'number theory'], 'dif': '2300'}
{'pro_id': '216D', 'name': "Spider's Web", 'tags': ['binary search', 'sortings', 'two pointers'], 'dif': '1800'}
{'pro_id': '216C', 'name': 'Hiring Staff', 'tags': ['greedy'], 'dif': '1800'}
{'pro_id': '216B', 'name': 'Forming Teams', 'tags': ['dfs and similar', 'implementation'], 'dif': '1700'}
{'pro_id': '216A', 'name': 'Tiling with Hexagons', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '215E', 'name': 'Periodical Numbers', 'tags': ['combinatorics', 'dp', 'number theory'], 'dif': '2600'}
{'pro_id': '215D', 'name': 'Hot Days', 'tags': ['greedy'], 'dif': '1800'}
{'pro_id': '215C', 'name': 'Crosses', 'tags': ['brute force', 'implementation'], 'dif': '2100'}
{'pro_id': '215B', 'name': 'Olympic Medal', 'tags': ['greedy', 'math'], 'dif': '1300'}
{'pro_id': '215A', 'name': 'Bicycle Chain', 'tags': ['brute force', 'implementation'], 'dif': '1000'}
{'pro_id': '214B', 'name': 'Hometask', 'tags': ['brute force', 'constructive algorithms', 'greedy', 'math'], 'dif': '1600'}
{'pro_id': '214A', 'name': 'System of Equations', 'tags': ['brute force'], 'dif': '1000'}
{'pro_id': '213E', 'name': 'Two Permutations', 'tags': ['data structures', 'hashing', 'strings'], 'dif': '2600'}
{'pro_id': '213D', 'name': 'Stars', 'tags': ['constructive algorithms', 'geometry'], 'dif': '2200'}
{'pro_id': '213C', 'name': 'Relay Race', 'tags': ['dp'], 'dif': '2100'}
{'pro_id': '213B', 'name': 'Numbers', 'tags': ['combinatorics', 'dp'], 'dif': '2200'}
{'pro_id': '213A', 'name': 'Game', 'tags': ['dfs and similar', 'greedy'], 'dif': '1800'}
{'pro_id': '212E', 'name': 'IT Restaurants', 'tags': ['dfs and similar', 'dp', 'trees'], 'dif': '1800'}
{'pro_id': '212D', 'name': 'Cutting a Fence', 'tags': ['binary search', 'data structures', 'dsu'], 'dif': '2400'}
{'pro_id': '212C', 'name': 'Cowboys', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2200'}
{'pro_id': '212B', 'name': 'Polycarpus is Looking for Good Substrings', 'tags': ['bitmasks', 'hashing', 'implementation'], 'dif': '2300'}
{'pro_id': '212A', 'name': 'Privatization', 'tags': ['flows', 'graphs'], 'dif': '2700'}
{'pro_id': '209C', 'name': 'Trails and Glades', 'tags': ['constructive algorithms', 'dsu', 'graphs', 'greedy'], 'dif': '2400'}
{'pro_id': '209B', 'name': 'Pixels', 'tags': ['constructive algorithms', 'math'], 'dif': '2200'}
{'pro_id': '209A', 'name': 'Multicolored Marbles', 'tags': ['dp', 'math'], 'dif': '1700'}
{'pro_id': '208E', 'name': 'Blood Cousins', 'tags': ['binary search', 'data structures', 'dfs and similar', 'trees'], 'dif': '2400'}
{'pro_id': '208D', 'name': 'Prizes, Prizes, more Prizes', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '208C', 'name': 'Police Station', 'tags': ['dp', 'graphs', 'shortest paths'], 'dif': '1900'}
{'pro_id': '208B', 'name': 'Solitaire', 'tags': ['dfs and similar', 'dp'], 'dif': '1800'}
{'pro_id': '208A', 'name': 'Dubstep', 'tags': ['strings'], 'dif': '1100'}
{'pro_id': '207D9', 'name': "The Beaver's Problem - 3", 'tags': [], 'dif': '2400'}
{'pro_id': '207D8', 'name': "The Beaver's Problem - 3", 'tags': [], 'dif': '2300'}
{'pro_id': '207D7', 'name': "The Beaver's Problem - 3", 'tags': [], 'dif': '2400'}
{'pro_id': '207D6', 'name': "The Beaver's Problem - 3", 'tags': [], 'dif': '2300'}
{'pro_id': '207D5', 'name': "The Beaver's Problem - 3", 'tags': [], 'dif': '2300'}
{'pro_id': '207D4', 'name': "The Beaver's Problem - 3", 'tags': [], 'dif': '2200'}
{'pro_id': '207D3', 'name': "The Beaver's Problem - 3", 'tags': [], 'dif': '2100'}
{'pro_id': '207D2', 'name': "The Beaver's Problem - 3", 'tags': [], 'dif': '2000'}
{'pro_id': '207D10', 'name': "The Beaver's Problem - 3", 'tags': [], 'dif': '2700'}
{'pro_id': '207D1', 'name': "The Beaver's Problem - 3", 'tags': [], 'dif': '1900'}
{'pro_id': '207C3', 'name': 'Game with Two Trees', 'tags': ['data structures'], 'dif': '2700'}
{'pro_id': '207C2', 'name': 'Game with Two Trees', 'tags': [], 'dif': '2500'}
{'pro_id': '207C1', 'name': 'Game with Two Trees', 'tags': [], 'dif': '2400'}
{'pro_id': '207B3', 'name': 'Military Trainings', 'tags': [], 'dif': '2200'}
{'pro_id': '207B2', 'name': 'Military Trainings', 'tags': [], 'dif': '1900'}
{'pro_id': '207B1', 'name': 'Military Trainings', 'tags': [], 'dif': '1700'}
{'pro_id': '207A3', 'name': "Beaver's Calculator 1.0", 'tags': ['greedy'], 'dif': '2000'}
{'pro_id': '207A2', 'name': "Beaver's Calculator 1.0", 'tags': ['greedy'], 'dif': '1800'}
{'pro_id': '207A1', 'name': "Beaver's Calculator 1.0", 'tags': ['greedy'], 'dif': '1600'}
{'pro_id': '205B', 'name': 'Little Elephant and Sorting', 'tags': ['brute force', 'greedy'], 'dif': '1400'}
{'pro_id': '205A', 'name': 'Little Elephant and Rozdil', 'tags': ['brute force', 'implementation'], 'dif': '1000'}
{'pro_id': '204E', 'name': 'Little Elephant and Strings', 'tags': ['data structures', 'implementation', 'string suffix structures', 'two pointers'], 'dif': '2800'}
{'pro_id': '204D', 'name': 'Little Elephant and Retro Strings', 'tags': ['dp'], 'dif': '2400'}
{'pro_id': '204C', 'name': 'Little Elephant and Furik and Rubik', 'tags': ['math', 'probabilities'], 'dif': '2200'}
{'pro_id': '204B', 'name': 'Little Elephant and Cards', 'tags': ['binary search', 'data structures'], 'dif': '1600'}
{'pro_id': '204A', 'name': 'Little Elephant and Interval', 'tags': ['binary search', 'combinatorics', 'dp'], 'dif': '1600'}
{'pro_id': '203E', 'name': 'Transportation', 'tags': ['greedy', 'sortings', 'two pointers'], 'dif': '2400'}
{'pro_id': '203D', 'name': 'Hit Ball', 'tags': ['geometry', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '203C', 'name': 'Photographer', 'tags': ['greedy', 'sortings'], 'dif': '1400'}
{'pro_id': '203B', 'name': 'Game on Paper', 'tags': ['brute force', 'implementation'], 'dif': '1400'}
{'pro_id': '203A', 'name': 'Two Problems', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '202B', 'name': 'Brand New Easy Problem', 'tags': ['brute force'], 'dif': '1700'}
{'pro_id': '202A', 'name': 'LLPS', 'tags': ['binary search', 'bitmasks', 'brute force', 'greedy', 'implementation', 'strings'], 'dif': '900'}
{'pro_id': '201E', 'name': 'Thoroughly Bureaucratic Organization', 'tags': ['binary search', 'combinatorics'], 'dif': '2600'}
{'pro_id': '201D', 'name': 'Brand New Problem', 'tags': ['bitmasks', 'brute force', 'dp'], 'dif': '2500'}
{'pro_id': '201C', 'name': 'Fragile Bridges', 'tags': ['dp'], 'dif': '2200'}
{'pro_id': '201B', 'name': 'Guess That Car!', 'tags': ['math', 'ternary search'], 'dif': '2000'}
{'pro_id': '201A', 'name': 'Clear Symmetry', 'tags': ['constructive algorithms', 'dp', 'math'], 'dif': '1700'}
{'pro_id': '200E', 'name': 'Tractor College', 'tags': ['implementation', 'math', 'number theory', 'ternary search'], 'dif': '2200'}
{'pro_id': '200D', 'name': 'Programming Language', 'tags': ['binary search', 'brute force', 'expression parsing', 'implementation'], 'dif': '1800'}
{'pro_id': '200C', 'name': 'Football Championship', 'tags': ['brute force', 'implementation'], 'dif': '1700'}
{'pro_id': '200B', 'name': 'Drinks', 'tags': ['implementation', 'math'], 'dif': '700'}
{'pro_id': '200A', 'name': 'Cinema', 'tags': ['brute force', 'data structures'], 'dif': '2600'}
{'pro_id': '199B', 'name': 'Special Olympics', 'tags': ['geometry'], 'dif': '1900'}
{'pro_id': '199A', 'name': "Hexadecimal's theorem", 'tags': ['brute force', 'constructive algorithms', 'implementation', 'number theory'], 'dif': '1000'}
{'pro_id': '198E', 'name': 'Gripping Story', 'tags': ['binary search', 'data structures', 'sortings'], 'dif': '2400'}
{'pro_id': '198D', 'name': 'Cube Snake', 'tags': ['constructive algorithms'], 'dif': '2700'}
{'pro_id': '198C', 'name': 'Delivering Carcinogen', 'tags': ['binary search', 'geometry'], 'dif': '2500'}
{'pro_id': '198B', 'name': 'Jumping on Walls', 'tags': ['shortest paths'], 'dif': '1700'}
{'pro_id': '198A', 'name': 'About Bacteria', 'tags': ['implementation', 'math'], 'dif': '1700'}
{'pro_id': '197B', 'name': 'Limit', 'tags': ['math'], 'dif': '1400'}
{'pro_id': '197A', 'name': 'Plate Game', 'tags': ['constructive algorithms', 'games', 'math'], 'dif': '1600'}
{'pro_id': '196E', 'name': 'Opening Portals', 'tags': ['dsu', 'graphs', 'shortest paths'], 'dif': '2500'}
{'pro_id': '196D', 'name': 'The Next Good String', 'tags': ['data structures', 'greedy', 'hashing', 'strings'], 'dif': '2600'}
{'pro_id': '196C', 'name': 'Paint Tree', 'tags': ['constructive algorithms', 'divide and conquer', 'geometry', 'sortings', 'trees'], 'dif': '2400'}
{'pro_id': '196B', 'name': 'Infinite Maze', 'tags': ['dfs and similar', 'graphs'], 'dif': '1900'}
{'pro_id': '196A', 'name': 'Lexicographically Maximum Subsequence', 'tags': ['greedy', 'strings'], 'dif': '1200'}
{'pro_id': '195E', 'name': 'Building Forest', 'tags': ['data structures', 'dsu', 'graphs'], 'dif': '2200'}
{'pro_id': '195D', 'name': 'Analyzing Polyline', 'tags': ['geometry', 'math', 'sortings'], 'dif': '1900'}
{'pro_id': '195C', 'name': 'Try and Catch', 'tags': ['expression parsing', 'implementation'], 'dif': '1700'}
{'pro_id': '195B', 'name': 'After Training', 'tags': ['data structures', 'implementation', 'math'], 'dif': '1300'}
{'pro_id': '195A', 'name': "Let's Watch Football", 'tags': ['binary search', 'brute force', 'math'], 'dif': '1100'}
{'pro_id': '194B', 'name': 'Square', 'tags': ['math'], 'dif': '1300'}
{'pro_id': '194A', 'name': 'Exams', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '193E', 'name': 'Fibonacci Number', 'tags': ['brute force', 'math', 'matrices'], 'dif': '2900'}
{'pro_id': '193D', 'name': 'Two Segments', 'tags': ['data structures'], 'dif': '2800'}
{'pro_id': '193C', 'name': 'Hamming Distance', 'tags': ['constructive algorithms', 'greedy', 'math', 'matrices'], 'dif': '2400'}
{'pro_id': '193B', 'name': 'Xor', 'tags': ['brute force'], 'dif': '2100'}
{'pro_id': '193A', 'name': 'Cutting Figure', 'tags': ['constructive algorithms', 'graphs', 'trees'], 'dif': '1700'}
{'pro_id': '192B', 'name': 'Walking in the Rain', 'tags': ['brute force', 'implementation'], 'dif': '1100'}
{'pro_id': '192A', 'name': 'Funky Numbers', 'tags': ['binary search', 'brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '191E', 'name': 'Thwarting Demonstrations', 'tags': ['binary search', 'data structures', 'trees'], 'dif': '2200'}
{'pro_id': '191D', 'name': 'Metro Scheme', 'tags': ['graphs', 'greedy'], 'dif': '2800'}
{'pro_id': '191C', 'name': 'Fools and Roads', 'tags': ['data structures', 'dfs and similar', 'trees'], 'dif': '2100'}
{'pro_id': '191B', 'name': 'Demonstration', 'tags': ['greedy'], 'dif': '1800'}
{'pro_id': '191A', 'name': 'Dynasty Puzzles', 'tags': ['dp'], 'dif': '1600'}
{'pro_id': '190E', 'name': 'Counter Attack', 'tags': ['data structures', 'dsu', 'graphs', 'hashing', 'sortings'], 'dif': '2300'}
{'pro_id': '190D', 'name': 'Non-Secret Cypher', 'tags': ['two pointers'], 'dif': '1900'}
{'pro_id': '190C', 'name': 'STL', 'tags': ['dfs and similar'], 'dif': '1700'}
{'pro_id': '190B', 'name': 'Surrounded', 'tags': ['geometry'], 'dif': '1600'}
{'pro_id': '190A', 'name': 'Vasya and the Bus', 'tags': ['greedy', 'math'], 'dif': '1300'}
{'pro_id': '189B', 'name': 'Counting Rhombi', 'tags': ['brute force', 'math'], 'dif': '1400'}
{'pro_id': '189A', 'name': 'Cut Ribbon', 'tags': ['brute force', 'dp'], 'dif': '1300'}
{'pro_id': '188H', 'name': 'Stack', 'tags': ['*special problem', 'expression parsing', 'implementation'], 'dif': '1900'}
{'pro_id': '188G', 'name': 'Array Sorting', 'tags': ['*special problem', 'implementation'], 'dif': '1700'}
{'pro_id': '188F', 'name': 'Binary Notation', 'tags': ['*special problem', 'implementation'], 'dif': '1600'}
{'pro_id': '188E', 'name': 'HQ9+', 'tags': ['*special problem', 'implementation'], 'dif': '1500'}
{'pro_id': '188D', 'name': 'Asterisks', 'tags': ['*special problem', 'implementation'], 'dif': '1400'}
{'pro_id': '188C', 'name': 'LCM', 'tags': ['*special problem', 'implementation', 'math'], 'dif': '1400'}
{'pro_id': '188B', 'name': 'A + Reverse B', 'tags': ['*special problem', 'implementation'], 'dif': '1400'}
{'pro_id': '188A', 'name': 'Hexagonal Numbers', 'tags': ['*special problem'], 'dif': '1200'}
{'pro_id': '187E', 'name': 'Heaven Tour', 'tags': ['data structures', 'greedy'], 'dif': '2800'}
{'pro_id': '187D', 'name': 'BRT Contract', 'tags': ['data structures'], 'dif': '2700'}
{'pro_id': '187C', 'name': 'Weak Memory', 'tags': ['dfs and similar', 'dsu'], 'dif': '2100'}
{'pro_id': '187B', 'name': 'AlgoRace', 'tags': ['dp', 'shortest paths'], 'dif': '1900'}
{'pro_id': '187A', 'name': 'Permutations', 'tags': ['greedy'], 'dif': '1600'}
{'pro_id': '186B', 'name': 'Growing Mushrooms', 'tags': ['greedy', 'sortings'], 'dif': '1200'}
{'pro_id': '186A', 'name': 'Comparing Strings', 'tags': ['implementation', 'strings'], 'dif': '1200'}
{'pro_id': '185E', 'name': 'Soap Time! - 2', 'tags': ['binary search', 'data structures'], 'dif': '2900'}
{'pro_id': '185D', 'name': 'Visit of the Great', 'tags': ['math', 'number theory'], 'dif': '2600'}
{'pro_id': '185C', 'name': 'Clever Fat Rat', 'tags': ['dp'], 'dif': '2300'}
{'pro_id': '185B', 'name': 'Mushroom Scientists', 'tags': ['math', 'ternary search'], 'dif': '1900'}
{'pro_id': '185A', 'name': 'Plant', 'tags': ['math'], 'dif': '1300'}
{'pro_id': '183E', 'name': 'Candy Shop', 'tags': ['greedy'], 'dif': '2700'}
{'pro_id': '183D', 'name': 'T-shirt', 'tags': ['dp', 'greedy', 'probabilities'], 'dif': '2800'}
{'pro_id': '183C', 'name': 'Cyclic Coloring', 'tags': ['dfs and similar'], 'dif': '2200'}
{'pro_id': '183B', 'name': 'Zoo', 'tags': ['brute force', 'geometry'], 'dif': '1700'}
{'pro_id': '183A', 'name': 'Headquarters', 'tags': ['constructive algorithms', 'math'], 'dif': '1900'}
{'pro_id': '182E', 'name': 'Wooden Fence', 'tags': ['dp'], 'dif': '1800'}
{'pro_id': '182D', 'name': 'Common Divisors', 'tags': ['brute force', 'hashing', 'implementation', 'math', 'strings'], 'dif': '1400'}
{'pro_id': '182C', 'name': 'Optimal Sum', 'tags': ['data structures', 'greedy'], 'dif': '2300'}
{'pro_id': '182B', 'name': "Vasya's Calendar", 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '182A', 'name': 'Battlefield', 'tags': ['geometry', 'graphs', 'implementation', 'shortest paths'], 'dif': '2300'}
{'pro_id': '181B', 'name': 'Number of Triplets', 'tags': ['binary search', 'brute force'], 'dif': '1300'}
{'pro_id': '181A', 'name': 'Series of Crimes', 'tags': ['brute force', 'geometry', 'implementation'], 'dif': '800'}
{'pro_id': '180F', 'name': 'Mathematical Analysis Rocks!', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '1300'}
{'pro_id': '180E', 'name': 'Cubes', 'tags': ['binary search', 'dp', 'two pointers'], 'dif': '1700'}
{'pro_id': '180D', 'name': 'Name', 'tags': ['greedy', 'strings'], 'dif': '2000'}
{'pro_id': '180C', 'name': 'Letter', 'tags': ['dp'], 'dif': '1400'}
{'pro_id': '180B', 'name': 'Divisibility Rules', 'tags': ['math', 'number theory'], 'dif': '2300'}
{'pro_id': '180A', 'name': 'Defragmentation', 'tags': ['implementation'], 'dif': '1800'}
{'pro_id': '178F3', 'name': 'Representative Sampling', 'tags': [], 'dif': '2600'}
{'pro_id': '178F2', 'name': 'Representative Sampling', 'tags': ['dp', 'sortings', 'strings'], 'dif': '2400'}
{'pro_id': '178F1', 'name': 'Representative Sampling', 'tags': [], 'dif': '2100'}
{'pro_id': '178E3', 'name': "The Beaver's Problem - 2", 'tags': [], 'dif': '2400'}
{'pro_id': '178E2', 'name': "The Beaver's Problem - 2", 'tags': [], 'dif': '2200'}
{'pro_id': '178E1', 'name': "The Beaver's Problem - 2", 'tags': [], 'dif': '2100'}
{'pro_id': '178D3', 'name': 'Magic Squares', 'tags': [], 'dif': '2200'}
{'pro_id': '178D2', 'name': 'Magic Squares', 'tags': [], 'dif': '2200'}
{'pro_id': '178D1', 'name': 'Magic Squares', 'tags': [], 'dif': '1500'}
{'pro_id': '178C3', 'name': 'Smart Beaver and Resolving Collisions', 'tags': [], 'dif': '2000'}
{'pro_id': '178C2', 'name': 'Smart Beaver and Resolving Collisions', 'tags': [], 'dif': '2000'}
{'pro_id': '178C1', 'name': 'Smart Beaver and Resolving Collisions', 'tags': [], 'dif': '1600'}
{'pro_id': '178B3', 'name': 'Greedy Merchants', 'tags': [], 'dif': '1900'}
{'pro_id': '178B2', 'name': 'Greedy Merchants', 'tags': [], 'dif': '1700'}
{'pro_id': '178B1', 'name': 'Greedy Merchants', 'tags': [], 'dif': '1600'}
{'pro_id': '178A3', 'name': 'Educational Game', 'tags': ['greedy'], 'dif': '1200'}
{'pro_id': '178A2', 'name': 'Educational Game', 'tags': ['greedy'], 'dif': '1000'}
{'pro_id': '178A1', 'name': 'Educational Game', 'tags': [], 'dif': '1000'}
{'pro_id': '177G2', 'name': 'Fibonacci Strings', 'tags': ['matrices', 'strings'], 'dif': '2400'}
{'pro_id': '177G1', 'name': 'Fibonacci Strings', 'tags': ['strings'], 'dif': '2300'}
{'pro_id': '177F2', 'name': 'Script Generation', 'tags': [], 'dif': '2300'}
{'pro_id': '177F1', 'name': 'Script Generation', 'tags': [], 'dif': '1800'}
{'pro_id': '177E2', 'name': 'Space Voyage', 'tags': ['binary search'], 'dif': '1900'}
{'pro_id': '177E1', 'name': 'Space Voyage', 'tags': ['binary search'], 'dif': '1700'}
{'pro_id': '177D2', 'name': 'Encrypting Messages', 'tags': ['data structures'], 'dif': '1500'}
{'pro_id': '177D1', 'name': 'Encrypting Messages', 'tags': ['brute force'], 'dif': '1200'}
{'pro_id': '177C2', 'name': 'Party', 'tags': ['brute force', 'dfs and similar', 'dsu', 'graphs'], 'dif': '1500'}
{'pro_id': '177C1', 'name': 'Party', 'tags': ['dfs and similar', 'dsu', 'graphs'], 'dif': '1500'}
{'pro_id': '177B2', 'name': 'Rectangular Game', 'tags': ['number theory'], 'dif': '1200'}
{'pro_id': '177B1', 'name': 'Rectangular Game', 'tags': ['number theory'], 'dif': '1000'}
{'pro_id': '177A2', 'name': 'Good Matrix Elements', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '177A1', 'name': 'Good Matrix Elements', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '176E', 'name': 'Archaeology', 'tags': ['data structures', 'dfs and similar', 'trees'], 'dif': '3000'}
{'pro_id': '176D', 'name': 'Hyper String', 'tags': ['dp'], 'dif': '2500'}
{'pro_id': '176C', 'name': 'Playing with Superglue', 'tags': ['combinatorics', 'constructive algorithms'], 'dif': '2000'}
{'pro_id': '176B', 'name': 'Word Cut', 'tags': ['dp'], 'dif': '1900'}
{'pro_id': '176A', 'name': 'Trading Business', 'tags': ['greedy', 'sortings'], 'dif': '1500'}
{'pro_id': '175F', 'name': 'Gnomes of Might and Magic', 'tags': ['data structures', 'graphs', 'implementation', 'shortest paths'], 'dif': '3000'}
{'pro_id': '175E', 'name': 'Power Defence', 'tags': ['brute force', 'dp', 'geometry', 'greedy'], 'dif': '2500'}
{'pro_id': '175D', 'name': 'Plane of Tanks: Duel', 'tags': ['brute force', 'dp', 'math', 'probabilities'], 'dif': '2400'}
{'pro_id': '175C', 'name': 'Geometry Horse', 'tags': ['greedy', 'implementation', 'sortings', 'two pointers'], 'dif': '1600'}
{'pro_id': '175B', 'name': 'Plane of Tanks: Pro', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '175A', 'name': 'Robot Bicorn Attack', 'tags': ['brute force', 'implementation'], 'dif': '1400'}
{'pro_id': '174C', 'name': 'Range Increments', 'tags': ['data structures', 'greedy'], 'dif': '1800'}
{'pro_id': '174B', 'name': 'File List', 'tags': ['dp', 'greedy', 'implementation'], 'dif': '1500'}
{'pro_id': '174A', 'name': 'Problem About Equation', 'tags': ['math'], 'dif': '1200'}
{'pro_id': '173E', 'name': 'Camping Groups', 'tags': ['data structures', 'sortings'], 'dif': '2600'}
{'pro_id': '173D', 'name': 'Deputies', 'tags': ['constructive algorithms', 'graphs', 'greedy', 'implementation'], 'dif': '2400'}
{'pro_id': '173C', 'name': 'Spiral Maximum', 'tags': ['brute force', 'dp'], 'dif': '1800'}
{'pro_id': '173B', 'name': 'Chamber of Secrets', 'tags': ['dfs and similar', 'shortest paths'], 'dif': '1800'}
{'pro_id': '173A', 'name': 'Rock-Paper-Scissors', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '172E', 'name': 'BHTML+BCSS', 'tags': ['*special problem', 'dfs and similar', 'expression parsing'], 'dif': '2500'}
{'pro_id': '172D', 'name': 'Calendar Reform', 'tags': ['*special problem', 'number theory'], 'dif': '1900'}
{'pro_id': '172C', 'name': 'Bus', 'tags': ['*special problem', 'implementation', 'sortings'], 'dif': '1900'}
{'pro_id': '172B', 'name': 'Pseudorandom Sequence Period', 'tags': ['*special problem', 'implementation', 'number theory'], 'dif': '1800'}
{'pro_id': '172A', 'name': 'Phone Code', 'tags': ['*special problem', 'brute force', 'implementation'], 'dif': '1600'}
{'pro_id': '171H', 'name': 'A polyline', 'tags': ['*special problem', 'implementation'], 'dif': '2200'}
{'pro_id': '171G', 'name': 'Mysterious numbers - 2', 'tags': ['*special problem'], 'dif': '2000'}
{'pro_id': '171F', 'name': 'ucyhf', 'tags': ['*special problem', 'brute force', 'implementation', 'number theory'], 'dif': '1700'}
{'pro_id': '171E', 'name': 'MYSTERIOUS LANGUAGE', 'tags': ['*special problem'], 'dif': '2000'}
{'pro_id': '171D', 'name': 'Broken checker', 'tags': ['*special problem', 'brute force'], 'dif': '1400'}
{'pro_id': '171C', 'name': 'A Piece of Cake', 'tags': ['*special problem', 'implementation'], 'dif': '2100'}
{'pro_id': '171B', 'name': 'Star', 'tags': ['*special problem', 'combinatorics'], 'dif': '1300'}
{'pro_id': '171A', 'name': 'Mysterious numbers - 1', 'tags': ['*special problem', 'constructive algorithms'], 'dif': '1200'}
{'pro_id': '169B', 'name': 'Replacing Digits', 'tags': ['greedy'], 'dif': '1200'}
{'pro_id': '169A', 'name': 'Chores', 'tags': ['sortings'], 'dif': '900'}
{'pro_id': '168B', 'name': 'Wizards and Minimal Spell', 'tags': ['implementation', 'strings'], 'dif': '1700'}
{'pro_id': '168A', 'name': 'Wizards and Demonstration', 'tags': ['implementation', 'math'], 'dif': '1000'}
{'pro_id': '167E', 'name': 'Wizards and Bets', 'tags': ['dfs and similar', 'graphs', 'math', 'matrices'], 'dif': '2900'}
{'pro_id': '167D', 'name': 'Wizards and Roads', 'tags': ['data structures', 'divide and conquer', 'graph matchings', 'graphs', 'greedy'], 'dif': '2900'}
{'pro_id': '167C', 'name': 'Wizards and Numbers', 'tags': ['games', 'math'], 'dif': '2400'}
{'pro_id': '167B', 'name': 'Wizards and Huge Prize', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2000'}
{'pro_id': '167A', 'name': 'Wizards and Trolleybuses', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '166E', 'name': 'Tetrahedron', 'tags': ['dp', 'math', 'matrices'], 'dif': '1500'}
{'pro_id': '166D', 'name': 'Shoe Store', 'tags': ['dp', 'graph matchings', 'greedy', 'sortings', 'two pointers'], 'dif': '2400'}
{'pro_id': '166C', 'name': 'Median', 'tags': ['greedy', 'math', 'sortings'], 'dif': '1500'}
{'pro_id': '166B', 'name': 'Polygons', 'tags': ['geometry', 'sortings'], 'dif': '2000'}
{'pro_id': '166A', 'name': 'Rank List', 'tags': ['binary search', 'implementation', 'sortings'], 'dif': '1200'}
{'pro_id': '165E', 'name': 'Compatible Numbers', 'tags': ['bitmasks', 'brute force', 'dfs and similar', 'dp'], 'dif': '2100'}
{'pro_id': '165D', 'name': 'Beard Graph', 'tags': ['data structures', 'dsu', 'trees'], 'dif': '2200'}
{'pro_id': '165C', 'name': 'Another Problem on Strings', 'tags': ['binary search', 'brute force', 'dp', 'math', 'strings', 'two pointers'], 'dif': '1600'}
{'pro_id': '165B', 'name': 'Burning Midnight Oil', 'tags': ['binary search', 'implementation'], 'dif': '1500'}
{'pro_id': '165A', 'name': 'Supercentral Point', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '164E', 'name': 'Polycarpus and Tasks', 'tags': [], 'dif': '3100'}
{'pro_id': '164D', 'name': 'Minimum Diameter', 'tags': ['binary search', 'brute force'], 'dif': '2900'}
{'pro_id': '164C', 'name': 'Machine Programming', 'tags': ['flows', 'graphs'], 'dif': '2400'}
{'pro_id': '164B', 'name': 'Ancient Berland Hieroglyphs', 'tags': ['two pointers'], 'dif': '2300'}
{'pro_id': '164A', 'name': 'Variable, or There and Back Again', 'tags': ['dfs and similar', 'graphs'], 'dif': '2000'}
{'pro_id': '163E', 'name': 'e-Government', 'tags': ['data structures', 'dfs and similar', 'dp', 'strings', 'trees'], 'dif': '2800'}
{'pro_id': '163D', 'name': 'Large Refrigerator', 'tags': ['brute force'], 'dif': '2800'}
{'pro_id': '163C', 'name': 'Conveyor', 'tags': ['sortings', 'two pointers'], 'dif': '2200'}
{'pro_id': '163B', 'name': 'Lemmings', 'tags': ['binary search'], 'dif': '2100'}
{'pro_id': '163A', 'name': 'Substring and Subsequence', 'tags': ['dp'], 'dif': '1900'}
{'pro_id': '162J', 'name': 'Brackets', 'tags': ['*special problem'], 'dif': '2400'}
{'pro_id': '162I', 'name': 'Truncatable primes', 'tags': ['*special problem'], 'dif': '2500'}
{'pro_id': '162H', 'name': 'Alternating case', 'tags': ['*special problem'], 'dif': '2300'}
{'pro_id': '162G', 'name': 'Non-decimal sum', 'tags': ['*special problem'], 'dif': '2500'}
{'pro_id': '162F', 'name': 'Factorial zeros', 'tags': ['*special problem'], 'dif': '2100'}
{'pro_id': '162E', 'name': 'HQ9+', 'tags': ['*special problem'], 'dif': '2000'}
{'pro_id': '162D', 'name': 'Remove digits', 'tags': ['*special problem'], 'dif': '1900'}
{'pro_id': '162C', 'name': 'Prime factorization', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '162B', 'name': 'Binary notation', 'tags': ['*special problem'], 'dif': '1800'}
{'pro_id': '162A', 'name': 'Pentagonal numbers', 'tags': ['*special problem', 'implementation'], 'dif': '1400'}
{'pro_id': '161E', 'name': 'Polycarpus the Safecracker', 'tags': ['brute force', 'dp'], 'dif': '2400'}
{'pro_id': '161D', 'name': 'Distance in Tree', 'tags': ['dfs and similar', 'dp', 'trees'], 'dif': '1800'}
{'pro_id': '161C', 'name': 'Abracadabra', 'tags': ['divide and conquer'], 'dif': '2400'}
{'pro_id': '161B', 'name': 'Discounts', 'tags': ['constructive algorithms', 'greedy', 'sortings'], 'dif': '1700'}
{'pro_id': '161A', 'name': "Dress'em in Vests!", 'tags': ['binary search', 'brute force', 'greedy', 'two pointers'], 'dif': '1300'}
{'pro_id': '160E', 'name': 'Buses and People', 'tags': ['binary search', 'data structures', 'sortings'], 'dif': '2400'}
{'pro_id': '160D', 'name': 'Edges in MST', 'tags': ['dfs and similar', 'dsu', 'graphs', 'sortings'], 'dif': '2500'}
{'pro_id': '160C', 'name': 'Find Pair', 'tags': ['implementation', 'math', 'sortings'], 'dif': '1700'}
{'pro_id': '160B', 'name': 'Unlucky Ticket', 'tags': ['greedy', 'sortings'], 'dif': '1200'}
{'pro_id': '160A', 'name': 'Twins', 'tags': ['greedy', 'sortings'], 'dif': '1000'}
{'pro_id': '159E', 'name': 'Zebra Tower', 'tags': ['*special problem', 'data structures', 'greedy', 'sortings'], 'dif': '2100'}
{'pro_id': '159D', 'name': 'Palindrome pairs', 'tags': ['*special problem', 'brute force', 'dp', 'strings'], 'dif': '2000'}
{'pro_id': '159C', 'name': 'String Manipulation 1.0', 'tags': ['*special problem', 'binary search', 'brute force', 'data structures', 'strings'], 'dif': '2000'}
{'pro_id': '159B', 'name': 'Matchmaker', 'tags': ['*special problem', 'greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '159A', 'name': 'Friends or Not', 'tags': ['*special problem', 'greedy', 'implementation'], 'dif': '1700'}
{'pro_id': '158E', 'name': 'Phone Talks', 'tags': ['*special problem', 'dp', 'sortings'], 'dif': '2300'}
{'pro_id': '158D', 'name': 'Ice Sculptures', 'tags': ['*special problem', 'brute force', 'number theory'], 'dif': '1900'}
{'pro_id': '158C', 'name': 'Cd and pwd commands', 'tags': ['*special problem', 'data structures', 'implementation'], 'dif': '1900'}
{'pro_id': '158B', 'name': 'Taxi', 'tags': ['*special problem', 'greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '158A', 'name': 'Next Round', 'tags': ['*special problem', 'implementation'], 'dif': '1800'}
{'pro_id': '157B', 'name': 'Trace', 'tags': ['geometry', 'sortings'], 'dif': '1100'}
{'pro_id': '157A', 'name': 'Game Outcome', 'tags': ['brute force'], 'dif': '1100'}
{'pro_id': '156E', 'name': "Mrs. Hudson's Pancakes", 'tags': ['brute force', 'dp'], 'dif': '2900'}
{'pro_id': '156D', 'name': 'Clues', 'tags': ['combinatorics', 'graphs'], 'dif': '2400'}
{'pro_id': '156C', 'name': 'Cipher', 'tags': ['combinatorics', 'dp'], 'dif': '2100'}
{'pro_id': '156B', 'name': 'Suspects', 'tags': ['constructive algorithms', 'data structures', 'implementation'], 'dif': '1800'}
{'pro_id': '156A', 'name': 'Message', 'tags': ['brute force'], 'dif': '1700'}
{'pro_id': '155B', 'name': 'Combination', 'tags': ['greedy', 'sortings'], 'dif': '1200'}
{'pro_id': '155A', 'name': 'I_love_\\%username\\%', 'tags': ['brute force'], 'dif': '900'}
{'pro_id': '154E', 'name': 'Martian Colony', 'tags': ['geometry'], 'dif': '2900'}
{'pro_id': '154D', 'name': 'Flatland Fencing', 'tags': ['games', 'math'], 'dif': '2300'}
{'pro_id': '154C', 'name': 'Double Profiles', 'tags': ['graphs', 'hashing', 'sortings'], 'dif': '2300'}
{'pro_id': '154B', 'name': 'Colliders', 'tags': ['math', 'number theory'], 'dif': '1700'}
{'pro_id': '154A', 'name': 'Hometask', 'tags': ['greedy'], 'dif': '1700'}
{'pro_id': '153E', 'name': 'Euclidean Distance', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '153D', 'name': 'Date Change', 'tags': ['*special problem'], 'dif': '2300'}
{'pro_id': '153C', 'name': 'Caesar Cipher', 'tags': ['*special problem'], 'dif': '2200'}
{'pro_id': '153B', 'name': 'Binary notation', 'tags': ['*special problem'], 'dif': '1800'}
{'pro_id': '153A', 'name': 'A + B', 'tags': ['*special problem'], 'dif': '1600'}
{'pro_id': '152E', 'name': 'Garden', 'tags': ['bitmasks', 'dp', 'graphs', 'trees'], 'dif': '2400'}
{'pro_id': '152D', 'name': 'Frames', 'tags': ['brute force'], 'dif': '2500'}
{'pro_id': '152C', 'name': 'Pocket Book', 'tags': ['combinatorics'], 'dif': '1500'}
{'pro_id': '152B', 'name': 'Steps', 'tags': ['binary search', 'implementation'], 'dif': '1400'}
{'pro_id': '152A', 'name': 'Marks', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '151B', 'name': 'Phone Numbers', 'tags': ['implementation', 'strings'], 'dif': '1300'}
{'pro_id': '151A', 'name': 'Soft Drinking', 'tags': ['implementation', 'math'], 'dif': '900'}
{'pro_id': '150E', 'name': 'Freezing with Style', 'tags': ['binary search', 'data structures', 'divide and conquer', 'trees'], 'dif': '3000'}
{'pro_id': '150D', 'name': 'Mission Impassable', 'tags': ['dp', 'strings'], 'dif': '2600'}
{'pro_id': '150C', 'name': 'Smart Cheater', 'tags': ['data structures', 'math', 'probabilities'], 'dif': '2300'}
{'pro_id': '150B', 'name': 'Quantity of Strings', 'tags': ['combinatorics', 'dfs and similar', 'graphs', 'math'], 'dif': '1800'}
{'pro_id': '150A', 'name': 'Win or Freeze', 'tags': ['games', 'math', 'number theory'], 'dif': '1600'}
{'pro_id': '149E', 'name': 'Martian Strings', 'tags': ['string suffix structures', 'strings'], 'dif': '2200'}
{'pro_id': '149D', 'name': 'Coloring Brackets', 'tags': ['dp'], 'dif': '2200'}
{'pro_id': '149C', 'name': 'Division into Teams', 'tags': ['greedy', 'math', 'sortings'], 'dif': '1500'}
{'pro_id': '149B', 'name': 'Martian Clock', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '149A', 'name': 'Business trip', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1100'}
{'pro_id': '148E', 'name': 'Porcelain', 'tags': ['dp'], 'dif': '2000'}
{'pro_id': '148D', 'name': 'Bag of mice', 'tags': ['dp', 'games', 'math', 'probabilities'], 'dif': '1900'}
{'pro_id': '148C', 'name': 'Terse princess', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1700'}
{'pro_id': '148B', 'name': 'Escape', 'tags': ['implementation', 'math'], 'dif': '1500'}
{'pro_id': '148A', 'name': 'Insomnia cure', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '900'}
{'pro_id': '147B', 'name': 'Smile House', 'tags': ['binary search', 'graphs', 'matrices'], 'dif': '2300'}
{'pro_id': '147A', 'name': 'Punctuation', 'tags': ['implementation', 'strings'], 'dif': '1300'}
{'pro_id': '146B', 'name': 'Lucky Mask', 'tags': ['brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '146A', 'name': 'Lucky Ticket', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '145E', 'name': 'Lucky Queries', 'tags': ['data structures'], 'dif': '2400'}
{'pro_id': '145D', 'name': 'Lucky Pair', 'tags': ['combinatorics', 'data structures', 'implementation'], 'dif': '2800'}
{'pro_id': '145C', 'name': 'Lucky Subsequence', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2200'}
{'pro_id': '145B', 'name': 'Lucky Number 2', 'tags': ['constructive algorithms'], 'dif': '1800'}
{'pro_id': '145A', 'name': 'Lucky Conversion', 'tags': ['greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '144E', 'name': 'Competition', 'tags': ['data structures', 'greedy'], 'dif': '2300'}
{'pro_id': '144D', 'name': 'Missile Silos', 'tags': ['data structures', 'dfs and similar', 'graphs', 'shortest paths'], 'dif': '1900'}
{'pro_id': '144C', 'name': 'Anagram Search', 'tags': ['implementation', 'strings'], 'dif': '1500'}
{'pro_id': '144B', 'name': 'Meeting', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '144A', 'name': 'Arrival of the General', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '143B', 'name': 'Help Kingdom of Far Far Away 2', 'tags': ['implementation', 'strings'], 'dif': '1200'}
{'pro_id': '143A', 'name': 'Help Vasilisa the Wise 2', 'tags': ['brute force', 'math'], 'dif': '1200'}
{'pro_id': '142E', 'name': 'Help Greg the Dwarf 2', 'tags': ['geometry'], 'dif': '3000'}
{'pro_id': '142D', 'name': 'Help Shrek and Donkey 2', 'tags': ['games'], 'dif': '2600'}
{'pro_id': '142C', 'name': 'Help Caretaker', 'tags': ['brute force', 'dp'], 'dif': '2300'}
{'pro_id': '142B', 'name': 'Help General', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '1900'}
{'pro_id': '142A', 'name': 'Help Farmer', 'tags': ['brute force', 'math'], 'dif': '1700'}
{'pro_id': '141E', 'name': 'Clearing Up', 'tags': ['constructive algorithms', 'dp', 'dsu', 'graphs'], 'dif': '2600'}
{'pro_id': '141D', 'name': 'Take-off Ramps', 'tags': ['graphs', 'shortest paths'], 'dif': '2400'}
{'pro_id': '141C', 'name': 'Queue', 'tags': ['constructive algorithms', 'greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '141B', 'name': 'Hopscotch', 'tags': ['geometry', 'math'], 'dif': '1400'}
{'pro_id': '141A', 'name': 'Amusing Joke', 'tags': ['implementation', 'sortings', 'strings'], 'dif': '900'}
{'pro_id': '140F', 'name': 'New Year Snowflake', 'tags': ['geometry', 'sortings'], 'dif': '2600'}
{'pro_id': '140E', 'name': 'New Year Garland', 'tags': ['combinatorics', 'dp'], 'dif': '2600'}
{'pro_id': '140D', 'name': 'New Year Contest', 'tags': ['greedy', 'sortings'], 'dif': '1800'}
{'pro_id': '140C', 'name': 'New Year Snowmen', 'tags': ['binary search', 'data structures', 'greedy'], 'dif': '1800'}
{'pro_id': '140B', 'name': 'New Year Cards', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '140A', 'name': 'New Year Table', 'tags': ['geometry', 'math'], 'dif': '1700'}
{'pro_id': '139B', 'name': 'Wallpaper', 'tags': ['implementation', 'math'], 'dif': '1600'}
{'pro_id': '139A', 'name': 'Petr and Book', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '138E', 'name': 'Hellish Constraints', 'tags': ['brute force', 'dp', 'two pointers'], 'dif': '2900'}
{'pro_id': '138D', 'name': 'World of Darkraft', 'tags': ['dp', 'games'], 'dif': '2500'}
{'pro_id': '138C', 'name': 'Mushroom Gnomes - 2', 'tags': ['binary search', 'data structures', 'probabilities', 'sortings'], 'dif': '2500'}
{'pro_id': '138B', 'name': 'Digits Permutations', 'tags': ['greedy'], 'dif': '2200'}
{'pro_id': '138A', 'name': 'Literature Lesson', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '137E', 'name': 'Last Chance', 'tags': ['data structures', 'implementation', 'strings'], 'dif': '2000'}
{'pro_id': '137D', 'name': 'Palindromes', 'tags': ['dp', 'strings'], 'dif': '1900'}
{'pro_id': '137C', 'name': 'History', 'tags': ['sortings'], 'dif': '1500'}
{'pro_id': '137B', 'name': 'Permutation', 'tags': ['greedy'], 'dif': '1100'}
{'pro_id': '137A', 'name': 'Postcards and photos', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '136B', 'name': 'Ternary Logic', 'tags': ['implementation', 'math'], 'dif': '1200'}
{'pro_id': '136A', 'name': 'Presents', 'tags': ['implementation'], 'dif': '700'}
{'pro_id': '135E', 'name': 'Weak Subsequence', 'tags': ['combinatorics'], 'dif': '2800'}
{'pro_id': '135D', 'name': 'Cycle', 'tags': ['brute force', 'dfs and similar', 'implementation'], 'dif': '2400'}
{'pro_id': '135C', 'name': 'Zero-One', 'tags': ['constructive algorithms', 'games', 'greedy'], 'dif': '2000'}
{'pro_id': '135B', 'name': 'Rectangle and Square', 'tags': ['brute force', 'geometry', 'math'], 'dif': '1600'}
{'pro_id': '135A', 'name': 'Replacement', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '134C', 'name': 'Swaps', 'tags': ['constructive algorithms', 'graphs', 'greedy'], 'dif': '2200'}
{'pro_id': '134B', 'name': 'Pairs of Numbers', 'tags': ['brute force', 'dfs and similar', 'math', 'number theory'], 'dif': '1800'}
{'pro_id': '134A', 'name': 'Average Numbers', 'tags': ['brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '133B', 'name': 'Unary', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '133A', 'name': 'HQ9+', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '132E', 'name': 'Bits of merry old England', 'tags': ['flows', 'graphs'], 'dif': '2600'}
{'pro_id': '132D', 'name': 'Constants in the language of Shakespeare', 'tags': ['constructive algorithms', 'dp', 'greedy'], 'dif': '2100'}
{'pro_id': '132C', 'name': 'Logo Turtle', 'tags': ['dp'], 'dif': '1900'}
{'pro_id': '132B', 'name': 'Piet', 'tags': ['implementation'], 'dif': '2000'}
{'pro_id': '132A', 'name': 'Turing Tape', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '131F', 'name': 'Present to Mom', 'tags': ['binary search', 'two pointers'], 'dif': '2200'}
{'pro_id': '131E', 'name': 'Yet Another Task with Queens', 'tags': ['sortings'], 'dif': '1800'}
{'pro_id': '131D', 'name': 'Subway', 'tags': ['dfs and similar', 'graphs'], 'dif': '1600'}
{'pro_id': '131C', 'name': 'The World is a Theatre', 'tags': ['combinatorics', 'math'], 'dif': '1500'}
{'pro_id': '131B', 'name': 'Opposites Attract', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '131A', 'name': 'cAPS lOCK', 'tags': ['implementation', 'strings'], 'dif': '1100'}
{'pro_id': '130J', 'name': 'Date calculation', 'tags': ['*special problem'], 'dif': '2300'}
{'pro_id': '130I', 'name': 'Array sorting', 'tags': ['*special problem', 'sortings'], 'dif': '2400'}
{'pro_id': '130H', 'name': 'Balanced brackets', 'tags': ['*special problem'], 'dif': '1900'}
{'pro_id': '130G', 'name': 'CAPS LOCK ON', 'tags': ['*special problem'], 'dif': '1800'}
{'pro_id': '130F', 'name': 'Prime factorization', 'tags': ['*special problem'], 'dif': '1900'}
{'pro_id': '130E', 'name': 'Tribonacci numbers', 'tags': ['*special problem'], 'dif': '1800'}
{'pro_id': '130D', 'name': 'Exponentiation', 'tags': ['*special problem'], 'dif': '1700'}
{'pro_id': '130C', 'name': 'Decimal sum', 'tags': ['*special problem'], 'dif': '1500'}
{'pro_id': '130B', 'name': 'Gnikool Ssalg', 'tags': ['*special problem', 'implementation', 'strings'], 'dif': '1500'}
{'pro_id': '130A', 'name': 'Hexagonal numbers', 'tags': ['*special problem', 'implementation'], 'dif': '1300'}
{'pro_id': '129B', 'name': 'Students and Shoelaces', 'tags': ['brute force', 'dfs and similar', 'graphs', 'implementation'], 'dif': '1200'}
{'pro_id': '129A', 'name': 'Cookies', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '128E', 'name': 'Birthday', 'tags': ['geometry', 'math'], 'dif': '2900'}
{'pro_id': '128D', 'name': 'Numbers', 'tags': ['constructive algorithms', 'implementation'], 'dif': '2000'}
{'pro_id': '128C', 'name': 'Games with Rectangle', 'tags': ['combinatorics', 'dp'], 'dif': '2100'}
{'pro_id': '128B', 'name': 'String', 'tags': ['brute force', 'constructive algorithms', 'hashing', 'implementation', 'string suffix structures', 'strings'], 'dif': '2200'}
{'pro_id': '128A', 'name': 'Statues', 'tags': ['dfs and similar'], 'dif': '1500'}
{'pro_id': '127B', 'name': 'Canvas Frames', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '127A', 'name': 'Wasted Time', 'tags': ['geometry'], 'dif': '1000'}
{'pro_id': '126E', 'name': 'Pills', 'tags': ['brute force', 'flows'], 'dif': '3100'}
{'pro_id': '126D', 'name': 'Fibonacci Sums', 'tags': ['dp', 'math'], 'dif': '2200'}
{'pro_id': '126C', 'name': 'E-reader Display', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2200'}
{'pro_id': '126B', 'name': 'Password', 'tags': ['binary search', 'dp', 'hashing', 'string suffix structures', 'strings'], 'dif': '1800'}
{'pro_id': '126A', 'name': 'Hot Bath', 'tags': ['binary search', 'brute force', 'math'], 'dif': '1900'}
{'pro_id': '125E', 'name': 'MST Company', 'tags': ['binary search', 'graphs'], 'dif': '2400'}
{'pro_id': '125D', 'name': 'Two progressions', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2000'}
{'pro_id': '125C', 'name': "Hobbits' Party", 'tags': ['constructive algorithms', 'greedy'], 'dif': '1700'}
{'pro_id': '125B', 'name': 'Simple XML', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '125A', 'name': 'Measuring Lengths in Baden', 'tags': ['math'], 'dif': '1400'}
{'pro_id': '124B', 'name': 'Permutations', 'tags': ['brute force', 'combinatorics', 'implementation'], 'dif': '1400'}
{'pro_id': '124A', 'name': 'The number of positions', 'tags': ['math'], 'dif': '1000'}
{'pro_id': '123E', 'name': 'Maze', 'tags': ['dfs and similar', 'dp', 'probabilities', 'trees'], 'dif': '2600'}
{'pro_id': '123D', 'name': 'String', 'tags': ['string suffix structures'], 'dif': '2300'}
{'pro_id': '123C', 'name': 'Brackets', 'tags': ['combinatorics', 'dp', 'greedy'], 'dif': '2300'}
{'pro_id': '123B', 'name': 'Squares', 'tags': ['math'], 'dif': '1900'}
{'pro_id': '123A', 'name': 'Prime Permutation', 'tags': ['implementation', 'number theory', 'strings'], 'dif': '1600'}
{'pro_id': '122B', 'name': 'Lucky Substring', 'tags': ['brute force', 'implementation'], 'dif': '1100'}
{'pro_id': '122A', 'name': 'Lucky Division', 'tags': ['brute force', 'number theory'], 'dif': '1000'}
{'pro_id': '121E', 'name': 'Lucky Array', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '121D', 'name': 'Lucky Segments', 'tags': ['binary search', 'implementation', 'two pointers'], 'dif': '2400'}
{'pro_id': '121C', 'name': 'Lucky Permutation', 'tags': ['brute force', 'combinatorics', 'number theory'], 'dif': '2000'}
{'pro_id': '121B', 'name': 'Lucky Transformation', 'tags': ['strings'], 'dif': '1600'}
{'pro_id': '121A', 'name': 'Lucky Sum', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '120J', 'name': 'Minimum Sum', 'tags': ['divide and conquer', 'geometry', 'sortings'], 'dif': '2000'}
{'pro_id': '120I', 'name': 'Luck is in Numbers', 'tags': ['greedy'], 'dif': '2300'}
{'pro_id': '120H', 'name': 'Brevity is Soul of Wit', 'tags': ['graph matchings'], 'dif': '1900'}
{'pro_id': '120G', 'name': 'Boom', 'tags': ['implementation'], 'dif': '1800'}
{'pro_id': '120F', 'name': 'Spiders', 'tags': ['dp', 'greedy', 'trees'], 'dif': '1500'}
{'pro_id': '120E', 'name': 'Put Knight!', 'tags': ['games'], 'dif': '1500'}
{'pro_id': '120D', 'name': 'Three Sons', 'tags': ['brute force'], 'dif': '1400'}
{'pro_id': '120C', 'name': 'Winnie-the-Pooh and honey', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '120B', 'name': 'Quiz League', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '120A', 'name': 'Elevator', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1000'}
{'pro_id': '119E', 'name': 'Alternative Reality', 'tags': ['geometry'], 'dif': '2800'}
{'pro_id': '119D', 'name': 'String Transformation', 'tags': ['hashing', 'strings'], 'dif': '2500'}
{'pro_id': '119C', 'name': 'Education Reform', 'tags': ['dp'], 'dif': '2000'}
{'pro_id': '119B', 'name': 'Before Exam', 'tags': ['constructive algorithms', 'implementation', 'sortings'], 'dif': '1700'}
{'pro_id': '119A', 'name': 'Epic Game', 'tags': ['implementation'], 'dif': '1000'}
{'pro_id': '118E', 'name': 'Bertown roads', 'tags': ['dfs and similar', 'graphs'], 'dif': '2100'}
{'pro_id': '118D', 'name': "Caesar's Legions", 'tags': ['dp'], 'dif': '1800'}
{'pro_id': '118C', 'name': 'Fancy Number', 'tags': ['brute force', 'greedy', 'sortings', 'strings'], 'dif': '1700'}
{'pro_id': '118B', 'name': 'Present from Lena', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1100'}
{'pro_id': '118A', 'name': 'String Task', 'tags': ['implementation', 'strings'], 'dif': '1100'}
{'pro_id': '117E', 'name': 'Tree or not Tree', 'tags': ['data structures', 'divide and conquer', 'implementation', 'trees'], 'dif': '2800'}
{'pro_id': '117D', 'name': 'Not Quick Transformation', 'tags': ['divide and conquer', 'math'], 'dif': '2400'}
{'pro_id': '117C', 'name': 'Cycle', 'tags': ['dfs and similar', 'graphs'], 'dif': '2000'}
{'pro_id': '117B', 'name': 'Very Interesting Game', 'tags': ['brute force', 'number theory'], 'dif': '1700'}
{'pro_id': '117A', 'name': 'Elevator', 'tags': ['implementation', 'math'], 'dif': '1400'}
{'pro_id': '116B', 'name': 'Little Pigs and Wolves', 'tags': ['greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '116A', 'name': 'Tram', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '115E', 'name': 'Linear Kingdom Races', 'tags': ['data structures', 'dp'], 'dif': '2400'}
{'pro_id': '115D', 'name': 'Unambiguous Arithmetic Expression', 'tags': ['dp', 'expression parsing'], 'dif': '2600'}
{'pro_id': '115C', 'name': 'Plumber', 'tags': ['math'], 'dif': '2400'}
{'pro_id': '115B', 'name': 'Lawnmower', 'tags': ['greedy', 'sortings'], 'dif': '1600'}
{'pro_id': '115A', 'name': 'Party', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '1300'}
{'pro_id': '114B', 'name': 'PFAST Inc.', 'tags': ['bitmasks', 'brute force', 'graphs'], 'dif': '1500'}
{'pro_id': '114A', 'name': 'Cifera', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '113E', 'name': 'Sleeping', 'tags': ['combinatorics', 'implementation', 'math'], 'dif': '2600'}
{'pro_id': '113D', 'name': 'Museum', 'tags': ['math', 'matrices', 'probabilities'], 'dif': '2500'}
{'pro_id': '113C', 'name': 'Double Happiness', 'tags': ['brute force', 'math', 'number theory'], 'dif': '2200'}
{'pro_id': '113B', 'name': 'Petr#', 'tags': ['brute force', 'data structures', 'hashing', 'strings'], 'dif': '1900'}
{'pro_id': '113A', 'name': 'Grammar Lessons', 'tags': ['implementation', 'strings'], 'dif': '1600'}
{'pro_id': '112B', 'name': 'Petya and Square', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '112A', 'name': 'Petya and Strings', 'tags': ['implementation', 'strings'], 'dif': '900'}
{'pro_id': '111E', 'name': 'Petya and Rectangle', 'tags': [], 'dif': '3000'}
{'pro_id': '111D', 'name': 'Petya and Coloring', 'tags': ['combinatorics', 'dp'], 'dif': '2300'}
{'pro_id': '111C', 'name': 'Petya and Spiders', 'tags': ['bitmasks', 'dp', 'dsu'], 'dif': '2100'}
{'pro_id': '111B', 'name': 'Petya and Divisors', 'tags': ['binary search', 'data structures', 'number theory'], 'dif': '1900'}
{'pro_id': '111A', 'name': 'Petya and Inequiations', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '110B', 'name': 'Lucky String', 'tags': ['constructive algorithms', 'strings'], 'dif': '1100'}
{'pro_id': '110A', 'name': 'Nearly Lucky Number', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '109E', 'name': 'Lucky Interval', 'tags': ['brute force', 'math'], 'dif': '2600'}
{'pro_id': '109D', 'name': 'Lucky Sorting', 'tags': ['constructive algorithms', 'sortings'], 'dif': '2000'}
{'pro_id': '109C', 'name': 'Lucky Tree', 'tags': ['dp', 'dsu', 'trees'], 'dif': '2000'}
{'pro_id': '109B', 'name': 'Lucky Probability', 'tags': ['brute force', 'probabilities'], 'dif': '2000'}
{'pro_id': '109A', 'name': 'Lucky Sum of Digits', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '108B', 'name': 'Datatypes', 'tags': ['math', 'sortings'], 'dif': '1500'}
{'pro_id': '108A', 'name': 'Palindromic Times', 'tags': ['implementation', 'strings'], 'dif': '1100'}
{'pro_id': '107E', 'name': 'Darts', 'tags': ['geometry', 'probabilities'], 'dif': '2600'}
{'pro_id': '107D', 'name': 'Crime Management', 'tags': ['dp', 'graphs', 'matrices'], 'dif': '2400'}
{'pro_id': '107C', 'name': 'Arrangement', 'tags': ['bitmasks', 'dp'], 'dif': '2500'}
{'pro_id': '107B', 'name': 'Basketball Team', 'tags': ['combinatorics', 'dp', 'math', 'probabilities'], 'dif': '1700'}
{'pro_id': '107A', 'name': 'Dorm Water Supply', 'tags': ['dfs and similar', 'graphs'], 'dif': '1500'}
{'pro_id': '106E', 'name': 'Space Rescuers', 'tags': ['geometry', 'ternary search'], 'dif': '2200'}
{'pro_id': '106D', 'name': 'Treasure Island', 'tags': ['brute force', 'implementation'], 'dif': '1700'}
{'pro_id': '106C', 'name': 'Buns', 'tags': ['dp'], 'dif': '1600'}
{'pro_id': '106B', 'name': 'Choosing Laptop', 'tags': ['brute force', 'implementation'], 'dif': '1100'}
{'pro_id': '106A', 'name': 'Card Game', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '105E', 'name': 'Lift and Throw', 'tags': ['brute force'], 'dif': '2400'}
{'pro_id': '105D', 'name': 'Entertaining Geodetics', 'tags': ['brute force', 'dsu', 'implementation'], 'dif': '2600'}
{'pro_id': '105C', 'name': 'Item World', 'tags': ['brute force', 'implementation', 'sortings'], 'dif': '2100'}
{'pro_id': '105B', 'name': 'Dark Assembly', 'tags': ['brute force', 'probabilities'], 'dif': '1800'}
{'pro_id': '105A', 'name': 'Transmigration', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '104A', 'name': 'Blackjack', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '103E', 'name': 'Buying Sets', 'tags': ['flows', 'graph matchings'], 'dif': '2700'}
{'pro_id': '103D', 'name': 'Time to Raid Cowavans', 'tags': ['brute force', 'data structures', 'sortings'], 'dif': '2200'}
{'pro_id': '103C', 'name': 'Russian Roulette', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1900'}
{'pro_id': '103B', 'name': 'Cthulhu', 'tags': ['dfs and similar', 'dsu', 'graphs'], 'dif': '1600'}
{'pro_id': '103A', 'name': 'Testing Pants for Sadness', 'tags': ['greedy', 'implementation', 'math'], 'dif': '1200'}
{'pro_id': '102B', 'name': 'Sum of Digits', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '102A', 'name': 'Clothes', 'tags': ['brute force'], 'dif': '1300'}
{'pro_id': '101E', 'name': 'Candies and Stones', 'tags': ['divide and conquer', 'dp'], 'dif': '2400'}
{'pro_id': '101D', 'name': 'Castle', 'tags': ['dp', 'greedy', 'probabilities', 'sortings', 'trees'], 'dif': '2300'}
{'pro_id': '101C', 'name': 'Vectors', 'tags': ['implementation', 'math'], 'dif': '2100'}
{'pro_id': '101B', 'name': 'Buses', 'tags': ['binary search', 'data structures', 'dp'], 'dif': '1900'}
{'pro_id': '101A', 'name': 'Homework', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '100J', 'name': 'Interval Coloring', 'tags': ['*special problem', 'greedy', 'math'], 'dif': '2400'}
{'pro_id': '100I', 'name': 'Rotation', 'tags': ['*special problem', 'geometry', 'math'], 'dif': '1700'}
{'pro_id': '100H', 'name': 'Battleship', 'tags': ['*special problem', 'dfs and similar', 'implementation'], 'dif': '2200'}
{'pro_id': '100G', 'name': 'Name the album', 'tags': ['*special problem', 'data structures', 'implementation'], 'dif': '2000'}
{'pro_id': '100F', 'name': 'Polynom', 'tags': ['*special problem', 'implementation'], 'dif': '2000'}
{'pro_id': '100E', 'name': 'Lamps in a Line', 'tags': ['*special problem', 'math'], 'dif': '1800'}
{'pro_id': '100D', 'name': 'World of Mouth', 'tags': ['*special problem', 'strings'], 'dif': '1600'}
{'pro_id': '100C', 'name': 'A+B', 'tags': ['*special problem', 'implementation'], 'dif': '1400'}
{'pro_id': '100B', 'name': 'Friendly Numbers', 'tags': ['*special problem', 'implementation'], 'dif': '1600'}
{'pro_id': '100A', 'name': 'Carpeting the Room', 'tags': ['*special problem', 'implementation'], 'dif': '1300'}
{'pro_id': '99B', 'name': 'Help Chef Gerasim', 'tags': ['implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '99A', 'name': 'Help Far Away Kingdom', 'tags': ['strings'], 'dif': '1000'}
{'pro_id': '98E', 'name': 'Help Shrek and Donkey', 'tags': ['dp', 'games', 'math', 'probabilities'], 'dif': '2500'}
{'pro_id': '98D', 'name': 'Help Monks', 'tags': ['constructive algorithms'], 'dif': '2400'}
{'pro_id': '98C', 'name': 'Help Greg the Dwarf', 'tags': ['geometry', 'ternary search'], 'dif': '2400'}
{'pro_id': '98B', 'name': 'Help King', 'tags': ['implementation', 'probabilities', 'trees'], 'dif': '2600'}
{'pro_id': '98A', 'name': 'Help Victoria the Wise', 'tags': ['brute force', 'implementation'], 'dif': '1700'}
{'pro_id': '97E', 'name': 'Leaders', 'tags': ['dfs and similar', 'dsu', 'graphs', 'trees'], 'dif': '2800'}
{'pro_id': '97D', 'name': 'Robot in Basement', 'tags': ['bitmasks', 'brute force', 'implementation'], 'dif': '2600'}
{'pro_id': '97C', 'name': 'Winning Strategy', 'tags': ['binary search', 'graphs', 'math', 'shortest paths'], 'dif': '2300'}
{'pro_id': '97B', 'name': 'Superset', 'tags': ['constructive algorithms', 'divide and conquer'], 'dif': '2300'}
{'pro_id': '97A', 'name': 'Domino', 'tags': ['brute force', 'implementation'], 'dif': '2400'}
{'pro_id': '96B', 'name': 'Lucky Numbers (easy)', 'tags': ['binary search', 'bitmasks', 'brute force'], 'dif': '1400'}
{'pro_id': '96A', 'name': 'Football', 'tags': ['implementation', 'strings'], 'dif': '1100'}
{'pro_id': '95E', 'name': 'Lucky Country', 'tags': ['dp', 'dsu', 'graphs'], 'dif': '2400'}
{'pro_id': '95D', 'name': 'Horse Races', 'tags': ['dp', 'math'], 'dif': '2500'}
{'pro_id': '95C', 'name': 'Volleyball', 'tags': ['shortest paths'], 'dif': '1900'}
{'pro_id': '95B', 'name': 'Lucky Numbers', 'tags': ['dp', 'greedy'], 'dif': '1800'}
{'pro_id': '95A', 'name': 'Hockey', 'tags': ['implementation', 'strings'], 'dif': '1700'}
{'pro_id': '94B', 'name': 'Friends', 'tags': ['graphs', 'implementation', 'math'], 'dif': '1400'}
{'pro_id': '94A', 'name': 'Restoring Password', 'tags': ['implementation', 'strings'], 'dif': '1000'}
{'pro_id': '93E', 'name': 'Lostborn', 'tags': ['dp', 'math', 'number theory'], 'dif': '2600'}
{'pro_id': '93D', 'name': 'Flags', 'tags': ['dp', 'math', 'matrices'], 'dif': '2400'}
{'pro_id': '93C', 'name': 'Azembler', 'tags': ['brute force', 'implementation'], 'dif': '2400'}
{'pro_id': '93B', 'name': 'End of Exams', 'tags': ['greedy'], 'dif': '1900'}
{'pro_id': '93A', 'name': 'Frames', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '92B', 'name': 'Binary Number', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '92A', 'name': 'Chips', 'tags': ['implementation', 'math'], 'dif': '800'}
{'pro_id': '91E', 'name': 'Igloo Skyscraper', 'tags': ['data structures', 'geometry'], 'dif': '2400'}
{'pro_id': '91D', 'name': "Grocer's Problem", 'tags': ['constructive algorithms', 'graphs', 'greedy'], 'dif': '2500'}
{'pro_id': '91C', 'name': 'Ski Base', 'tags': ['combinatorics', 'dsu', 'graphs'], 'dif': '2500'}
{'pro_id': '91B', 'name': 'Queue', 'tags': ['binary search', 'data structures'], 'dif': '1600'}
{'pro_id': '91A', 'name': 'Newspaper Headline', 'tags': ['greedy', 'strings'], 'dif': '1600'}
{'pro_id': '90B', 'name': 'African Crossword', 'tags': ['implementation', 'strings'], 'dif': '1100'}
{'pro_id': '90A', 'name': 'Cableway', 'tags': ['greedy', 'math'], 'dif': '1000'}
{'pro_id': '89E', 'name': 'Fire and Ice', 'tags': ['greedy'], 'dif': '2900'}
{'pro_id': '89D', 'name': 'Space mines', 'tags': ['geometry'], 'dif': '2400'}
{'pro_id': '89C', 'name': 'Chip Play', 'tags': ['brute force', 'data structures', 'implementation'], 'dif': '2100'}
{'pro_id': '89B', 'name': 'Widget Library', 'tags': ['dp', 'expression parsing', 'graphs', 'implementation'], 'dif': '2200'}
{'pro_id': '89A', 'name': 'Robbery', 'tags': ['greedy'], 'dif': '1800'}
{'pro_id': '88B', 'name': 'Keyboard', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '88A', 'name': 'Chord', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '87E', 'name': 'Mogohu-Rea Idol', 'tags': ['geometry'], 'dif': '2600'}
{'pro_id': '87D', 'name': 'Beautiful Road', 'tags': ['dfs and similar', 'dp', 'dsu', 'graphs', 'implementation', 'sortings', 'trees'], 'dif': '2300'}
{'pro_id': '87C', 'name': 'Interesting Game', 'tags': ['dp', 'games', 'math'], 'dif': '2100'}
{'pro_id': '87B', 'name': 'Vasya and Types', 'tags': ['implementation', 'strings'], 'dif': '1900'}
{'pro_id': '87A', 'name': 'Trains', 'tags': ['implementation', 'math'], 'dif': '1500'}
{'pro_id': '86E', 'name': 'Long sequence', 'tags': ['brute force', 'math', 'matrices'], 'dif': '2600'}
{'pro_id': '86D', 'name': 'Powerful array', 'tags': ['data structures', 'implementation', 'math', 'two pointers'], 'dif': '2700'}
{'pro_id': '86C', 'name': 'Genetic engineering', 'tags': ['dp', 'string suffix structures', 'trees'], 'dif': '2400'}
{'pro_id': '86B', 'name': 'Tetris revisited', 'tags': ['constructive algorithms', 'graph matchings', 'greedy', 'math'], 'dif': '2100'}
{'pro_id': '86A', 'name': 'Reflection', 'tags': ['math'], 'dif': '1800'}
{'pro_id': '85E', 'name': 'Guard Towers', 'tags': ['binary search', 'dsu', 'geometry', 'graphs', 'sortings'], 'dif': '2600'}
{'pro_id': '85D', 'name': 'Sum of Medians', 'tags': ['binary search', 'brute force', 'data structures', 'implementation'], 'dif': '2200'}
{'pro_id': '85C', 'name': 'Petya and Tree', 'tags': ['binary search', 'dfs and similar', 'probabilities', 'sortings', 'trees'], 'dif': '2200'}
{'pro_id': '85B', 'name': 'Embassy Queue', 'tags': ['data structures', 'greedy'], 'dif': '1800'}
{'pro_id': '85A', 'name': 'Domino', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1400'}
{'pro_id': '84C', 'name': 'Biathlon', 'tags': ['binary search', 'implementation'], 'dif': '1700'}
{'pro_id': '84A', 'name': 'Toy Army', 'tags': ['math', 'number theory'], 'dif': '1000'}
{'pro_id': '83E', 'name': 'Two Subsequences', 'tags': ['bitmasks', 'dp'], 'dif': '2800'}
{'pro_id': '83D', 'name': 'Numbers', 'tags': ['dp', 'math', 'number theory'], 'dif': '2400'}
{'pro_id': '83C', 'name': 'Track', 'tags': ['graphs', 'greedy', 'shortest paths'], 'dif': '2400'}
{'pro_id': '83B', 'name': 'Doctor', 'tags': ['binary search', 'math', 'sortings'], 'dif': '1900'}
{'pro_id': '83A', 'name': 'Magical Array', 'tags': ['math'], 'dif': '1400'}
{'pro_id': '82E', 'name': 'Corridor', 'tags': ['geometry'], 'dif': '2500'}
{'pro_id': '82D', 'name': 'Two out of Three', 'tags': ['dp'], 'dif': '2000'}
{'pro_id': '82C', 'name': 'General Mobilization', 'tags': ['data structures', 'dfs and similar', 'sortings'], 'dif': '1900'}
{'pro_id': '82B', 'name': 'Sets', 'tags': ['constructive algorithms', 'hashing', 'implementation'], 'dif': '1700'}
{'pro_id': '82A', 'name': 'Double Cola', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '81E', 'name': 'Pairs', 'tags': ['dfs and similar', 'dp', 'dsu', 'graphs', 'implementation', 'trees'], 'dif': '2600'}
{'pro_id': '81D', 'name': "Polycarp's Picture Gallery", 'tags': ['constructive algorithms', 'greedy'], 'dif': '2000'}
{'pro_id': '81C', 'name': 'Average Score', 'tags': ['greedy', 'math', 'sortings'], 'dif': '1700'}
{'pro_id': '81B', 'name': 'Sequence Formatting', 'tags': ['implementation', 'strings'], 'dif': '1700'}
{'pro_id': '81A', 'name': 'Plug-in', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '80B', 'name': 'Depression', 'tags': ['geometry', 'math'], 'dif': '1200'}
{'pro_id': '80A', 'name': "Panoramix's Prediction", 'tags': ['brute force'], 'dif': '900'}
{'pro_id': '79E', 'name': 'Security System', 'tags': ['math'], 'dif': '2800'}
{'pro_id': '79D', 'name': 'Password', 'tags': ['bitmasks', 'dp', 'shortest paths'], 'dif': '2700'}
{'pro_id': '79C', 'name': 'Beaver', 'tags': ['data structures', 'dp', 'greedy', 'hashing', 'strings', 'two pointers'], 'dif': '1800'}
{'pro_id': '79B', 'name': 'Colorful Field', 'tags': ['implementation', 'sortings'], 'dif': '1500'}
{'pro_id': '79A', 'name': 'Bus Game', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '78E', 'name': 'Evacuation', 'tags': ['flows', 'graphs', 'shortest paths'], 'dif': '2500'}
{'pro_id': '78D', 'name': "Archer's Shot", 'tags': ['binary search', 'geometry', 'math', 'two pointers'], 'dif': '2400'}
{'pro_id': '78C', 'name': 'Beaver Game', 'tags': ['dp', 'games', 'number theory'], 'dif': '1900'}
{'pro_id': '78B', 'name': 'Easter Eggs', 'tags': ['constructive algorithms', 'implementation'], 'dif': '1200'}
{'pro_id': '78A', 'name': 'Haiku', 'tags': ['implementation', 'strings'], 'dif': '1000'}
{'pro_id': '77E', 'name': 'Martian Food', 'tags': ['geometry'], 'dif': '2700'}
{'pro_id': '77D', 'name': 'Domino Carpet', 'tags': ['dp', 'implementation'], 'dif': '2300'}
{'pro_id': '77C', 'name': 'Beavermuncher-0xFF', 'tags': ['dfs and similar', 'dp', 'dsu', 'greedy', 'trees'], 'dif': '2300'}
{'pro_id': '77B', 'name': 'Falling Anvils', 'tags': ['math', 'probabilities'], 'dif': '1800'}
{'pro_id': '77A', 'name': 'Heroes', 'tags': ['brute force', 'implementation'], 'dif': '1600'}
{'pro_id': '76F', 'name': 'Tourist', 'tags': ['binary search', 'data structures', 'dp'], 'dif': '2400'}
{'pro_id': '76E', 'name': 'Points', 'tags': ['implementation', 'math'], 'dif': '1700'}
{'pro_id': '76D', 'name': 'Plus and xor', 'tags': ['dp', 'greedy', 'math'], 'dif': '1800'}
{'pro_id': '76C', 'name': 'Mutation', 'tags': ['bitmasks', 'dp', 'math'], 'dif': '2700'}
{'pro_id': '76B', 'name': 'Mice', 'tags': ['greedy', 'two pointers'], 'dif': '2200'}
{'pro_id': '76A', 'name': 'Gift', 'tags': ['dsu', 'graphs', 'sortings', 'trees'], 'dif': '2300'}
{'pro_id': '75E', 'name': "Ship's Shortest Path", 'tags': ['geometry', 'shortest paths'], 'dif': '2500'}
{'pro_id': '75D', 'name': 'Big Maximum Sum', 'tags': ['data structures', 'dp', 'greedy', 'implementation', 'math', 'trees'], 'dif': '2100'}
{'pro_id': '75C', 'name': 'Modified GCD', 'tags': ['binary search', 'number theory'], 'dif': '1600'}
{'pro_id': '75B', 'name': 'Facetook Priority Wall', 'tags': ['expression parsing', 'implementation', 'strings'], 'dif': '1500'}
{'pro_id': '75A', 'name': 'Life Without Zeros', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '74E', 'name': 'Shift It!', 'tags': ['constructive algorithms'], 'dif': '2700'}
{'pro_id': '74D', 'name': 'Hanger', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '74C', 'name': 'Chessboard Billiard', 'tags': ['dfs and similar', 'dsu', 'graphs', 'number theory'], 'dif': '2100'}
{'pro_id': '74B', 'name': 'Train', 'tags': ['dp', 'games', 'greedy'], 'dif': '1600'}
{'pro_id': '74A', 'name': 'Room Leader', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '73F', 'name': 'Plane of Tanks', 'tags': ['brute force', 'geometry'], 'dif': '2700'}
{'pro_id': '73E', 'name': 'Morrowindows', 'tags': ['math', 'number theory'], 'dif': '2300'}
{'pro_id': '73D', 'name': 'FreeDiv', 'tags': ['dfs and similar', 'graphs', 'greedy'], 'dif': '2200'}
{'pro_id': '73C', 'name': 'LionAge II', 'tags': ['dp'], 'dif': '1800'}
{'pro_id': '73B', 'name': 'Need For Brake', 'tags': ['binary search', 'greedy', 'sortings'], 'dif': '2000'}
{'pro_id': '73A', 'name': 'The Elder Trolls IV: Oblivon', 'tags': ['greedy', 'math'], 'dif': '1600'}
{'pro_id': '72I', 'name': 'Goofy Numbers', 'tags': ['*special problem', 'implementation'], 'dif': '1500'}
{'pro_id': '72H', 'name': 'Reverse It!', 'tags': ['*special problem', 'implementation'], 'dif': '1600'}
{'pro_id': '72G', 'name': 'Fibonacci army', 'tags': ['*special problem', 'dp'], 'dif': '1200'}
{'pro_id': '72F', 'name': 'Oil', 'tags': ['*special problem', 'greedy', 'math'], 'dif': '2100'}
{'pro_id': '72E', 'name': 'Ali goes shopping', 'tags': ['*special problem', 'brute force', 'strings'], 'dif': '1900'}
{'pro_id': '72D', 'name': 'Perse-script', 'tags': ['*special problem', 'expression parsing'], 'dif': '2400'}
{'pro_id': '72C', 'name': 'Extraordinarily Nice Numbers', 'tags': ['*special problem', 'math'], 'dif': '1300'}
{'pro_id': '72B', 'name': 'INI-file', 'tags': ['*special problem', 'implementation'], 'dif': '2500'}
{'pro_id': '72A', 'name': 'Goshtasp, Vishtasp and Eidi', 'tags': ['*special problem', 'greedy', 'math'], 'dif': '1900'}
{'pro_id': '71E', 'name': 'Nuclear Fusion', 'tags': ['bitmasks', 'dp'], 'dif': '2200'}
{'pro_id': '71D', 'name': 'Solitaire', 'tags': ['brute force', 'implementation'], 'dif': '2200'}
{'pro_id': '71C', 'name': 'Round Table Knights', 'tags': ['dp', 'math', 'number theory'], 'dif': '1600'}
{'pro_id': '71B', 'name': 'Progress Bar', 'tags': ['implementation', 'math'], 'dif': '1400'}
{'pro_id': '71A', 'name': 'Way Too Long Words', 'tags': ['strings'], 'dif': '800'}
{'pro_id': '70E', 'name': 'Information Reform', 'tags': ['dp', 'implementation', 'trees'], 'dif': '2700'}
{'pro_id': '70D', 'name': "Professor's task", 'tags': ['data structures', 'geometry'], 'dif': '2700'}
{'pro_id': '70C', 'name': 'Lucky Tickets', 'tags': ['binary search', 'data structures', 'sortings', 'two pointers'], 'dif': '2200'}
{'pro_id': '70B', 'name': 'Text Messaging', 'tags': ['expression parsing', 'greedy', 'strings'], 'dif': '1600'}
{'pro_id': '70A', 'name': 'Cookies', 'tags': ['math'], 'dif': '1400'}
{'pro_id': '69E', 'name': 'Subsegments', 'tags': ['data structures', 'implementation'], 'dif': '1800'}
{'pro_id': '69D', 'name': 'Dot', 'tags': ['dp', 'games'], 'dif': '2100'}
{'pro_id': '69C', 'name': 'Game', 'tags': ['implementation'], 'dif': '1900'}
{'pro_id': '69B', 'name': 'Bets', 'tags': ['greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '69A', 'name': 'Young Physicist', 'tags': ['implementation', 'math'], 'dif': '1100'}
{'pro_id': '68E', 'name': 'Contact', 'tags': ['geometry'], 'dif': '2900'}
{'pro_id': '68D', 'name': 'Half-decay tree', 'tags': ['data structures', 'divide and conquer', 'dp', 'math', 'probabilities'], 'dif': '2400'}
{'pro_id': '68C', 'name': 'Synchrophasotron', 'tags': ['brute force'], 'dif': '2200'}
{'pro_id': '68B', 'name': 'Energy exchange', 'tags': ['binary search'], 'dif': '1700'}
{'pro_id': '68A', 'name': 'Irrational problem', 'tags': ['implementation', 'number theory'], 'dif': '1100'}
{'pro_id': '67E', 'name': 'Save the City!', 'tags': ['geometry'], 'dif': '2400'}
{'pro_id': '67D', 'name': 'Optical Experiment', 'tags': ['binary search', 'data structures', 'dp'], 'dif': '1900'}
{'pro_id': '67C', 'name': 'Sequence of Balls', 'tags': ['dp'], 'dif': '2500'}
{'pro_id': '67B', 'name': 'Restoration of the Permutation', 'tags': ['greedy'], 'dif': '1800'}
{'pro_id': '67A', 'name': 'Partial Teacher', 'tags': ['dp', 'graphs', 'greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '66E', 'name': 'Petya and Post', 'tags': ['data structures', 'dp'], 'dif': '2100'}
{'pro_id': '66D', 'name': 'Petya and His Friends', 'tags': ['constructive algorithms', 'math', 'number theory'], 'dif': '1700'}
{'pro_id': '66C', 'name': 'Petya and File System', 'tags': ['data structures', 'implementation'], 'dif': '1800'}
{'pro_id': '66B', 'name': 'Petya and Countryside', 'tags': ['brute force', 'implementation'], 'dif': '1200'}
{'pro_id': '66A', 'name': 'Petya and Java', 'tags': ['implementation', 'strings'], 'dif': '1400'}
{'pro_id': '65E', 'name': 'Harry Potter and Moving Staircases', 'tags': ['dfs and similar', 'implementation'], 'dif': '2900'}
{'pro_id': '65D', 'name': 'Harry Potter and the Sorting Hat', 'tags': ['brute force', 'dfs and similar', 'hashing'], 'dif': '2200'}
{'pro_id': '65C', 'name': 'Harry Potter and the Golden Snitch', 'tags': ['binary search', 'geometry'], 'dif': '2100'}
{'pro_id': '65B', 'name': 'Harry Potter and the History of Magic', 'tags': ['brute force', 'greedy', 'implementation'], 'dif': '1700'}
{'pro_id': '65A', 'name': 'Harry Potter and Three Spells', 'tags': ['implementation', 'math'], 'dif': '1800'}
{'pro_id': '64I', 'name': 'Sort the Table', 'tags': ['*special problem', 'sortings'], 'dif': '2500'}
{'pro_id': '64H', 'name': 'Table Bowling', 'tags': ['*special problem', 'sortings'], 'dif': '2300'}
{'pro_id': '64G', 'name': 'Path Canonization', 'tags': ['*special problem'], 'dif': '2300'}
{'pro_id': '64F', 'name': 'Domain', 'tags': ['*special problem', 'expression parsing'], 'dif': '2100'}
{'pro_id': '64E', 'name': 'Prime Segment', 'tags': ['*special problem', 'brute force'], 'dif': '2000'}
{'pro_id': '64D', 'name': 'Presents', 'tags': ['*special problem', 'greedy'], 'dif': '1900'}
{'pro_id': '64C', 'name': 'Table', 'tags': ['*special problem', 'greedy', 'implementation', 'math'], 'dif': '1700'}
{'pro_id': '64B', 'name': 'Expression', 'tags': ['*special problem', 'expression parsing'], 'dif': '1500'}
{'pro_id': '64A', 'name': 'Factorial', 'tags': ['*special problem', 'implementation'], 'dif': '1300'}
{'pro_id': '63E', 'name': 'Sweets Game', 'tags': ['bitmasks', 'dfs and similar', 'dp', 'games', 'implementation'], 'dif': '2200'}
{'pro_id': '63D', 'name': 'Dividing Island', 'tags': ['constructive algorithms'], 'dif': '2000'}
{'pro_id': '63C', 'name': 'Bulls and Cows', 'tags': ['brute force', 'implementation'], 'dif': '1800'}
{'pro_id': '63B', 'name': "Settlers' Training", 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '63A', 'name': 'Sinking Ship', 'tags': ['implementation', 'sortings', 'strings'], 'dif': '1100'}
{'pro_id': '62E', 'name': 'World Evil', 'tags': ['dp', 'flows'], 'dif': '2700'}
{'pro_id': '62D', 'name': 'Wormhouse', 'tags': ['dfs and similar', 'graphs'], 'dif': '2300'}
{'pro_id': '62C', 'name': 'Inquisition', 'tags': ['geometry', 'implementation', 'sortings'], 'dif': '2300'}
{'pro_id': '62B', 'name': 'Tyndex.Brome', 'tags': ['binary search', 'implementation'], 'dif': '1700'}
{'pro_id': '62A', 'name': "A Student's Dream", 'tags': ['greedy', 'math'], 'dif': '1400'}
{'pro_id': '61E', 'name': 'Enemy is weak', 'tags': ['data structures', 'trees'], 'dif': '2100'}
{'pro_id': '61D', 'name': 'Eternal Victory', 'tags': ['dfs and similar', 'graphs', 'greedy', 'shortest paths', 'trees'], 'dif': '1900'}
{'pro_id': '61C', 'name': 'Capture Valerian', 'tags': ['math'], 'dif': '1900'}
{'pro_id': '61B', 'name': 'Hard Work', 'tags': ['strings'], 'dif': '1300'}
{'pro_id': '61A', 'name': 'Ultra-Fast Mathematician', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '60E', 'name': 'Mushroom Gnomes', 'tags': ['math', 'matrices'], 'dif': '2500'}
{'pro_id': '60D', 'name': 'Savior', 'tags': ['brute force', 'dsu', 'math'], 'dif': '2400'}
{'pro_id': '60C', 'name': 'Mushroom Strife', 'tags': ['brute force', 'dfs and similar'], 'dif': '2100'}
{'pro_id': '60B', 'name': 'Serial Time!', 'tags': ['dfs and similar', 'dsu'], 'dif': '1500'}
{'pro_id': '60A', 'name': 'Where Are My Flakes?', 'tags': ['implementation', 'two pointers'], 'dif': '1300'}
{'pro_id': '59E', 'name': 'Shortest Path', 'tags': ['graphs', 'shortest paths'], 'dif': '2100'}
{'pro_id': '59D', 'name': 'Team Arrangement', 'tags': ['constructive algorithms', 'greedy', 'implementation'], 'dif': '2200'}
{'pro_id': '59C', 'name': 'Title', 'tags': ['expression parsing'], 'dif': '1600'}
{'pro_id': '59B', 'name': 'Fortune Telling', 'tags': ['implementation', 'number theory'], 'dif': '1200'}
{'pro_id': '59A', 'name': 'Word', 'tags': ['implementation', 'strings'], 'dif': '800'}
{'pro_id': '58E', 'name': 'Expression', 'tags': ['dp'], 'dif': '2400'}
{'pro_id': '58D', 'name': 'Calendar', 'tags': ['greedy', 'strings'], 'dif': '2000'}
{'pro_id': '58C', 'name': 'Trees', 'tags': ['brute force'], 'dif': '1800'}
{'pro_id': '58B', 'name': 'Coins', 'tags': ['greedy'], 'dif': '1300'}
{'pro_id': '58A', 'name': 'Chat room', 'tags': ['greedy', 'strings'], 'dif': '1100'}
{'pro_id': '57E', 'name': 'Chess', 'tags': ['math', 'shortest paths'], 'dif': '2900'}
{'pro_id': '57D', 'name': 'Journey', 'tags': ['dp', 'math'], 'dif': '2400'}
{'pro_id': '57C', 'name': 'Array', 'tags': ['combinatorics', 'math'], 'dif': '1900'}
{'pro_id': '57B', 'name': 'Martian Architecture', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '57A', 'name': 'Square Earth?', 'tags': ['dfs and similar', 'greedy', 'implementation'], 'dif': '1400'}
{'pro_id': '56E', 'name': 'Domino Principle', 'tags': ['binary search', 'data structures', 'sortings'], 'dif': '2100'}
{'pro_id': '56D', 'name': 'Changing a String', 'tags': ['dp'], 'dif': '2100'}
{'pro_id': '56C', 'name': 'Corporation Mail', 'tags': ['data structures', 'expression parsing', 'implementation'], 'dif': '1800'}
{'pro_id': '56B', 'name': 'Spoilt Permutation', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '56A', 'name': 'Bar', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '55E', 'name': 'Very simple problem', 'tags': ['geometry', 'two pointers'], 'dif': '2400'}
{'pro_id': '55D', 'name': 'Beautiful numbers', 'tags': ['dp', 'number theory'], 'dif': '2400'}
{'pro_id': '55C', 'name': 'Pie or die', 'tags': ['games'], 'dif': '1900'}
{'pro_id': '55B', 'name': 'Smallest number', 'tags': ['brute force'], 'dif': '1600'}
{'pro_id': '55A', 'name': 'Flea travel', 'tags': ['implementation', 'math'], 'dif': '1300'}
{'pro_id': '54E', 'name': 'Vacuum Сleaner', 'tags': ['geometry'], 'dif': '2700'}
{'pro_id': '54D', 'name': 'Writing a Song', 'tags': ['brute force', 'dp', 'strings'], 'dif': '2100'}
{'pro_id': '54C', 'name': 'First Digit Law', 'tags': ['dp', 'math', 'probabilities'], 'dif': '2000'}
{'pro_id': '54B', 'name': 'Cutting Jigsaw Puzzle', 'tags': ['hashing', 'implementation'], 'dif': '1800'}
{'pro_id': '54A', 'name': 'Presents', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '53E', 'name': 'Dead Ends', 'tags': ['bitmasks', 'dp'], 'dif': '2500'}
{'pro_id': '53D', 'name': 'Physical Education', 'tags': ['sortings'], 'dif': '1500'}
{'pro_id': '53C', 'name': 'Little Frog', 'tags': ['constructive algorithms'], 'dif': '1200'}
{'pro_id': '53B', 'name': 'Blog Photo', 'tags': ['binary search', 'implementation'], 'dif': '1900'}
{'pro_id': '53A', 'name': 'Autocomplete', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '52C', 'name': 'Circular RMQ', 'tags': ['data structures'], 'dif': '2200'}
{'pro_id': '52B', 'name': 'Right Triangles', 'tags': ['combinatorics'], 'dif': '1600'}
{'pro_id': '52A', 'name': '123-sequence', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '51F', 'name': 'Caterpillar', 'tags': ['dfs and similar', 'dp', 'graphs', 'trees'], 'dif': '2600'}
{'pro_id': '51E', 'name': 'Pentagon', 'tags': ['combinatorics', 'graphs', 'matrices'], 'dif': '2300'}
{'pro_id': '51D', 'name': 'Geometrical problem', 'tags': ['implementation'], 'dif': '2100'}
{'pro_id': '51C', 'name': 'Three Base Stations', 'tags': ['binary search', 'greedy'], 'dif': '1800'}
{'pro_id': '51B', 'name': 'bHTML Tables Analisys', 'tags': ['expression parsing'], 'dif': '1700'}
{'pro_id': '51A', 'name': "Cheaterius's Problem", 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '50E', 'name': 'Square Equation Roots', 'tags': ['math'], 'dif': '2300'}
{'pro_id': '50D', 'name': 'Bombing', 'tags': ['binary search', 'dp', 'probabilities'], 'dif': '2100'}
{'pro_id': '50C', 'name': 'Happy Farm 5', 'tags': ['geometry'], 'dif': '2000'}
{'pro_id': '50B', 'name': 'Choosing Symbol Pairs', 'tags': ['strings'], 'dif': '1500'}
{'pro_id': '50A', 'name': 'Domino piling', 'tags': ['greedy', 'math'], 'dif': '800'}
{'pro_id': '49E', 'name': 'Common ancestor', 'tags': ['dp'], 'dif': '2200'}
{'pro_id': '49D', 'name': 'Game', 'tags': ['brute force', 'dp', 'implementation'], 'dif': '1700'}
{'pro_id': '49C', 'name': 'Disposition', 'tags': ['constructive algorithms', 'math'], 'dif': '1700'}
{'pro_id': '49B', 'name': 'Sum', 'tags': ['math'], 'dif': '1600'}
{'pro_id': '49A', 'name': 'Sleuth', 'tags': ['implementation'], 'dif': '800'}
{'pro_id': '48H', 'name': 'Black and White', 'tags': ['constructive algorithms'], 'dif': '2600'}
{'pro_id': '48G', 'name': 'Galaxy Union', 'tags': ['dp', 'trees', 'two pointers'], 'dif': '2600'}
{'pro_id': '48F', 'name': 'Snow sellers', 'tags': ['greedy', 'sortings'], 'dif': '2600'}
{'pro_id': '48E', 'name': 'Ivan the Fool VS Gorynych the Dragon', 'tags': ['dp', 'games', 'graphs'], 'dif': '2100'}
{'pro_id': '48D', 'name': 'Permutations', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '48C', 'name': 'The Race', 'tags': ['math'], 'dif': '1800'}
{'pro_id': '48B', 'name': 'Land Lot', 'tags': ['brute force', 'implementation'], 'dif': '1300'}
{'pro_id': '48A', 'name': 'Rock-paper-scissors', 'tags': ['implementation', 'schedules'], 'dif': '900'}
{'pro_id': '47E', 'name': 'Cannon', 'tags': ['data structures', 'geometry', 'sortings'], 'dif': '2100'}
{'pro_id': '47D', 'name': 'Safe', 'tags': ['brute force'], 'dif': '2100'}
{'pro_id': '47C', 'name': 'Crossword', 'tags': ['implementation'], 'dif': '2000'}
{'pro_id': '47B', 'name': 'Coins', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '47A', 'name': 'Triangular numbers', 'tags': ['brute force', 'math'], 'dif': '800'}
{'pro_id': '46G', 'name': "Emperor's Problem", 'tags': ['geometry'], 'dif': '2500'}
{'pro_id': '46F', 'name': 'Hercule Poirot Problem', 'tags': ['dsu', 'graphs'], 'dif': '2300'}
{'pro_id': '46E', 'name': 'Comb', 'tags': ['data structures', 'dp'], 'dif': '1900'}
{'pro_id': '46D', 'name': 'Parking Lot', 'tags': ['data structures', 'implementation'], 'dif': '1800'}
{'pro_id': '46C', 'name': 'Hamsters and Tigers', 'tags': ['two pointers'], 'dif': '1700'}
{'pro_id': '46B', 'name': 'T-shirts from Sponsor', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '46A', 'name': 'Ball Game', 'tags': ['brute force', 'implementation'], 'dif': '900'}
{'pro_id': '45J', 'name': 'Planting Trees', 'tags': ['constructive algorithms'], 'dif': '1900'}
{'pro_id': '45I', 'name': 'TCMCF+++', 'tags': ['greedy'], 'dif': '1500'}
{'pro_id': '45H', 'name': 'Road Problem', 'tags': ['graphs'], 'dif': '2600'}
{'pro_id': '45G', 'name': 'Prime Problem', 'tags': ['number theory'], 'dif': '2300'}
{'pro_id': '45F', 'name': 'Goats and Wolves', 'tags': ['greedy'], 'dif': '2600'}
{'pro_id': '45E', 'name': 'Director', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2100'}
{'pro_id': '45D', 'name': 'Event Dates', 'tags': ['greedy', 'meet-in-the-middle', 'sortings'], 'dif': '1900'}
{'pro_id': '45C', 'name': 'Dancing Lessons', 'tags': ['data structures'], 'dif': '2000'}
{'pro_id': '45B', 'name': 'School', 'tags': ['dp', 'dsu'], 'dif': '2400'}
{'pro_id': '45A', 'name': 'Codecraft III', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '44J', 'name': 'Triminoes', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2000'}
{'pro_id': '44I', 'name': 'Toys', 'tags': ['brute force', 'combinatorics'], 'dif': '2400'}
{'pro_id': '44H', 'name': 'Phone Number', 'tags': ['dp'], 'dif': '1800'}
{'pro_id': '44G', 'name': 'Shooting Gallery', 'tags': ['data structures', 'implementation'], 'dif': '2600'}
{'pro_id': '44F', 'name': 'BerPaint', 'tags': ['geometry', 'graphs'], 'dif': '2600'}
{'pro_id': '44E', 'name': 'Anfisa the Monkey', 'tags': ['dp'], 'dif': '1500'}
{'pro_id': '44D', 'name': 'Hyperdrive', 'tags': ['math'], 'dif': '1900'}
{'pro_id': '44C', 'name': 'Holidays', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '44B', 'name': 'Cola', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '44A', 'name': 'Indian Summer', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '43E', 'name': 'Race', 'tags': ['brute force', 'implementation', 'two pointers'], 'dif': '2200'}
{'pro_id': '43D', 'name': 'Journey', 'tags': ['brute force', 'constructive algorithms', 'implementation'], 'dif': '1900'}
{'pro_id': '43C', 'name': 'Lucky Tickets', 'tags': ['greedy'], 'dif': '1400'}
{'pro_id': '43B', 'name': 'Letter', 'tags': ['implementation', 'strings'], 'dif': '1200'}
{'pro_id': '43A', 'name': 'Football', 'tags': ['strings'], 'dif': '1100'}
{'pro_id': '42E', 'name': 'Baldman and the military', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '2700'}
{'pro_id': '42D', 'name': 'Strange town', 'tags': ['constructive algorithms', 'math'], 'dif': '2300'}
{'pro_id': '42C', 'name': 'Safe cracking', 'tags': ['brute force', 'constructive algorithms'], 'dif': '2200'}
{'pro_id': '42B', 'name': 'Game of chess unfinished', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '42A', 'name': 'Guilty --- to the kitchen!', 'tags': ['greedy', 'implementation'], 'dif': '1500'}
{'pro_id': '41E', 'name': '3-cycles', 'tags': ['constructive algorithms', 'graphs', 'greedy'], 'dif': '1900'}
{'pro_id': '41D', 'name': 'Pawn', 'tags': ['dp'], 'dif': '2000'}
{'pro_id': '41C', 'name': 'Email address', 'tags': ['expression parsing', 'implementation'], 'dif': '1400'}
{'pro_id': '41B', 'name': 'Martian Dollar', 'tags': ['brute force'], 'dif': '1500'}
{'pro_id': '41A', 'name': 'Translation', 'tags': ['implementation', 'strings'], 'dif': '900'}
{'pro_id': '40E', 'name': 'Number Table', 'tags': ['combinatorics'], 'dif': '2500'}
{'pro_id': '40D', 'name': 'Interesting Sequence', 'tags': ['math'], 'dif': '2600'}
{'pro_id': '40C', 'name': 'Berland Square', 'tags': ['implementation', 'math'], 'dif': '2200'}
{'pro_id': '40B', 'name': 'Repaintings', 'tags': ['math'], 'dif': '1600'}
{'pro_id': '40A', 'name': 'Find Color', 'tags': ['constructive algorithms', 'geometry', 'implementation', 'math'], 'dif': '1300'}
{'pro_id': '39K', 'name': 'Testing', 'tags': [], 'dif': '2700'}
{'pro_id': '39J', 'name': 'Spelling Check', 'tags': ['hashing', 'implementation', 'strings'], 'dif': '1600'}
{'pro_id': '39I', 'name': 'Tram', 'tags': [], 'dif': '2700'}
{'pro_id': '39H', 'name': 'Multiplication Table', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '39G', 'name': 'Inverse Function', 'tags': ['implementation'], 'dif': '2500'}
{'pro_id': '39F', 'name': 'Pacifist frogs', 'tags': ['implementation'], 'dif': '1300'}
{'pro_id': '39E', 'name': 'What Has Dirichlet Got to Do with That?', 'tags': ['dp', 'games'], 'dif': '2100'}
{'pro_id': '39D', 'name': 'Cubical Planet', 'tags': ['math'], 'dif': '1100'}
{'pro_id': '39C', 'name': 'Moon Craters', 'tags': ['dp', 'sortings'], 'dif': '2300'}
{'pro_id': '39B', 'name': 'Company Income Growth', 'tags': ['greedy'], 'dif': '1200'}
{'pro_id': '39A', 'name': 'C*++ Calculations', 'tags': ['expression parsing', 'greedy'], 'dif': '2100'}
{'pro_id': '38H', 'name': 'The Great Marathon', 'tags': ['dp'], 'dif': '2500'}
{'pro_id': '38G', 'name': 'Queue', 'tags': ['data structures'], 'dif': '2300'}
{'pro_id': '38F', 'name': 'Smart Boy', 'tags': ['dp', 'games', 'strings'], 'dif': '2200'}
{'pro_id': '38E', 'name': "Let's Go Rolling!", 'tags': ['dp', 'sortings'], 'dif': '1800'}
{'pro_id': '38D', 'name': 'Vasya the Architect', 'tags': ['implementation'], 'dif': '2000'}
{'pro_id': '38C', 'name': 'Blinds', 'tags': ['brute force'], 'dif': '1400'}
{'pro_id': '38B', 'name': 'Chess', 'tags': ['brute force', 'implementation', 'math'], 'dif': '1200'}
{'pro_id': '38A', 'name': 'Army', 'tags': ['implementation'], 'dif': '900'}
{'pro_id': '37E', 'name': 'Trial for Chief', 'tags': ['graphs', 'greedy', 'shortest paths'], 'dif': '2600'}
{'pro_id': '37D', 'name': 'Lesson Timetable', 'tags': ['combinatorics', 'dp', 'math'], 'dif': '2300'}
{'pro_id': '37C', 'name': 'Old Berland Language', 'tags': ['data structures', 'greedy', 'trees'], 'dif': '1900'}
{'pro_id': '37B', 'name': 'Computer Game', 'tags': ['greedy', 'implementation'], 'dif': '1800'}
{'pro_id': '37A', 'name': 'Towers', 'tags': ['sortings'], 'dif': '1100'}
{'pro_id': '36E', 'name': 'Two Paths', 'tags': ['constructive algorithms', 'dsu', 'graphs', 'implementation'], 'dif': '2500'}
{'pro_id': '36D', 'name': 'New Game with a Chess Piece', 'tags': ['games'], 'dif': '2200'}
{'pro_id': '36C', 'name': 'Bowls', 'tags': ['geometry', 'implementation'], 'dif': '2200'}
{'pro_id': '36B', 'name': 'Fractal', 'tags': ['implementation'], 'dif': '1600'}
{'pro_id': '36A', 'name': 'Extra-terrestrial Intelligence', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '35E', 'name': 'Parade', 'tags': ['data structures', 'sortings'], 'dif': '2300'}
{'pro_id': '35D', 'name': 'Animals', 'tags': ['dp', 'greedy'], 'dif': '1700'}
{'pro_id': '35C', 'name': 'Fire Again', 'tags': ['brute force', 'dfs and similar', 'shortest paths'], 'dif': '1600'}
{'pro_id': '35B', 'name': 'Warehouse', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '35A', 'name': 'Shell Game', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '34E', 'name': 'Collisions', 'tags': ['brute force', 'implementation', 'math'], 'dif': '2100'}
{'pro_id': '34D', 'name': 'Road Map', 'tags': ['dfs and similar', 'graphs'], 'dif': '1700'}
{'pro_id': '34C', 'name': 'Page Numbers', 'tags': ['expression parsing', 'implementation', 'sortings', 'strings'], 'dif': '1400'}
{'pro_id': '34B', 'name': 'Sale', 'tags': ['greedy', 'sortings'], 'dif': '1000'}
{'pro_id': '34A', 'name': 'Reconnaissance 2', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '33E', 'name': 'Helper', 'tags': [], 'dif': '2500'}
{'pro_id': '33D', 'name': 'Knights', 'tags': ['geometry', 'graphs', 'shortest paths', 'sortings'], 'dif': '2000'}
{'pro_id': '33C', 'name': 'Wonderful Randomized Sum', 'tags': ['greedy'], 'dif': '1800'}
{'pro_id': '33B', 'name': 'String Problem', 'tags': ['shortest paths'], 'dif': '1800'}
{'pro_id': '33A', 'name': 'What is for dinner?', 'tags': ['greedy', 'implementation'], 'dif': '1300'}
{'pro_id': '32E', 'name': 'Hide-and-Seek', 'tags': ['geometry', 'implementation'], 'dif': '2300'}
{'pro_id': '32D', 'name': 'Constellation', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '32C', 'name': 'Flea', 'tags': ['math'], 'dif': '1700'}
{'pro_id': '32B', 'name': 'Borze', 'tags': ['expression parsing', 'implementation'], 'dif': '900'}
{'pro_id': '32A', 'name': 'Reconnaissance', 'tags': ['brute force'], 'dif': '800'}
{'pro_id': '31E', 'name': 'TV Game', 'tags': ['dp'], 'dif': '2200'}
{'pro_id': '31D', 'name': 'Chocolate', 'tags': ['dfs and similar', 'implementation'], 'dif': '2000'}
{'pro_id': '31C', 'name': 'Schedule', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '31B', 'name': 'Sysadmin Bob', 'tags': ['greedy', 'implementation', 'strings'], 'dif': '1500'}
{'pro_id': '31A', 'name': 'Worms Evolution', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '30E', 'name': 'Tricky and Clever Password', 'tags': ['binary search', 'constructive algorithms', 'data structures', 'greedy', 'hashing', 'strings'], 'dif': '2700'}
{'pro_id': '30D', 'name': "King's Problem?", 'tags': ['geometry', 'greedy'], 'dif': '2600'}
{'pro_id': '30C', 'name': 'Shooting Gallery', 'tags': ['dp', 'probabilities'], 'dif': '1800'}
{'pro_id': '30B', 'name': 'Codeforces World Finals', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '30A', 'name': 'Accounting', 'tags': ['brute force', 'math'], 'dif': '1500'}
{'pro_id': '29E', 'name': 'Quarrel', 'tags': ['graphs', 'shortest paths'], 'dif': '2400'}
{'pro_id': '29D', 'name': 'Ant on the Tree', 'tags': ['constructive algorithms', 'dfs and similar', 'trees'], 'dif': '1900'}
{'pro_id': '29C', 'name': 'Mail Stamps', 'tags': ['data structures', 'dfs and similar', 'graphs', 'implementation'], 'dif': '1700'}
{'pro_id': '29B', 'name': 'Traffic Lights', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '29A', 'name': 'Spit Problem', 'tags': ['brute force'], 'dif': '1000'}
{'pro_id': '28E', 'name': 'DravDe saves the world', 'tags': ['geometry', 'math'], 'dif': '2700'}
{'pro_id': '28D', 'name': "Don't fear, DravDe is kind", 'tags': ['binary search', 'data structures', 'dp', 'hashing'], 'dif': '2600'}
{'pro_id': '28C', 'name': 'Bath Queue', 'tags': ['combinatorics', 'dp', 'probabilities'], 'dif': '2700'}
{'pro_id': '28B', 'name': 'pSort', 'tags': ['dfs and similar', 'dsu', 'graphs'], 'dif': '1600'}
{'pro_id': '28A', 'name': 'Bender Problem', 'tags': ['implementation'], 'dif': '2200'}
{'pro_id': '27E', 'name': 'Number With The Given Amount Of Divisors', 'tags': ['brute force', 'dp', 'number theory'], 'dif': '2100'}
{'pro_id': '27D', 'name': 'Ring Road 2', 'tags': ['2-sat', 'dfs and similar', 'dsu', 'graphs'], 'dif': '2300'}
{'pro_id': '27C', 'name': 'Unordered Subsequence', 'tags': ['constructive algorithms', 'greedy'], 'dif': '2000'}
{'pro_id': '27B', 'name': 'Tournament', 'tags': ['bitmasks', 'brute force', 'dfs and similar', 'greedy'], 'dif': '2000'}
{'pro_id': '27A', 'name': 'Next Test', 'tags': ['implementation', 'sortings'], 'dif': '1900'}
{'pro_id': '26E', 'name': 'Multithreading', 'tags': ['constructive algorithms'], 'dif': '2700'}
{'pro_id': '26D', 'name': 'Tickets', 'tags': ['combinatorics', 'math', 'probabilities'], 'dif': '2800'}
{'pro_id': '26C', 'name': 'Parquet', 'tags': ['combinatorics', 'constructive algorithms'], 'dif': '2200'}
{'pro_id': '26B', 'name': 'Regular Bracket Sequence', 'tags': ['greedy'], 'dif': '2300'}
{'pro_id': '26A', 'name': 'Almost Prime', 'tags': ['number theory'], 'dif': '2400'}
{'pro_id': '25E', 'name': 'Test', 'tags': ['hashing', 'strings'], 'dif': '2300'}
{'pro_id': '25D', 'name': 'Roads not only in Berland', 'tags': ['dsu', 'graphs', 'trees'], 'dif': '1900'}
{'pro_id': '25C', 'name': 'Roads in Berland', 'tags': ['graphs', 'shortest paths'], 'dif': '1800'}
{'pro_id': '25B', 'name': 'Phone numbers', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '25A', 'name': 'IQ test', 'tags': ['brute force'], 'dif': '1300'}
{'pro_id': '24E', 'name': 'Berland collider', 'tags': ['binary search'], 'dif': '2300'}
{'pro_id': '24D', 'name': 'Broken robot', 'tags': ['dp', 'probabilities'], 'dif': '2400'}
{'pro_id': '24C', 'name': 'Sequence of points', 'tags': ['geometry', 'implementation', 'math'], 'dif': '1800'}
{'pro_id': '24B', 'name': 'F1 Champions', 'tags': ['implementation'], 'dif': '1500'}
{'pro_id': '24A', 'name': 'Ring road', 'tags': ['graphs'], 'dif': '1400'}
{'pro_id': '23E', 'name': 'Tree', 'tags': ['dp'], 'dif': '2500'}
{'pro_id': '23D', 'name': 'Tetragon', 'tags': ['geometry', 'math'], 'dif': '2600'}
{'pro_id': '23C', 'name': 'Oranges and Apples', 'tags': ['constructive algorithms', 'sortings'], 'dif': '2500'}
{'pro_id': '23B', 'name': 'Party', 'tags': ['constructive algorithms', 'graphs', 'math'], 'dif': '1600'}
{'pro_id': '23A', 'name': "You're Given a String...", 'tags': ['brute force', 'greedy'], 'dif': '1200'}
{'pro_id': '22E', 'name': 'Scheme', 'tags': ['dfs and similar', 'graphs', 'trees'], 'dif': '2400'}
{'pro_id': '22D', 'name': 'Segments', 'tags': ['greedy', 'sortings'], 'dif': '1900'}
{'pro_id': '22C', 'name': 'System Administrator', 'tags': ['graphs'], 'dif': '1700'}
{'pro_id': '22B', 'name': 'Bargaining Table', 'tags': ['brute force', 'dp'], 'dif': '1600'}
{'pro_id': '22A', 'name': 'Second Order Statistics', 'tags': ['brute force'], 'dif': '1000'}
{'pro_id': '21D', 'name': 'Traveling Graph', 'tags': ['bitmasks', 'graph matchings', 'graphs'], 'dif': '2500'}
{'pro_id': '21C', 'name': 'Stripe 2', 'tags': ['binary search', 'dp', 'sortings'], 'dif': '2300'}
{'pro_id': '21B', 'name': 'Intersection', 'tags': ['implementation', 'math'], 'dif': '2300'}
{'pro_id': '21A', 'name': 'Jabber ID', 'tags': ['implementation', 'strings'], 'dif': '2300'}
{'pro_id': '20C', 'name': 'Dijkstra?', 'tags': ['graphs', 'shortest paths'], 'dif': '2100'}
{'pro_id': '20B', 'name': 'Equation', 'tags': ['math'], 'dif': '2600'}
{'pro_id': '20A', 'name': 'BerOS file system', 'tags': ['implementation'], 'dif': '2600'}
{'pro_id': '19E', 'name': 'Fairy', 'tags': ['dfs and similar', 'divide and conquer', 'dsu'], 'dif': '2800'}
{'pro_id': '19D', 'name': 'Points', 'tags': ['data structures'], 'dif': '2800'}
{'pro_id': '19C', 'name': 'Deletion of Repeats', 'tags': ['greedy', 'hashing', 'string suffix structures'], 'dif': '2200'}
{'pro_id': '19B', 'name': 'Checkout Assistant', 'tags': ['dp'], 'dif': '1900'}
{'pro_id': '19A', 'name': 'World Football Cup', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '18E', 'name': 'Flag 2', 'tags': ['dp'], 'dif': '2400'}
{'pro_id': '18D', 'name': 'Seller Bob', 'tags': ['brute force', 'dp', 'greedy'], 'dif': '2100'}
{'pro_id': '18C', 'name': 'Stripe', 'tags': ['data structures', 'implementation'], 'dif': '1400'}
{'pro_id': '18B', 'name': 'Platforms', 'tags': ['brute force', 'math'], 'dif': '1700'}
{'pro_id': '18A', 'name': 'Triangle', 'tags': ['brute force', 'geometry'], 'dif': '1600'}
{'pro_id': '17E', 'name': 'Palisection', 'tags': ['strings'], 'dif': '2900'}
{'pro_id': '17D', 'name': 'Notepad', 'tags': ['number theory'], 'dif': '2300'}
{'pro_id': '17C', 'name': 'Balance', 'tags': ['dp'], 'dif': '2500'}
{'pro_id': '17B', 'name': 'Hierarchy', 'tags': ['dfs and similar', 'dsu', 'greedy', 'shortest paths'], 'dif': '1600'}
{'pro_id': '17A', 'name': 'Noldbach problem', 'tags': ['brute force', 'math', 'number theory'], 'dif': '1100'}
{'pro_id': '16E', 'name': 'Fish', 'tags': ['bitmasks', 'dp', 'probabilities'], 'dif': '2100'}
{'pro_id': '16D', 'name': 'Logging', 'tags': ['implementation', 'strings'], 'dif': '2000'}
{'pro_id': '16C', 'name': 'Monitor', 'tags': ['binary search', 'number theory'], 'dif': '1800'}
{'pro_id': '16B', 'name': 'Burglar and Matches', 'tags': ['greedy', 'implementation', 'sortings'], 'dif': '1300'}
{'pro_id': '16A', 'name': 'Flag', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '15E', 'name': 'Triangles', 'tags': ['combinatorics', 'dp'], 'dif': '2600'}
{'pro_id': '15D', 'name': 'Map', 'tags': ['data structures', 'implementation', 'sortings'], 'dif': '2500'}
{'pro_id': '15C', 'name': 'Industrial Nim', 'tags': ['games'], 'dif': '2000'}
{'pro_id': '15B', 'name': 'Laser', 'tags': ['math'], 'dif': '1700'}
{'pro_id': '15A', 'name': 'Cottage Village', 'tags': ['implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '14E', 'name': 'Camels', 'tags': ['dp'], 'dif': '2000'}
{'pro_id': '14D', 'name': 'Two Paths', 'tags': ['dfs and similar', 'dp', 'graphs', 'shortest paths', 'trees', 'two pointers'], 'dif': '2100'}
{'pro_id': '14C', 'name': 'Four Segments', 'tags': ['brute force', 'constructive algorithms', 'geometry', 'implementation', 'math'], 'dif': '1800'}
{'pro_id': '14B', 'name': 'Young Photographer', 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '14A', 'name': 'Letter', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '13E', 'name': 'Holes', 'tags': ['data structures', 'dsu'], 'dif': '2700'}
{'pro_id': '13D', 'name': 'Triangles', 'tags': ['dp', 'geometry'], 'dif': '2500'}
{'pro_id': '13C', 'name': 'Sequence', 'tags': ['dp', 'sortings'], 'dif': '2200'}
{'pro_id': '13B', 'name': 'Letter A', 'tags': ['geometry', 'implementation'], 'dif': '2000'}
{'pro_id': '13A', 'name': 'Numbers', 'tags': ['implementation', 'math'], 'dif': '1200'}
{'pro_id': '12E', 'name': 'Start of the session', 'tags': ['constructive algorithms'], 'dif': '2100'}
{'pro_id': '12D', 'name': 'Ball', 'tags': ['data structures', 'sortings'], 'dif': '2400'}
{'pro_id': '12C', 'name': 'Fruits', 'tags': ['implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '12B', 'name': 'Correct Solution?', 'tags': ['implementation', 'sortings'], 'dif': '1400'}
{'pro_id': '12A', 'name': 'Super Agent', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '11E', 'name': 'Forward, march!', 'tags': ['binary search', 'dp', 'greedy'], 'dif': '2800'}
{'pro_id': '11D', 'name': 'A Simple Task', 'tags': ['bitmasks', 'dp', 'graphs'], 'dif': '2200'}
{'pro_id': '11C', 'name': 'How Many Squares?', 'tags': ['implementation'], 'dif': '2200'}
{'pro_id': '11B', 'name': 'Jumping Jack', 'tags': ['math'], 'dif': '1700'}
{'pro_id': '11A', 'name': 'Increasing Sequence', 'tags': ['constructive algorithms', 'implementation', 'math'], 'dif': '1100'}
{'pro_id': '10E', 'name': 'Greedy Change', 'tags': ['constructive algorithms'], 'dif': '2600'}
{'pro_id': '10D', 'name': 'LCIS', 'tags': ['dp'], 'dif': '2700'}
{'pro_id': '10C', 'name': 'Digital Root', 'tags': ['number theory'], 'dif': '2000'}
{'pro_id': '10B', 'name': 'Cinema Cashier', 'tags': ['dp', 'implementation'], 'dif': '1600'}
{'pro_id': '10A', 'name': 'Power Consumption Calculation', 'tags': ['implementation'], 'dif': '1100'}
{'pro_id': '9E', 'name': 'Interestring graph and Apples', 'tags': ['dfs and similar', 'dsu', 'graphs'], 'dif': '2300'}
{'pro_id': '9D', 'name': 'How many trees?', 'tags': ['combinatorics', 'divide and conquer', 'dp'], 'dif': '2000'}
{'pro_id': '9C', 'name': "Hexadecimal's Numbers", 'tags': ['brute force', 'implementation', 'math'], 'dif': '1500'}
{'pro_id': '9B', 'name': 'Running Student', 'tags': ['brute force', 'geometry', 'implementation'], 'dif': '1500'}
{'pro_id': '9A', 'name': 'Die Roll', 'tags': ['math', 'probabilities'], 'dif': '1000'}
{'pro_id': '8E', 'name': 'Beads', 'tags': ['dp', 'graphs'], 'dif': '2600'}
{'pro_id': '8D', 'name': 'Two Friends', 'tags': ['binary search', 'geometry'], 'dif': '2600'}
{'pro_id': '8C', 'name': 'Looking for Order', 'tags': ['bitmasks', 'dp'], 'dif': '2000'}
{'pro_id': '8B', 'name': 'Obsession with Robots', 'tags': ['constructive algorithms', 'graphs', 'implementation'], 'dif': '1500'}
{'pro_id': '8A', 'name': 'Train and Peter', 'tags': ['strings'], 'dif': '1400'}
{'pro_id': '7E', 'name': 'Defining Macros', 'tags': ['dp', 'expression parsing', 'implementation'], 'dif': '2500'}
{'pro_id': '7D', 'name': 'Palindrome Degree', 'tags': ['hashing', 'strings'], 'dif': '2200'}
{'pro_id': '7C', 'name': 'Line', 'tags': ['math', 'number theory'], 'dif': '1800'}
{'pro_id': '7B', 'name': 'Memory Manager', 'tags': ['implementation'], 'dif': '1700'}
{'pro_id': '7A', 'name': 'Kalevitch and Chess', 'tags': ['brute force', 'constructive algorithms'], 'dif': '1300'}
{'pro_id': '6E', 'name': 'Exposition', 'tags': ['binary search', 'data structures', 'dsu', 'trees', 'two pointers'], 'dif': '1900'}
{'pro_id': '6D', 'name': 'Lizards and Basements 2', 'tags': ['brute force', 'dp'], 'dif': '2100'}
{'pro_id': '6C', 'name': 'Alice, Bob and Chocolate', 'tags': ['greedy', 'two pointers'], 'dif': '1500'}
{'pro_id': '6B', 'name': "President's Office", 'tags': ['implementation'], 'dif': '1400'}
{'pro_id': '6A', 'name': 'Triangle', 'tags': ['brute force', 'geometry'], 'dif': '1300'}
{'pro_id': '5E', 'name': 'Bindian Signalizing', 'tags': ['data structures'], 'dif': '2400'}
{'pro_id': '5D', 'name': 'Follow Traffic Rules', 'tags': ['implementation', 'math'], 'dif': '2100'}
{'pro_id': '5C', 'name': 'Longest Regular Bracket Sequence', 'tags': ['constructive algorithms', 'data structures', 'dp', 'greedy', 'sortings', 'strings'], 'dif': '1900'}
{'pro_id': '5B', 'name': 'Center Alignment', 'tags': ['implementation', 'strings'], 'dif': '1400'}
{'pro_id': '5A', 'name': 'Chat Servers Outgoing Traffic', 'tags': ['implementation'], 'dif': '1200'}
{'pro_id': '4D', 'name': 'Mysterious Present', 'tags': ['dp', 'sortings'], 'dif': '1800'}
{'pro_id': '4C', 'name': 'Registration System', 'tags': ['data structures', 'hashing', 'implementation'], 'dif': '1500'}
{'pro_id': '4B', 'name': 'Before an Exam', 'tags': ['constructive algorithms', 'greedy'], 'dif': '1500'}
{'pro_id': '4A', 'name': 'Watermelon', 'tags': ['brute force', 'math'], 'dif': '1200'}
{'pro_id': '3D', 'name': 'Least Cost Bracket Sequence', 'tags': ['greedy'], 'dif': '2500'}
{'pro_id': '3C', 'name': 'Tic-tac-toe', 'tags': ['brute force', 'games', 'implementation'], 'dif': '1700'}
{'pro_id': '3B', 'name': 'Lorry', 'tags': ['greedy', 'sortings'], 'dif': '1900'}
{'pro_id': '3A', 'name': 'Shortest path of the king', 'tags': ['greedy', 'shortest paths'], 'dif': '1200'}
{'pro_id': '2C', 'name': 'Commentator problem', 'tags': ['geometry'], 'dif': '2600'}
{'pro_id': '2B', 'name': 'The least round way', 'tags': ['dp', 'math'], 'dif': '2000'}
{'pro_id': '2A', 'name': 'Winner', 'tags': ['hashing', 'implementation'], 'dif': '1600'}
{'pro_id': '1C', 'name': 'Ancient Berland Circus', 'tags': ['geometry', 'math'], 'dif': '2100'}
{'pro_id': '1B', 'name': 'Spreadsheet', 'tags': ['implementation', 'math'], 'dif': '1700'}
{'pro_id': '1A', 'name': 'Theatre Square', 'tags': ['math'], 'dif': '1300'}
